{"version":3,"sources":["app-state.js","fire.js","utils.ts","appReducer.js","LoggedOut.tsx","useAuth.js","Day.tsx","constants/AppConstants.ts","Calendar.tsx","DeleteGoalRow.tsx","GoalList.tsx","HeaderBar.tsx","Notes.tsx","colors.js","BarGraph.tsx","DonutGraph.tsx","Analytics.tsx","LoggedIn.tsx","App.js","serviceWorker.js","index.js"],"names":["Context","createContext","AppStateProvider","_ref","reducer","_ref$initialState","initialState","children","value","useReducer","react_default","a","createElement","Provider","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","_callee","uid","goal","daysCompletedCollection","regenerator_default","wrap","_context","prev","next","collection","doc","where","get","then","snapshot","docs","forEach","ref","delete","stop","_callee2","_context2","_callee3","color","_context3","abrupt","add","created","Date","_callee4","completedDay","_context4","console","log","date","notes","updateNotesForCompletedDay","_x10","_x11","_updateNotesForCompletedDay","apply","this","arguments","_callee5","_context5","id","update","_callee6","_context6","signup","_x15","_signup","_callee7","email","password","_ref2","user","_context7","auth","createUserWithEmailAndPassword","sent","concat","set","t0","logout","signOut","authAttempted","goals","selectedGoal","selectedDays","workout","appStateReducer","state","action","type","Object","objectSpread","LoggedOut","_useState","useState","_useState2","slicedToArray","focus","setFocus","_useState3","_useState4","isLogin","setIsLogin","_useState5","_useState6","error","setError","_useState7","_useState8","setLoading","loginEmailRef","useRef","loginPasswordRef","useOutsideAlerter","signupEmailRef","signupPasswordRef","handleLogin","asyncToGenerator","mark","event","preventDefault","current","signInWithEmailAndPassword","_x","handleSignup","_x2","handleClickOutside","contains","target","useEffect","document","addEventListener","removeEventListener","Login","Heading","CreateAccount","TextLink","onClick","LoginInput","placeholder","LoginButton","ErrorMessage","Signup","styled","u","_templateObject","div","_templateObject2","_templateObject3","h1","_templateObject4","_templateObject5","input","_templateObject6","props","button","_templateObject7","_templateObject8","useAuth","_useAppState","useContext","_useAppState2","_useAppState2$","dispatch","callback","onAuthStateChanged","Day2","completedColor","curGoal","day","month","year","goalsCompletedOnDay","selectedGoals","colorMap","handleDayCompleted","completedDays","disabled","handleNoteSelected","selectedDayForNotes","myDate","setMyDate","isTodaysDate","setIsTodaysDate","doesDayHaveNote","setDayHasNote","notesSelected","setNotesSelected","_useState9","_useState10","backgroundColor","setBackgroundColor","_useState11","_useState12","toggleDaySelected","handleDayClicked","length","filter","find","e","toString","padStart","today","dd","String","getDate","mm","getMonth","yyyy","getFullYear","display","Button","style","Container","DayNumber","className","marginRight","marginTop","stopPropagation","mutliSelectSquares","squares","push","MultiSelectSquare","createColorSquares","Squares","getColorDisplay","react","Day_templateObject","Day_templateObject2","Day_templateObject3","Day_templateObject4","Day_templateObject5","GOAL_COLORS","MONTH_DAYS","01","02","03","04","05","06","07","08","09","10","11","12","getWindowDimensions","_window","window","width","innerWidth","height","innerHeight","Calendar","curMonth","handleDayRemoved","animatedProps","useSpring","opacity","from","DaysOfWeek","myMonth","dayOfWeek","week","firstOfMonth","getDay","DayOfWeek","unusedDay","_loop","i","daysPerRow","parseInt","DeselectButton","calendarYear","monthNum","getYear","Calendar_Container","map","animated","Calendar_templateObject","Calendar_templateObject2","Calendar_templateObject3","DeleteGoalRow","index","undoDelete","confirmDelete","NewListRow","paddingLeft","paddingRight","DeleteGoalRow_templateObject","GoalsList","existingGoals","updateSelected","addToColorMap","removeFromColorMap","handleGoalSelected","handleGoalRemoved","creationDateMap","newGoal","setNewGoal","goalsToDelete","setGoalsToDelete","setGoals","windowDimensions","setWindowDimensions","handleDelete","idx","_x3","_x4","_deleteGoal","deleteGoal","g","_removeDaysCompleted","removeDaysCompleted","nextGoalIdx","GoalContainer","InnerContainer","InputContainer","MyForm","GoalInput","onChange","AddGoalButton","includes","goalColor","_x5","_x6","_x7","_createGoal","createGoal","toConsumableArray","ListContainer","windowHeight","JSON","parse","stringify","goalToDelete","GoalList_NewListRow","selected","checked","getElementById","toDelete","element","ListRowLeft","Circle","ListRowInfo","Goal","StartDate","ListRowRight","Checkbox","defaultChecked","DeleteButton","DeleteIcon","GoalList_templateObject","GoalList_templateObject2","GoalList_templateObject3","form","GoalList_templateObject4","GoalList_templateObject5","GoalList_templateObject6","GoalList_templateObject7","GoalList_templateObject8","_templateObject9","_templateObject10","_templateObject11","span","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","label","_templateObject17","monthName","1","2","3","4","5","6","7","8","9","HeaderBar","updateCurMonth","toggleAnalytics","analyticsSelected","toggleAnalyticsSelected","Header","AppTitle","VerticalBar","MonthAndLogoutContainer","MonthContainer","CurMonth","MonthButton","AnalyticsButton","analyticsOn","HeaderBar_Button","HeaderBar_templateObject","HeaderBar_templateObject2","HeaderBar_templateObject3","HeaderBar_templateObject4","HeaderBar_templateObject5","HeaderBar_templateObject6","HeaderBar_templateObject7","HeaderBar_templateObject8","HeaderBar_templateObject9","Notes","handleNoteAdded","setGoal","setDate","note","setNote","showSuccess","Notes_Container","NewContainer","SaveButton","dayToUpdate","OtherDisplay","NotesInput","spellCheck","Remainder","Placeholder","Notes_templateObject","Notes_templateObject2","Notes_templateObject3","Notes_templateObject4","Notes_templateObject5","Notes_templateObject6","textarea","Notes_templateObject7","Notes_templateObject8","colors","colorSchemas","britecharts","grey","orange","blueGreen","teal","green","yellow","pink","purple","red","colorSchemasHuman","colorGradients","greenBlue","orangePink","bluePurple","colorGradientsHuman","singleColors","aloeGreen","greenColor","blueColor","yellowColor","orangeColor","pinkColor","purpleColor","singleColorsHuman","BarGraph","barData","name","numDaysCompletedInPrevWeek","weeksAgo","days","range","curDay","firstDay","lastDay","getPreviousWeek","total","startDate","endDate","dateArray","split","startArray","endArray","isDayInRange","britecharts_react_min","data","isHorizontal","margin","left","colorSchema","DonutGraph","donutData","setDonutData","totalDays","totalCompleted","substring","newData","quantity","percentage","toFixed","customMouseOver","externalRadius","internalRadius","highlightSliceById","Analytics","Analytics_Container","StackedRowsContainer","Row","paddingTop","Analytics_templateObject","Analytics_templateObject2","Analytics_templateObject3","LoggedIn","setSelectedGoals","setColorMap","setExistingGoals","setSelected","setNewCompletedDays","setCurMonth","_useState13","_useState14","goalCreationDateMap","setGoalCreationDateMap","_useState15","_useState16","setSelectedDayForNotes","_useState17","_useState18","showAnalytics","setShowAnalytics","_updateCurMonth","goalsToRemove","_x12","_x13","_x14","_removeCompletedDay","removeCompletedDay","curDate","_handleNoteAdded","dateIndex","findIndex","obj","undefined","existingColorMap","createdDateMap","toISOString","sort","b","datesCompleted","datesCompletedMap","OverallContainer","InnerRowContainer","nextHexColor","colorsInUse","values","updatedMap","keys","key","filteredSelectedGoals","CalendarContainer","_x8","_x9","_addCompletedDay","addCompletedDay","LoggedIn_templateObject","LoggedIn_templateObject2","LoggedIn_templateObject3","App","_useAuth","overflow","Boolean","location","hostname","match","ReactDOM","render","appReducer","App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c50fcaa.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext } from 'react';\n\nconst Context = createContext()\n\nexport function AppStateProvider({ reducer, initialState = {}, children }) {\n    const value = useReducer(reducer, initialState)\n    return <Context.Provider value={value} children={children} />\n}\n\nexport function useAppState() {\n    return useContext(Context);\n}","import firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyCvxmJXWdOQsBw6QkcH7MTghBk8YjBNnHo\",\n  authDomain: \"track-my-goals.firebaseapp.com\",\n  databaseURL: \"https://track-my-goals.firebaseio.com\",\n  projectId: \"track-my-goals\",\n  storageBucket: \"track-my-goals.appspot.com\",\n  messagingSenderId: \"1045953614271\"\n};\n\nfirebase.initializeApp(config);\n\nexport const db = firebase.firestore();\n\nexport const auth = () => firebase.auth();\n\n// export const mode = \"real\"\n\n// export default fire\n","import { completedDay } from './constants/AppConstants';\nimport { db } from './fire';\nimport { auth } from 'firebase';\n\nexport async function removeDaysCompleted(uid, goal) {\n    let daysCompletedCollection = db\n        .collection('completed')\n        .doc(uid)\n        .collection('daysCompleted');\n\n    let daysToDelete = daysCompletedCollection.where('goal', '==', goal);\n\n    daysToDelete.get().then((snapshot) => {\n        snapshot.docs.forEach((doc) => {\n            doc.ref.delete();\n        });\n    });\n}\n\nexport async function deleteGoal(uid, goal) {\n    // let existingGoal = db.collection(`goals-${uid}`);\n    let existingGoal: any = db\n        .collection(`goals`)\n        .doc(uid)\n        .collection('userGoals');\n\n    existingGoal = existingGoal.where('goal', '==', goal);\n    existingGoal = existingGoal.where('uid', '==', uid);\n\n    existingGoal.get().then((snapshot) => {\n        snapshot.docs.forEach((doc) => {\n            doc.ref.delete();\n        });\n    });\n}\n\n// TODO -- ADD A HEX COLOR FIELD TO THE GOAL COLLECTION. ALSO PUT THE AUTH UID ON THE COLLECTION NAME\nexport async function createGoal(uid, goal, color) {\n    return db\n        .collection(`goals`)\n        .doc(uid)\n        .collection('userGoals')\n        .add({\n            uid: uid,\n            goal: goal,\n            color: color,\n            created: +new Date() // Timestamp of creation\n        });\n}\n\nexport async function addCompletedDay(uid, completedDay: completedDay) {\n    console.log('addCompletedDay', uid, completedDay);\n\n    return db\n        .collection('completed')\n        .doc(uid)\n        .collection('daysCompleted')\n        .add({\n            uid: uid,\n            goal: completedDay.goal,\n            date: completedDay.date,\n            notes: completedDay.notes\n        });\n}\n\n/**\n * TODO -- update to return the response of the request.\n */\nexport async function updateNotesForCompletedDay(uid, completedDay: completedDay) {\n    let dayToUpdate: any = db\n        .collection('completed')\n        .doc(uid)\n        .collection('daysCompleted');\n\n    dayToUpdate = dayToUpdate.where('goal', '==', completedDay.goal);\n    dayToUpdate = dayToUpdate.where('date', '==', completedDay.date);\n\n    dayToUpdate.get().then((snapshot) => {\n        snapshot.docs.forEach((doc) => {\n            db.collection('completed')\n                .doc(uid)\n                .collection('daysCompleted')\n                .doc(doc.id)\n                .update({\n                    uid: uid,\n                    goal: completedDay.goal,\n                    date: completedDay.date,\n                    notes: completedDay.notes\n                });\n        });\n    });\n}\n\nexport async function removeCompletedDay(uid, goal, date) {\n    // let dayCompleted = db.collection(`daysCompleted-${uid}`);\n\n    let daysCompleted: any = db\n        .collection('completed')\n        .doc(uid)\n        .collection('daysCompleted');\n\n    daysCompleted = daysCompleted.where('goal', '==', goal);\n    daysCompleted = daysCompleted.where('date', '==', date);\n\n    daysCompleted.get().then((snapshot) => {\n        snapshot.docs.forEach((doc) => {\n            doc.ref.delete();\n        });\n    });\n}\n\nexport async function signup({ email, password }) {\n    try {\n        const { user } = await auth().createUserWithEmailAndPassword(email, password);\n\n        await db.doc(`users/${user.uid}`).set({\n            uid: user.uid\n        });\n    } catch (e) {\n        throw e;\n    }\n}\n\nexport function login(email, password) {\n    return auth().signInWithEmailAndPassword(email, password);\n}\n\nexport function logout() {\n    return auth().signOut();\n}\n\nexport function onAuthStateChanged(callback) {\n    auth().onAuthStateChanged(callback);\n}\n","import { retrieveSelectedDays } from \"./utils\";\n\nconst initialState = {\n  authAttempted: false,\n  auth: null,\n  user: null,\n  goals: [\"Workout\", \"Meditate\", \"Eat Healthy\"],\n  selectedGoal: 0,\n\n  // This is the new state I'm adding so that the calendar can dynamically load\n  // the selected days for each component\n\n  // Should probably just load this once on the first page load. And store it\n  // all in local memory.\n\n  // MAKE THIS A MAP OF GOALS TO DAYS SELECTED;\n  selectedDays: {\n    workout: []\n  }\n};\n\nconst appStateReducer = (state, action) => {\n  switch (action.type) {\n    case \"AUTH_CHANGE\": {\n      return { ...state, auth: action.auth, authAttempted: true };\n    }\n    case \"LOAD_USER\": {\n      return { ...state, user: action.user };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport { initialState };\nexport default appStateReducer;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { login, signup } from \"./utils\";\n// import { Tabs, TabList, Tab, TabPanels, TabPanel } from \"@reach/tabs\";\n// import Signup from \"./Signup\";\n// import Login from \"./Login\";\n\nexport default function LoggedOut() {\n  const [focus, setFocus] = useState(null);\n\n  // Control whether user sees login or signup.\n  const [isLogin, setIsLogin] = useState(true);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // login refs\n  const loginEmailRef = useRef(null);\n  const loginPasswordRef = useRef(null);\n\n  useOutsideAlerter(loginEmailRef);\n  useOutsideAlerter(loginPasswordRef);\n\n  // Signup refs\n  const signupEmailRef = useRef(null);\n  const signupPasswordRef = useRef(null);\n\n  useOutsideAlerter(signupEmailRef);\n  useOutsideAlerter(signupPasswordRef);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      await login(loginEmailRef.current.value, loginPasswordRef.current.value);\n    } catch (error) {\n      setLoading(false);\n      setError(error);\n    }\n  };\n\n  const handleSignup = async event => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      await signup({\n        email: signupEmailRef.current.value,\n        password: signupPasswordRef.current.value\n      });\n    } catch (error) {\n      setLoading(false);\n      setError(error);\n    }\n  };\n\n  function useOutsideAlerter(ref) {\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setFocus(\"\");\n        setError(null);\n      }\n    }\n    useEffect(() => {\n      // Bind the event listener\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        // Unbind the event listener on clean up\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    });\n  }\n\n  return isLogin ? (\n    <Login>\n      <Heading>Log into Habit Tracker</Heading>\n      <CreateAccount>\n        New?{\" \"}\n        <TextLink onClick={() => setIsLogin(false)}>Create Account</TextLink>\n      </CreateAccount>\n      <LoginInput\n        ref={loginEmailRef}\n        isLogin={isLogin}\n        focus={focus === \"email\"}\n        placeholder={\"Email Address\"}\n        onClick={() => {\n          setFocus(\"email\");\n          setError(null);\n        }}\n      />\n      <LoginInput\n        ref={loginPasswordRef}\n        isLogin={isLogin}\n        type=\"password\"\n        focus={focus === \"password\"}\n        placeholder={\"Password\"}\n        onClick={() => {\n          setFocus(\"password\");\n          setError(null);\n        }}\n      />\n      <LoginButton onClick={handleLogin}>Login</LoginButton>\n      {error ? <ErrorMessage>Invalid username or password</ErrorMessage> : null}\n    </Login>\n  ) : (\n    <Signup>\n      <Heading>Create Account</Heading>\n      <CreateAccount>\n        Have one? <TextLink onClick={() => setIsLogin(true)}>Log In</TextLink>\n      </CreateAccount>\n      <LoginInput\n        ref={signupEmailRef}\n        isLogin={isLogin}\n        focus={focus === \"email\"}\n        placeholder={\"Email Address\"}\n        onClick={() => {\n          setFocus(\"email\");\n          setError(null);\n        }}\n      />\n      <LoginInput\n        ref={signupPasswordRef}\n        isLogin={isLogin}\n        type=\"password\"\n        focus={focus === \"password\"}\n        placeholder={\"Password\"}\n        onClick={() => {\n          setFocus(\"password\");\n          setError(null);\n        }}\n      />\n      <LoginButton onClick={handleSignup}>Create Account</LoginButton>\n      {error ? <ErrorMessage>Invalid username or password</ErrorMessage> : null}\n    </Signup>\n  );\n}\n\nconst TextLink = styled.u`\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst Signup = styled.div`\n  overflow: hidden;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center; /*centers items on the line (the x-axis by default)*/\n  align-items: center; /*centers items on the cross-axis (y by default)*/\n`;\n\nconst Login = styled.div`\n  overflow: hidden;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center; /*centers items on the line (the x-axis by default)*/\n  align-items: center; /*centers items on the cross-axis (y by default)*/\n`;\n\nconst Heading = styled.h1`\n  color: black;\n  font-size: 1.64rem;\n  font-family: \"Avenir Next\" !important;\n`;\n\nconst CreateAccount = styled.h1`\n  color: \"#A9A9A9\";\n  font-size: 1rem;\n  margin-top: 1rem;\n  font-family: \"Avenir Next\" !important;\n`;\n\nconst LoginInput = styled.input<{ focus; isLogin }>`\n  height: 3rem;\n  width: 18rem;\n  border: none;\n  font-size: 1em;\n  margin-top: 2rem;\n\n  padding-left: 1rem;\n  border-radius: ${props => (props.isLogin ? \"0.3rem\" : \"0rem\")};\n  font-family: \"Avenir Next\" !important;\n\n  background-color: ${props => (props.focus ? \"#e5e5e5\" : \"transparent\")};\n  border-bottom: ${props =>\n    props.focus ? \"3px solid transparent\" : \"2px solid black\"};\n`;\n\nconst LoginButton = styled.button`\n  height: 3rem;\n  width: 19rem;\n  color: black;\n  background: #d8d8d8;\n  border: none;\n  font-size: 1.1rem;\n  margin-top: 2rem;\n\n  padding-left: 1rem;\n  border-radius: 0.3rem;\n  font-family: \"Avenir Next\" !important;\n`;\n\nconst ErrorMessage = styled.h1`\n  margin-top: 1.5rem;\n  color: #cf2e38;\n  font-size: 1rem;\n  font-family: \"Avenir Next\" !important;\n`;\n","import { useEffect } from \"react\";\nimport { onAuthStateChanged } from \"./utils\";\nimport { useAppState } from \"./app-state\";\n\nexport default function useAuth() {\n  const [{ authAttempted, auth }, dispatch] = useAppState();\n\n  useEffect(() => {\n    if (!authAttempted) {\n      return onAuthStateChanged(auth => {\n        if (auth) {\n          const { uid } = auth;\n          dispatch({\n            type: \"AUTH_CHANGE\",\n            auth: { uid }\n          });\n        } else {\n          dispatch({ type: \"AUTH_CHANGE\", auth: null });\n        }\n      });\n    }\n  }, [authAttempted, dispatch]);\n\n  return { authAttempted, auth };\n}\n","import React, { useEffect, Fragment, useState } from 'react';\nimport styled from 'styled-components';\n\ninterface Day {\n    completedColor?;\n    curGoal?; // shouldn't need this\n    day?;\n    month?;\n    year?;\n    goalsCompletedOnDay?;\n    selectedGoals?;\n    colorMap?;\n    handleDayCompleted?;\n    completedDays?;\n    disabled?;\n    handleNoteSelected?;\n    selectedDayForNotes?;\n}\n\nexport default function Day2({\n    completedColor,\n    curGoal, // shouldn't need this\n    day,\n    month,\n    year,\n    goalsCompletedOnDay,\n    selectedGoals,\n    colorMap,\n    handleDayCompleted,\n    completedDays,\n    disabled,\n    handleNoteSelected,\n    selectedDayForNotes\n}: Day) {\n    const [myDate, setMyDate] = useState('');\n\n    const [isTodaysDate, setIsTodaysDate] = useState(false);\n\n    const [doesDayHaveNote, setDayHasNote] = useState(false);\n\n    const [notesSelected, setNotesSelected] = useState(false);\n\n    const [backgroundColor, setBackgroundColor] = useState('#464e50');\n\n    const [isDaySelected, toggleDaySelected] = useState(false);\n\n    useEffect(() => {\n        if (goalsCompletedOnDay && goalsCompletedOnDay.length === 1) {\n            setBackgroundColor(colorMap[goalsCompletedOnDay]);\n            toggleDaySelected(true);\n        } else {\n            setBackgroundColor('#464e50');\n        }\n    }, [goalsCompletedOnDay]);\n\n    useEffect(() => {\n        if (completedDays && completedDays[curGoal]) {\n            const day = completedDays[curGoal].find((e) => {\n                return e.date === myDate;\n            });\n\n            if (day && day.notes && day.notes.length) {\n                setDayHasNote(true);\n            } else {\n                setDayHasNote(false);\n            }\n        }\n    }, [completedDays, curGoal]);\n\n    useEffect(() => {\n        if (month && day && year) {\n            const date =\n                month.toString().padStart(2, '0') + '-' + day.toString().padStart(2, '0') + '-' + year.toString();\n            setMyDate(date);\n\n            if (selectedDayForNotes) {\n                setNotesSelected(date == selectedDayForNotes.date);\n            }\n\n            let today: any = new Date();\n            let dd = String(today.getDate()).padStart(2, '0');\n            let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n            let yyyy = today.getFullYear();\n            today = mm + '-' + dd + '-' + yyyy;\n\n            if (date == today) {\n                setIsTodaysDate(true);\n            } else {\n                setIsTodaysDate(false);\n            }\n        }\n    }, [month, day, year, selectedDayForNotes]);\n\n    function createColorSquares() {\n        const squares = [];\n\n        if (goalsCompletedOnDay) {\n            goalsCompletedOnDay.forEach((goal) => {\n                squares.push(<MultiSelectSquare color={colorMap[goal]} />);\n            });\n        }\n        return squares;\n    }\n\n    function getColorDisplay() {\n        // check if single select or multi-select.\n        if (selectedGoals && selectedGoals.length === 1) {\n            return (\n                <Button\n                    disabled={disabled}\n                    onClick={handleDayClicked}\n                    style={{\n                        filter: notesSelected ? 'brightness(85%)' : 'brightness(100%)'\n                    }}>\n                    <Container style={{ backgroundColor: `${backgroundColor}` }}>\n                        <DayNumber style={{ color: 'white' }}>{day}</DayNumber>\n                        {isTodaysDate ? (\n                            <i\n                                className='glyphicon glyphicon-time'\n                                style={{ color: 'white', marginRight: '.2rem', marginTop: '.3rem' }}\n                            />\n                        ) : null}\n                        {doesDayHaveNote ? (\n                            <i\n                                className='glyphicon glyphicon-edit'\n                                style={{ color: backgroundColor === '#464e50' ? 'black' : 'white' }}\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    handleNoteSelected(myDate, curGoal);\n                                }}\n                            />\n                        ) : null}\n                    </Container>\n                </Button>\n            );\n        } else if (selectedGoals && selectedGoals.length > 1) {\n            const mutliSelectSquares = createColorSquares();\n\n            return (\n                <Button\n                    disabled={disabled}\n                    onClick={handleDayClicked}\n                    style={{\n                        filter: notesSelected ? 'brightness(85%)' : 'brightness(100%)'\n                    }}>\n                    <Container style={{ backgroundColor: '#464e50' }}>\n                        <DayNumber style={{ color: 'white' }}>{day}</DayNumber>\n                        <Squares>{mutliSelectSquares}</Squares>\n                    </Container>\n                </Button>\n            );\n        } else if (disabled) {\n            return <Button disabled={true} />;\n        }\n    }\n\n    function handleDayClicked() {\n        if (!disabled) {\n            if (selectedGoals.length === 1) {\n                const goal = selectedGoals[0];\n\n                const isDayCompleted =\n                    completedDays &&\n                    completedDays[goal] &&\n                    completedDays[goal].filter((day) => day.date === myDate).length > 0;\n\n                if (!isDayCompleted) {\n                    handleDayCompleted(myDate, goal);\n                }\n\n                handleNoteSelected(myDate, curGoal);\n            }\n        }\n    }\n\n    const display = getColorDisplay();\n\n    return <Fragment>{display}</Fragment>;\n}\n\nconst Squares = styled.div`\n    display: flex;\n    padding-left: 0.2rem;\n    flex-flow: row wrap;\n`;\n\nconst DayNumber = styled.div`\n    padding-right: 0.5rem;\n    padding-top: 0.3rem;\n`;\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 6rem;\n`;\n\nconst MultiSelectSquare = styled.div<{ color }>`\n    width: 1.5rem;\n    height: 1.5rem;\n    background-color: ${(props) => props.color};\n    border-radius: 2px;\n    border: 0.5px solid black;\n    margin: 0.1rem;\n`;\n\nconst Button = styled.button<{ disabled }>`\n    font-family: 'Avenir Next' !important;\n    padding: 0;\n    display: inline-block;\n    height: 6rem;\n    width: 6rem;\n    -webkit-text-fill-color: ${(props) => (props.disabled ? 'transparent' : 'none')};\n    font-size: 1em;\n    margin: 0.4375rem;\n    border: ${(props) => (props.disabled ? '2px solid #1c1e1f;' : '2px solid #6B7A8F')};\n    border-radius: 3px;\n    text-align: right;\n\n    &:hover {\n        filter: ${(props) => (props.disabled ? 'brightness(100%)' : 'brightness(85%)')};\n    }\n\n    height: 100%;\n\n    margin-top: 0.3rem;\n`;\n\n// import React, { useEffect, Fragment, useState } from 'react';\n// import styled from 'styled-components';\n\n// interface Day {\n//     completedColor?;\n//     curGoal?; // shouldn't need this\n//     day?;\n//     month?;\n//     year?;\n//     goalsCompletedOnDay?;\n//     selectedGoals?;\n//     colorMap?;\n//     handleDayCompleted?;\n//     completedDays?;\n//     disabled?;\n//     handleNoteSelected?;\n//     selectedDayForNotes?;\n// }\n\n// export default function Day({\n//     completedColor,\n//     curGoal, // shouldn't need this\n//     day,\n//     month,\n//     year,\n//     goalsCompletedOnDay,\n//     selectedGoals,\n//     colorMap,\n//     handleDayCompleted,\n//     completedDays,\n//     disabled,\n//     handleNoteSelected,\n//     selectedDayForNotes\n// }: Day) {\n//     const [myDate, setMyDate] = useState('');\n\n//     const [isTodaysDate, setIsTodaysDate] = useState(false);\n\n//     const [doesDayHaveNote, setDayHasNote] = useState(false);\n\n//     const [notesSelected, setNotesSelected] = useState(false);\n\n//     useEffect(() => {\n//         if (completedDays && completedDays[curGoal]) {\n//             const day = completedDays[curGoal].find((e) => {\n//                 return e.date === myDate;\n//             });\n\n//             if (day && day.notes && day.notes.length) {\n//                 setDayHasNote(true);\n//             } else {\n//                 setDayHasNote(false);\n//             }\n//         }\n//     }, [completedDays, curGoal]);\n\n//     useEffect(() => {\n//         if (month && day && year) {\n//             const date =\n//                 month.toString().padStart(2, '0') + '-' + day.toString().padStart(2, '0') + '-' + year.toString();\n//             setMyDate(date);\n\n//             if (selectedDayForNotes) {\n//                 setNotesSelected(date == selectedDayForNotes.date);\n//             }\n\n//             let today: any = new Date();\n//             let dd = String(today.getDate()).padStart(2, '0');\n//             let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n//             let yyyy = today.getFullYear();\n//             today = mm + '-' + dd + '-' + yyyy;\n\n//             if (date == today) {\n//                 setIsTodaysDate(true);\n//             } else {\n//                 setIsTodaysDate(false);\n//             }\n//         }\n//     }, [month, day, year, selectedDayForNotes]);\n\n//     /**\n//      * Determine how to color in each day depending on how many goals\n//      * are currently selected.\n//      */\n//     function getColorDisplay() {\n//         const oneGoal: boolean = goalsCompletedOnDay && goalsCompletedOnDay.length === 1;\n\n//         const multipleGoals: boolean = goalsCompletedOnDay && goalsCompletedOnDay.length > 1;\n\n//         if (oneGoal) {\n//             const singleColor = colorMap[goalsCompletedOnDay[0]];\n//             return (\n//                 <Fragment>\n//                     <MyDiv\n//                         style={{\n//                             display: 'flex',\n//                             flexDirection: 'column',\n//                             alignItems: 'start',\n//                             background: singleColor,\n//                             paddingLeft: '0.5rem',\n//                             paddingTop: '0.2rem'\n//                         }}>\n//                         {doesDayHaveNote ? (\n//                             <i\n//                                 className='glyphicon glyphicon-edit'\n//                                 style={{ color: 'white' }}\n//                                 onClick={(e) => {\n//                                     e.stopPropagation();\n//                                     handleNoteSelected(myDate, curGoal);\n//                                 }}\n//                             />\n//                         ) : null}\n//                     </MyDiv>\n//                     <MyDiv style={{ background: singleColor }}>\n//                         <Text style={{ color: 'white' }}>{disabled ? '0' : day} </Text>\n//                         {isTodaysDate ? (\n//                             <i\n//                                 className='glyphicon glyphicon-time'\n//                                 style={{ color: 'white', marginRight: '.2rem', marginTop: '.3rem' }}\n//                             />\n//                         ) : null}\n//                     </MyDiv>\n//                     <MyDiv style={{ background: singleColor }} />\n//                     <MyDiv style={{ background: singleColor }} />\n//                 </Fragment>\n//             );\n//         } else if (multipleGoals) {\n//             let display = [];\n\n//             // TODO -- use a foreach loop. this is whack\n//             for (let x in goalsCompletedOnDay) {\n//                 if (x === '1') {\n//                     display.push(\n//                         <MyDiv style={{ background: colorMap[goalsCompletedOnDay[x]], color: 'white' }}>\n//                             <Text>{disabled ? '0' : day} </Text>\n//                             {isTodaysDate ? (\n//                                 <i\n//                                     className='glyphicon glyphicon-time'\n//                                     style={{ color: 'white', marginRight: '.2rem', marginTop: '.3rem' }}\n//                                 />\n//                             ) : null}\n//                         </MyDiv>\n//                     );\n//                 } else {\n//                     display.push(<MyDiv style={{ background: colorMap[goalsCompletedOnDay[x]] }} />);\n//                 }\n//             }\n\n//             while (display.length !== 4) {\n//                 display.push(<MyDiv style={{ background: '#97D4E8' }} />);\n//             }\n\n//             return (\n//                 <Fragment>\n//                     {display[0]}\n//                     {display[1]}\n//                     {display[2]}\n//                     {display[3]}\n//                 </Fragment>\n//             );\n//         } else {\n//             const singleColor = disabled ? '#f1f1f1' : '#d8d8d8';\n\n//             const divStyle = { background: singleColor };\n\n//             return (\n//                 <Fragment>\n//                     <MyDiv\n//                         style={{\n//                             background: singleColor\n//                         }}\n//                     />\n//                     <MyDiv style={divStyle}>\n//                         <Text>{disabled ? '0' : day} </Text>\n//                         {isTodaysDate ? (\n//                             <i\n//                                 className='glyphicon glyphicon-time'\n//                                 style={{ color: 'black', marginRight: '.2rem', marginTop: '.3rem' }}\n//                             />\n//                         ) : null}\n//                     </MyDiv>\n//                     <MyDiv style={divStyle} />\n//                     <MyDiv style={divStyle} />\n//                 </Fragment>\n//             );\n//         }\n//     }\n\n//     const dayColors = getColorDisplay();\n\n//     return (\n//         <Button\n//             style={{\n//                 filter: notesSelected ? 'brightness(85%)' : 'brightness(100%)'\n//             }}\n//             completedColor={completedColor}\n//             disabled={disabled}\n//             onClick={() => {\n//                 if (!disabled) {\n//                     // Only allow select and deselect if ony one goal is selected.\n//                     if (selectedGoals.length === 1) {\n//                         const goal = selectedGoals[0];\n\n//                         handleNoteSelected(myDate, curGoal);\n\n//                         const isDayCompleted =\n//                             completedDays &&\n//                             completedDays[goal] &&\n//                             completedDays[goal].filter((day) => day.date === myDate).length > 0;\n\n//                         if (!isDayCompleted) {\n//                             handleDayCompleted(myDate, goal);\n//                         }\n//                     }\n//                 }\n//             }}>\n//             {dayColors}\n//         </Button>\n//     );\n// }\n\n// const Text = styled.div`\n//     z-index: 10;\n//     padding-right: 0.5rem;\n// `;\n\n// const MyDiv = styled.div`\n//     width: 50%;\n//     height: 50%;\n//     float: left;\n// `;\n\n// interface ButtonProps {\n//     disabled: boolean;\n//     completedColor: string;\n// }\n\n// const Button = styled.button<ButtonProps>`\n//     font-family: 'Avenir Next' !important;\n//     padding: 0;\n//     display: inline-block;\n//     height: 6rem;\n//     width: 6rem;\n//     -webkit-text-fill-color: ${(props) => (props.disabled ? 'transparent' : 'none')};\n//     font-size: 1em;\n//     margin: 0.4375rem;\n//     border: ${(props) => (props.disabled ? '2px solid #f1f1f1;' : '2px solid #6B7A8F')};\n//     border-radius: 3px;\n//     text-align: right;\n\n//     &:hover {\n//         filter: ${(props) => (props.disabled ? 'brightness(100%)' : 'brightness(85%)')};\n//     }\n\n//     margin-top: 0.3rem;\n// `;\n","// TODO -- ADD MORE COLORS TO THIS LIST\n\nexport const GOAL_COLORS = ['#279020', '#902027', '#154B5D', '#22155D', '#892090', '#209089', '#908920', '#CF742E'];\n\nexport interface completedDay {\n    date: string;\n    goal: string;\n    notes: string;\n}\n\nexport const MONTH_DAYS = {\n    '01': 31,\n    '02': 28,\n    '03': 31,\n    '04': 30,\n    '05': 31,\n    '06': 30,\n    '07': 31,\n    '08': 31,\n    '09': 30,\n    '10': 31,\n    '11': 30,\n    '12': 31\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Day from './Day';\n\nimport { animated, useSpring } from 'react-spring';\nimport { MONTH_DAYS } from './constants/AppConstants';\n\nexport function getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\n/**\n * NOTES -- Re-renders on every goal selection\n */\nexport default function Calendar({\n    curMonth,\n    curGoal,\n    completedDays,\n    colorMap,\n    selectedGoals,\n    handleDayCompleted,\n    handleDayRemoved,\n    handleNoteSelected,\n    selectedDayForNotes\n}) {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    const animatedProps = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n    const DaysOfWeek = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'];\n\n    function getMonth(month, completedDays) {\n        const myMonth = [[]];\n        let dayOfWeek = 1;\n        let week = [];\n\n        // Dynamically adjust the number of rows in the calendar as the window resizes.\n        // const daysPerRow = Math.floor(windowDimensions.width / 180);\n        const daysPerRow = 7;\n\n        let firstOfMonth: any = month.toString().padStart(2, '0') + '-01-2019';\n        firstOfMonth = new Date(firstOfMonth).getDay();\n\n        // Add in a row for the days of the week\n        for (let day = 0; day < 7; day++) {\n            week.push(<DayOfWeek>{DaysOfWeek[day]}</DayOfWeek>);\n        }\n\n        myMonth.push(week);\n        week = [];\n\n        // Add in blank days until the first day of the month.\n        for (let unusedDay = 0; unusedDay < firstOfMonth; unusedDay++) {\n            week.push(<Day disabled={true} />);\n        }\n\n        dayOfWeek = firstOfMonth + 1;\n\n        // USING 35 SO THAT WE GET 5 WEEKS.\n        for (let i = 1; i <= MONTH_DAYS[month]; i++) {\n            const date =\n                month.toString().padStart(2, '0') +\n                '-' +\n                i\n                    .toString()\n                    .toString()\n                    .padStart(2, '0') +\n                '-' +\n                '2019';\n\n            if (dayOfWeek === daysPerRow + 1) {\n                myMonth.push(week);\n                dayOfWeek = 1;\n                week = [];\n            }\n\n            let goalsCompletedOnDay = [];\n            selectedGoals.forEach((selectedGoal) => {\n                if (\n                    completedDays[selectedGoal] &&\n                    completedDays[selectedGoal].filter((day) => day.date === date).length > 0 //.indexOf(date) > -1\n                ) {\n                    goalsCompletedOnDay.push(selectedGoal);\n                }\n            });\n\n            week.push(\n                <Day\n                    completedColor={colorMap ? colorMap[curGoal] : 'green'}\n                    curGoal={curGoal}\n                    day={i}\n                    month={parseInt(month)}\n                    year={2019}\n                    goalsCompletedOnDay={goalsCompletedOnDay}\n                    selectedGoals={selectedGoals}\n                    completedDays={completedDays}\n                    colorMap={colorMap}\n                    handleDayCompleted={handleDayCompleted}\n                    disabled={false}\n                    handleNoteSelected={handleNoteSelected}\n                    selectedDayForNotes={selectedDayForNotes}\n                />\n            );\n            dayOfWeek += 1;\n        }\n\n        // fill out the last row with empty days\n        for (let unusedDay = 0; unusedDay < 8 - dayOfWeek; unusedDay++) {\n            week.push(<Day disabled={true} />);\n        }\n\n        myMonth.push(week);\n        week = [];\n\n        // Adds a blank row of disabled days so that the size stays the same.\n        if (myMonth.length === 7) {\n            for (let unusedDay = 0; unusedDay < 7; unusedDay++) {\n                week.push(<Day disabled={true} />);\n            }\n\n            myMonth.push(week);\n        }\n\n        week = [];\n\n        for (let i = 0; i < 6; i++) {\n            week.push(<Day disabled={true} />);\n        }\n\n        week.push(\n            selectedDayForNotes ? (\n                <DeselectButton\n                    onClick={() => {\n                        if (selectedGoals && selectedGoals.length === 1) {\n                            handleDayRemoved(selectedDayForNotes.date, selectedGoals[0]);\n                        }\n                    }}>\n                    Remove Day\n                </DeselectButton>\n            ) : (\n                <Day disabled={true} />\n            )\n        );\n\n        // week.push(<Day disabled={true} />);\n\n        myMonth.push(week);\n\n        return myMonth;\n    }\n\n    function getYear(completedDays) {\n        const calendarYear = {};\n        for (let i = 1; i <= 12; i++) {\n            let monthNum = i.toString();\n            monthNum = monthNum.length === 1 ? '0' + monthNum : monthNum;\n\n            const month = getMonth(monthNum, completedDays);\n            calendarYear[i] = month;\n        }\n        return calendarYear;\n    }\n\n    const calendarYear = getYear(completedDays);\n\n    return (\n        <Container style={animatedProps}>\n            {calendarYear[curMonth]\n                ? calendarYear[curMonth].map((week) => {\n                      return <div id={week}>{week}</div>;\n                  })\n                : null}\n        </Container>\n    );\n}\n\nconst Container = styled(animated.div)`\n    /* display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin-left: 22rem;\n    margin-top: 1rem;\n    overflow: hidden; */\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    -webkit-box-pack: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n    /* margin-left: 22rem; */\n    margin-top: 1rem;\n    overflow: hidden;\n\n    margin-top: 3rem;\n`;\n\nconst DayOfWeek = styled.div`\n    display: inline-block;\n    width: 6rem;\n    height: 1rem;\n    margin: 0.4375rem;\n    margin-bottom: 2rem;\n    text-align: center;\n    font-size: 1.15rem;\n`;\n\nconst DeselectButton = styled.button`\n    background-color: #464e50;\n    width: 10rem;\n    height: 4rem;\n    margin-right: 4rem;\n    font-family: 'Avenir Next' !important;\n    color: white;\n    border-radius: 0.5rem;\n\n    &:hover {\n        filter: ${(props) => (props.disabled ? 'brightness(100%)' : 'brightness(85%)')};\n    }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport default function DeleteGoalRow({ goal, index, undoDelete, confirmDelete }) {\n    return (\n        <NewListRow onClick={() => undoDelete}>\n            <b style={{ paddingLeft: '1rem' }}>Delete goal?</b>\n            {/* <b style={{ paddingLeft: '.2rem' }}>{goal}?</b> */}\n            <div>\n                <i\n                    className='glyphicon glyphicon-remove'\n                    style={{ paddingLeft: '4rem' }}\n                    onClick={() => undoDelete()}\n                />\n                <i\n                    className='glyphicon glyphicon-trash'\n                    style={{ paddingLeft: '2rem', paddingRight: '1rem' }}\n                    onClick={() => confirmDelete(goal, index)}\n                />\n            </div>\n        </NewListRow>\n    );\n}\n\nconst NewListRow = styled.div`\n    display: flex;\n    direction: ltr;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    vertical-align: middle;\n    line-height: 2.5rem;\n    height: 5rem !important;\n    margin-bottom: 2rem;\n    width: 19.5rem;\n    border-radius: 0.3rem;\n    border: 1px solid #565656;\n\n    background-color: #ff3a22;\n\n    padding-left: 0.5rem;\n    color: white;\n    margin-left: 0.5rem;\n    font-family: 'Avenir Next' !important;\n`;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { createGoal, deleteGoal, removeDaysCompleted } from './utils';\nimport useAuth from './useAuth';\n\nimport './App.scss';\n\nimport { getWindowDimensions } from './Calendar';\nimport DeleteGoalRow from './DeleteGoalRow';\n\nexport default function GoalsList({\n    existingGoals,\n    colorMap,\n    updateSelected,\n    addToColorMap,\n    removeFromColorMap,\n    handleGoalSelected,\n    handleGoalRemoved,\n    selectedGoals,\n    creationDateMap\n}) {\n    const { auth } = useAuth();\n\n    // This is the goal that is currently typed into the new goal input.\n    const [newGoal, setNewGoal] = useState('');\n\n    // List of goals that are in the pre-delete state.\n    const [goalsToDelete, setGoalsToDelete] = useState([]);\n\n    // The list of the existing goals.\n    const [goals, setGoals] = useState(existingGoals);\n\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        setWindowDimensions(getWindowDimensions());\n    }, []);\n\n    useEffect(() => {\n        setGoals(existingGoals);\n    }, [existingGoals]);\n\n    // TODO -- THE CHECK BOXES ARE MESSED UP WHEN DELETING\n    // DON'T SET THE DELETED GOAL AS SELECTED, JUST USE SEPARATE STATE.\n    function handleDelete(goal: string, idx: number) {\n        deleteGoal(auth.uid, goal);\n        setGoals(goals.filter((g) => g !== goal));\n        removeDaysCompleted(auth.uid, goal);\n\n        removeFromColorMap(goal);\n\n        handleGoalRemoved(goal);\n\n        // Check if there are still goals remaining after this delete.\n        if (goals.length - 1 > 0) {\n            const nextGoalIdx = idx === 0 ? idx + 1 : idx - 1;\n            updateSelected(goals[nextGoalIdx]);\n            handleGoalSelected(goals[nextGoalIdx], goals[idx]);\n        }\n    }\n\n    function undoDelete(goal: string) {\n        let update = JSON.parse(JSON.stringify(goalsToDelete));\n        update = update.filter((g) => g != goal);\n\n        setGoalsToDelete(update);\n    }\n\n    return (\n        <GoalContainer>\n            <InnerContainer>\n                <InputContainer>\n                    <MyForm>\n                        <GoalInput\n                            type='text'\n                            placeholder='Enter your next habit'\n                            onChange={(e) => setNewGoal(e.target.value)}\n                        />\n                        <AddGoalButton\n                            type='reset'\n                            onClick={() => {\n                                if (newGoal.length > 0 && !goals.includes(newGoal)) {\n                                    const goalColor = addToColorMap(newGoal);\n                                    createGoal(auth.uid, newGoal, goalColor);\n\n                                    if (goals.includes(newGoal)) {\n                                        updateSelected(newGoal);\n                                    }\n\n                                    setNewGoal('');\n                                    setGoals([...goals, newGoal]);\n                                }\n                            }}>\n                            ADD\n                        </AddGoalButton>\n                    </MyForm>\n                </InputContainer>\n                <ListContainer windowHeight={windowDimensions.height}>\n                    {goals\n                        ? goals.map((goal, idx) => {\n                              return (\n                                  <Fragment>\n                                      {goalsToDelete.includes(goal) ? (\n                                          <DeleteGoalRow\n                                              goal={goal}\n                                              index={idx}\n                                              undoDelete={() => undoDelete(goal)}\n                                              confirmDelete={(goalToDelete, index) => handleDelete(goalToDelete, index)}\n                                          />\n                                      ) : (\n                                          <NewListRow\n                                              // selected={goal === selectedGoals[0]}\n                                              selected={selectedGoals.includes(goal)}\n                                              checked={\n                                                  (document.getElementById(goal) as HTMLInputElement) &&\n                                                  (document.getElementById(goal) as HTMLInputElement).checked\n                                              }\n                                              colorMap={colorMap}\n                                              goal={goal}\n                                              toDelete={goalsToDelete.includes(goal)}\n                                              onClick={() => {\n                                                  if (goals.includes(goal)) {\n                                                      if (selectedGoals) {\n                                                          selectedGoals.forEach((element) => {\n                                                              if (\n                                                                  document.getElementById(element) as HTMLInputElement\n                                                              ) {\n                                                                  (document.getElementById(\n                                                                      element\n                                                                  ) as HTMLInputElement).checked = false;\n                                                              }\n                                                          });\n                                                      }\n\n                                                      // Set as selected and check this rows checkbox, remove the previously selected from the selectedList.\n                                                      handleGoalSelected(goal, selectedGoals);\n                                                      updateSelected(goal);\n\n                                                      (document.getElementById(\n                                                          goal\n                                                      ) as HTMLInputElement).checked = true;\n                                                  }\n                                              }}>\n                                              <ListRowLeft>\n                                                  <Circle\n                                                      color={colorMap && colorMap[goal] ? colorMap[goal] : 'red'}\n                                                      className='dot'\n                                                  />\n                                                  <ListRowInfo>\n                                                      <Goal>{goal}</Goal>\n                                                      <StartDate>{creationDateMap[goal]}</StartDate>\n                                                  </ListRowInfo>\n                                              </ListRowLeft>\n                                              <ListRowRight>\n                                                  <Checkbox>\n                                                      <input\n                                                          id={goal}\n                                                          type='checkbox'\n                                                          defaultChecked={idx === 0}\n                                                          onClick={(e) => {\n                                                              e.stopPropagation();\n                                                              let checkbox = document.getElementById(\n                                                                  goal\n                                                              ) as HTMLInputElement;\n\n                                                              if (checkbox.checked) {\n                                                                  handleGoalSelected(goal);\n                                                              } else if (selectedGoals.length === 1) {\n                                                                  e.preventDefault();\n                                                              } else {\n                                                                  handleGoalRemoved(goal);\n                                                              }\n                                                          }}\n                                                      />\n                                                  </Checkbox>{' '}\n                                                  <DeleteButton\n                                                      onClick={(e) => {\n                                                          e.stopPropagation();\n                                                          setGoalsToDelete([...goalsToDelete, goal]);\n\n                                                          // update local state of rows in delete state\n                                                          setGoalsToDelete([...goalsToDelete, goal]);\n                                                      }}>\n                                                      {' '}\n                                                      <DeleteIcon className='glyphicon glyphicon-trash' />\n                                                  </DeleteButton>\n                                              </ListRowRight>\n                                          </NewListRow>\n                                      )}\n                                  </Fragment>\n                              );\n                          })\n                        : null}\n                </ListContainer>\n            </InnerContainer>\n        </GoalContainer>\n    );\n}\n\nconst InnerContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n\n    margin-top: 3rem;\n`;\n\nconst GoalContainer = styled.div`\n    /* display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n    \n    font-family: Helvetica;\n    position: absolute;\n    height: 100%;\n    width: 25rem;\n    border-right: 1.5px solid #d0d0d0; */\n\n    background-color: #1c1e1f;\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n\n    font-family: Helvetica;\n    // position: absolute;\n    height: 100%;\n    width: 25rem;\n    border-right: 1.5px solid #47484a;\n`;\n\nconst InputContainer = styled.div`\n    /* display: flex;\n    flex-direction: row; */\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: row;\n    flex-direction: row;\n`;\n\nconst MyForm = styled.form`\n    display: flex;\n    flex-direction: row;\n`;\n\nconst ListContainer = styled.div<{ windowHeight }>`\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    direction: rtl;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n\n    display: flex;\n    direction: rtl;\n    flex-direction: column;\n    align-items: center;\n    height: ${(props) => (props.windowHeight ? `${props.windowHeight - 330}px` : '35rem')};\n    overflow-y: scroll;\n    margin-top: 2rem;\n    padding-left: 0.5rem;\n`;\n\nconst AddGoalButton = styled.button`\n    background-color: #2b2f31;\n    display: inline-block;\n    color: #faf8f8;\n    font-size: 1em;\n    /* padding: 1rem; */\n    border: none;\n    font-weight: bold;\n\n    height: 100%;\n\n    &:hover {\n        filter: brightness(85%);\n    }\n`;\n\nconst DeleteIcon = styled.i`\n    padding-right: 0.5rem;\n    &:hover {\n        filter: brightness(85%);\n        color: red;\n    }\n`;\n\nconst GoalInput = styled.input`\n    height: 3rem;\n    width: 18rem;\n    color: 9a968f;\n    background: #d8d8d8;\n    border: none;\n    font-size: 1em;\n\n    background-color: #464e50;\n\n    padding-left: 0.5rem;\n    /* border-radius: 0.3rem 0 0 0.3rem; */\n`;\n\nconst DeleteButton = styled.button`\n    background-color: rgba(0, 0, 0, 0);\n    border: none;\n`;\n\ninterface ListRowProps {\n    selected: boolean;\n    checked: boolean;\n    colorMap: Object;\n    goal: string;\n    toDelete: boolean; // check if this row is in deleting state (user clicked delete button but waiting for confirmation / cancellation).\n}\n\nconst NewListRow = styled.div<ListRowProps>`\n  display: flex;\n  direction: ltr;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  vertical-align: middle;\n  line-height: 2.5rem;\n  height: 4.2rem;\n  margin-bottom: 2rem;\n  width: 19.5rem;\n  border-radius: 0.3rem;\n  border: 1px solid #888888;\n  /* margin-top: 2rem; */\n  background-color: ${(props) => (props.toDelete ? 'red' : '#464e50')}; \n  filter: ${(props) => (props.selected ? 'brightness(65%)' : 'brightness(100%)')};\n  padding-left: 0.5rem;\n  color: white;\n  margin-left: 0.5rem;\n  font-family: \"Avenir Next\" !important;\n\n  &:hover {\n    /* background-color: ${(props) => (props.colorMap && props.goal ? props.colorMap[props.goal] : '#d8d8d8')}; */\n    filter: ${(props) => (props.selected ? 'brightness(65%)' : 'brightness(50%)')};\n  }\n`;\n\nconst ListRowInfo = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n    padding-left: 0.75rem;\n`;\n\nconst Circle = styled.span<{ color }>`\n    height: 2.5rem;\n    width: 2.5rem;\n    background-color: ${(props) => props.color};\n    border-radius: 50%;\n    border: 0.04rem solid black;\n`;\n\nconst Goal = styled.div`\n    color: white;\n    font-size: 1rem;\n    font-family: 'Avenir Next' !important;\n    overflow: auto;\n    height: 29px;\n    margin-bottom: 0;\n    overflow-y: hidden; // hide vertical\n    overflow-x: hidden;\n`;\n\nconst StartDate = styled.div`\n    color: '#A9A9A9';\n    font-size: 0.6rem;\n    font-family: 'Avenir Next' !important;\n    overflow-y: hidden; // hide vertical\n    overflow-x: hidden;\n    height: 25px;\n    padding-bottom: 0.6rem;\n`;\n\nconst ListRowLeft = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n`;\n\nconst ListRowRight = styled.div`\n    display: flex;\n    justify-content: end;\n    align-items: center;\n`;\n\nconst Checkbox = styled.label`\n    margin-right: 0rem;\n    width: 3rem;\n`;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { logout } from './utils';\n\nconst monthName = {\n    1: 'Jan',\n    2: 'Feb',\n    3: 'mar',\n    4: 'Apr',\n    5: 'May',\n    6: 'Jun',\n    7: 'Jul',\n    8: 'Aug',\n    9: 'Sept',\n    10: 'Oct',\n    11: 'Nov',\n    12: 'Dec'\n};\n\nexport default function HeaderBar({ curMonth, updateCurMonth, toggleAnalytics }) {\n    const [analyticsSelected, toggleAnalyticsSelected] = useState(false);\n\n    function clickedAnalytics() {\n        toggleAnalyticsSelected(!analyticsSelected);\n        toggleAnalytics();\n    }\n\n    return (\n        <Header>\n            <AppTitle>HabitTracker</AppTitle>\n            <VerticalBar />\n            <MonthAndLogoutContainer>\n                <MonthContainer>\n                    <CurMonth>{monthName[curMonth] + ' 2019'}</CurMonth>\n                    <MonthButton\n                        onClick={() => {\n                            if (curMonth != 1) {\n                                updateCurMonth(curMonth - 1);\n                            }\n                        }}>\n                        Prev\n                    </MonthButton>\n                    <MonthButton\n                        onClick={() => {\n                            if (curMonth != 12) {\n                                updateCurMonth(curMonth + 1);\n                            }\n                        }}>\n                        Next\n                    </MonthButton>\n                </MonthContainer>\n                <AnalyticsButton onClick={clickedAnalytics} analyticsOn={analyticsSelected}>\n                    Analytics\n                </AnalyticsButton>\n                <Button onClick={logout}>Logout</Button>\n            </MonthAndLogoutContainer>\n        </Header>\n    );\n}\n\nconst AppTitle = styled.h1`\n    font-size: 1.5rem;\n    font-family: 'Montserrat', sans-serif;\n    color: white;\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n`;\n\nconst MonthContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-evenly;\n`;\n\nconst Header = styled.div`\n    /* display: flex;\n    flex-direction: row;\n    height: 4.4rem;\n    background-color: #d8d8d8;\n    border-bottom: 2px solid #979797; */\n\n    color: white;\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: row;\n    flex-direction: row;\n    height: 4.4rem;\n    background-color: #222627;\n    border-bottom: 2px solid #47484a;\n`;\n\nconst MonthAndLogoutContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    width: 100%;\n    background-color: #222627;\n`;\n\nconst VerticalBar = styled.div`\n    border-left: 0rem dotted black; // TODO -- DECIDE IF I WANT THIS BAR HERE\n    height: 4.5rem;\n    margin-left: 13.7rem;\n`;\n\nconst CurMonth = styled.div`\n    font-size: 2.5rem;\n    color: white;\n    margin-left: 3rem;\n    font-family: 'Montserrat', sans-serif;\n    /* font-family: \"Avenir Next\" !important; */\n    margin-right: 1rem;\n    padding-left: 1rem;\n    margin-left: 3rem;\n`;\n\nconst MonthButton = styled.button`\n    display: inline-block;\n\n    font-size: 1em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border: 2px solid;\n\n    border-radius: 3px;\n    display: inline-block;\n    border-radius: 0.3rem;\n\n    background-color: #1d1f20;\n    border-color: #0cc6ce;\n    color: #80f2f7;\n\n    &:hover {\n        filter: brightness(75%);\n    }\n`;\n\nconst Button = styled.button`\n    display: inline-block;\n\n    font-size: 1em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border: 2px solid;\n    border-radius: 3px;\n    display: inline-block;\n    border-radius: 0.3rem;\n\n    background-color: #1d1f20;\n    border-color: #0cc6ce;\n    color: #80f2f7;\n\n    &:hover {\n        filter: brightness(75%);\n    }\n`;\n\nconst AnalyticsButton = styled.button<{ analyticsOn }>`\n    display: inline-block;\n\n    font-size: 1em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border: 2px solid;\n    border-radius: 3px;\n    display: inline-block;\n    border-radius: 0.3rem;\n\n    border-color: ${(props) => (props.analyticsOn ? 'white' : '#CF2E38')};\n    color: ${(props) => (props.analyticsOn ? 'white' : '#CF2E38')};\n\n    background-color: ${(props) => (props.analyticsOn ? '#CF2E38' : '#1d1f20')};\n    &:hover {\n        filter: brightness(75%);\n    }\n`;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { completedDay } from './constants/AppConstants';\nimport { getWindowDimensions } from './Calendar';\nimport { useSpring, animated } from 'react-spring';\n\nexport default function Notes({ selectedDayForNotes, completedDays, handleNoteAdded, handleDayRemoved }) {\n    const [goal, setGoal] = useState(null);\n\n    const [date, setDate] = useState(null);\n\n    const [note, setNote] = useState('');\n\n    const [showSuccess, setShowSuccess] = useState(1);\n\n    const props = useSpring({ opacity: 0, from: { opacity: showSuccess } });\n\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        setWindowDimensions(getWindowDimensions());\n    }, []);\n\n    useEffect(() => {\n        if (selectedDayForNotes) {\n            setGoal(selectedDayForNotes.goal);\n            setDate(selectedDayForNotes.date);\n            setNote(selectedDayForNotes.notes);\n        }\n    }, [selectedDayForNotes, completedDays]);\n\n    return (\n        <Fragment>\n            {selectedDayForNotes ? (\n                <Container>\n                    <NewContainer>\n                        <Fragment>\n                            <SaveButton\n                                onClick={async () => {\n                                    if (goal && date && note.length) {\n                                        const dayToUpdate: completedDay = {\n                                            goal: goal,\n                                            date: date,\n                                            notes: note\n                                        };\n                                        await handleNoteAdded(dayToUpdate);\n                                    }\n                                }}>\n                                Save Note\n                            </SaveButton>\n\n                            <OtherDisplay>\n                                <br />\n                                {goal}\n                                <br />\n                                {date}\n                            </OtherDisplay>\n\n                            <NotesInput\n                                spellCheck={false}\n                                placeholder={note ? null : `Add Notes for ${goal} on ${date}`}\n                                windowHeight={windowDimensions.height}\n                                onChange={(e) => setNote(e.target.value)}\n                                value={note}>\n                                <button>Hello</button>\n                            </NotesInput>\n\n                            <Remainder />\n                        </Fragment>\n                    </NewContainer>\n                </Container>\n            ) : (\n                <Container>\n                    <NewContainer>\n                        <Placeholder windowHeight={windowDimensions.height}>Click on a day to add a note</Placeholder>\n                    </NewContainer>\n                </Container>\n            )}\n        </Fragment>\n    );\n}\n\nconst Placeholder = styled.div<{ windowHeight }>`\n    color: white;\n    width: 17rem;\n    background: #222627;\n    font-family: 'Gayathri', sans-serif;\n    height: ${(props) => (props.windowHeight ? `${props.windowHeight}px` : '35rem')};\n    border: none;\n    padding-top: 3rem;\n    padding-right: 1rem;\n    text-align: center;\n    /* border-left: 1.5px solid #979797; */\n    background-color: #222627;\n`;\n\nconst SaveButton = styled.button`\n    /* border: 3px solid black; */\n    height: 6rem;\n    background-color: #464e50;\n    font-family: 'Gayathri', sans-serif;\n    font-size: 1.3rem;\n    color: white;\n    padding: 0;\n    border: 0;\n\n    white-space: normal;\n\n    &:hover {\n        filter: brightness(85%);\n    }\n`;\n\nconst DeselectButton = styled.button`\n    height: 5rem;\n    background-color: #062f4f;\n\n    color: white;\n\n    font-family: 'Avenir Next';\n    font-size: 1.3rem;\n\n    padding: 0;\n    border: 0;\n\n    z-index: 10;\n\n    &:hover {\n        filter: brightness(85%);\n    }\n`;\n\nconst NewContainer = styled.div`\n    /* display: flex;\n    flex-direction: column;\n    background-color: #d8d8d8; */\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    background-color: #fdfd96;\n`;\n\nconst Container = styled.div`\n    width: 17rem;\n    background-color: #fdfd96;\n\n    color: #09868b;\n    border-left: 1.5px solid #47484a;\n    position: absolute;\n    right: 0;\n`;\n\nconst OtherDisplay = styled.div`\n    color: black;\n    width: 17rem;\n    background: #d8d8d8;\n    font-family: 'Gayathri', sans-serif;\n    height: 8rem;\n    padding-left: 0.5rem;\n    border: none;\n    padding-top: 3rem;\n    font-size: 1.5rem;\n\n    /* border-left: 1.5px solid #979797; */\n    background-color: #fdfd96;\n\n    background-attachment: local;\n    background-image: linear-gradient(to right, #fdfd96 10px, transparent 10px),\n        linear-gradient(to left, #fdfd96 10px, transparent 10px),\n        repeating-linear-gradient(#fdfd96, #fdfd96 30px, #ccc 30px, #ccc 31px, white 31px);\n    line-height: 31px;\n    padding: 8px 10px;\n`;\n\nconst NotesInput = styled.textarea<{ windowHeight }>`\n    color: black;\n    width: 17rem;\n    background: #d8d8d8;\n    font-family: 'Gayathri', sans-serif;\n    height: ${(props) => (props.windowHeight ? `${props.windowHeight}px` : '35rem')};\n    padding-left: 0.5rem;\n    border: none;\n    padding-top: 3rem;\n\n    /* border-left: 1.5px solid #979797; */\n    background-color: #fdfd96;\n\n    background-attachment: local;\n    background-image: linear-gradient(to right, #fdfd96 10px, transparent 10px),\n        linear-gradient(to left, #fdfd96 10px, transparent 10px),\n        repeating-linear-gradient(#fdfd96, #fdfd96 30px, #ccc 30px, #ccc 31px, white 31px);\n    line-height: 31px;\n    padding: 8px 10px;\n`;\n\nconst Remainder = styled.div`\n    background: #d8d8d8;\n    height: 200px;\n`;\n","// Color Gradients\nexport const colorGradients = {\n    greenBlue: ['#39C7EA', '#4CDCBA'],\n    orangePink: ['#FBC670', '#F766B8'],\n    bluePurple: ['#3DC3C9', '#824a9e']\n};\nexport const colorGradientsHuman = {\n    greenBlue: 'Green to Blue',\n    orangePink: 'Orange to Pink',\n    bluePurple: 'Blue to Purple'\n};\n\n// Color Schemas\n// Standard Color Schema for Britecharts\nexport const britecharts = [\n    '#6aedc7', //green\n    '#39c2c9', //blue\n    '#ffce00', //yellow\n    '#ffa71a', //orange\n    '#f866b9', //pink\n    '#998ce3' //purple\n];\n// Grey Palette\nexport const grey = ['#F8F8FA', '#EFF2F5', '#D2D6DF', '#C3C6CF', '#ADB0B6', '#666A73', '#45494E', '#363A43', '#282C35'];\n// Orange Palette\nexport const orange = [\n    '#fcc870',\n    '#ffa71a',\n    '#fb8825',\n    '#f6682f',\n    '#db5a2c',\n    '#bf4c28',\n    '#a43b1c',\n    '#892a10',\n    '#f9e9c5'\n];\n// Blue Palette\nexport const blueGreen = [\n    '#ccf7f6',\n    '#70e4e0',\n    '#00d8d2',\n    '#00acaf',\n    '#007f8c',\n    '#005e66',\n    '#003c3f',\n    '#002d2f',\n    '#0d2223'\n];\n// LightBlue Palette\nexport const teal = ['#ccfffe', '#94f7f4', '#00fff8', '#1de1e1', '#39c2c9', '#2e9a9d', '#227270', '#1a5957', '#133f3e'];\n// Green Palette\nexport const green = [\n    '#edfff7',\n    '#d7ffef',\n    '#c0ffe7',\n    '#95f5d7',\n    '#6aedc7',\n    '#59c3a3',\n    '#479980',\n    '#34816a',\n    '#206953'\n];\n// Yellow Palette\nexport const yellow = [\n    '#f9f2b3',\n    '#fbe986',\n    '#fce05a',\n    '#fed72d',\n    '#ffce00',\n    '#fcc11c',\n    '#f9b438',\n    '#eda629',\n    '#e09819'\n];\n// Pink Palette\nexport const pink = ['#fdd1ea', '#fb9cd2', '#f866b9', '#fc40b6', '#ff1ab3', '#e3239d', '#c62c86', '#a62073', '#85135f'];\n// Purple Palette\nexport const purple = [\n    '#ddd6fc',\n    '#bbb1f0',\n    '#998ce3',\n    '#8e6bc1',\n    '#824a9e',\n    '#77337f',\n    '#6b1c60',\n    '#591650',\n    '#470f3f'\n];\n// Red Palette\nexport const red = ['#ffd8d4', '#ffb5b0', '#ff938c', '#ff766c', '#ff584c', '#f04b42', '#e03d38', '#be2e29', '#9c1e19'];\n\nexport const colorSchemas = {\n    britecharts,\n    grey,\n    orange,\n    blueGreen,\n    teal,\n    green,\n    yellow,\n    pink,\n    purple,\n    red\n};\nexport const colorSchemasHuman = {\n    britecharts: 'Britecharts Default',\n    grey: 'Britecharts Grey',\n    orange: 'Orange',\n    blueGreen: 'Blue',\n    teal: 'Light Blue',\n    green: 'Green',\n    yellow: 'Yellow',\n    pink: 'Pink',\n    purple: 'Purple',\n    red: 'Red'\n};\n\n// Single Colors\nexport const aloeGreen = ['#7bdcc0']; // To Deprecate\nexport const greenColor = ['#6aedc7'];\nexport const blueColor = ['#39c2c9'];\nexport const yellowColor = ['#ffce00'];\nexport const orangeColor = ['#ffa71a'];\nconst pinkColor = ['#f866b9'];\nconst purpleColor = ['#998ce3'];\n\nconst singleColors = {\n    aloeGreen,\n    greenColor,\n    blueColor,\n    yellowColor,\n    orangeColor,\n    pinkColor,\n    purpleColor\n};\nconst singleColorsHuman = {\n    aloeGreen: 'Aloe Green',\n    greenColor: 'Green',\n    blueColor: 'Blue',\n    yellowColor: 'Yellow',\n    orangeColor: 'Orange',\n    pinkColor: 'Pink',\n    purpleColor: 'Purple'\n};\n\nexport default {\n    colorSchemas,\n    colorSchemasHuman,\n    colorGradients,\n    colorGradientsHuman,\n    singleColors,\n    singleColorsHuman\n};\n","import React, { useEffect } from 'react';\n\nimport { Bar } from 'britecharts-react';\nimport colors from './colors';\n\nexport default function BarGraph({ goal, completedDays }) {\n    const barData = [\n        { name: 'This week', value: numDaysCompletedInPrevWeek(0) },\n        { name: '1 week ago', value: numDaysCompletedInPrevWeek(1) },\n        { name: '2 weeks ago', value: numDaysCompletedInPrevWeek(2) },\n        { name: '3 weeks ago', value: numDaysCompletedInPrevWeek(3) }\n    ];\n\n    // generate an array of the last s\n\n    function isDayInRange(date: string, startDate: string, endDate: string) {\n        const dateArray = date.split('-');\n        const startArray = startDate.split('-');\n        const endArray = endDate.split('-');\n\n        console.log('HERE HERE HERE: ', date, startDate, endDate);\n        console.log('HERE HERE HERE: ', +dateArray[1], +startArray[1], +endArray[1]);\n\n        // Check case for weeks that fit completely in current week.\n        return (\n            +dateArray[0] === +startArray[0] &&\n            +dateArray[0] === +endArray[0] &&\n            +dateArray[1] >= +startArray[1] &&\n            +dateArray[1] <= +endArray[1]\n        );\n    }\n\n    function getPreviousWeek(weeksAgo: number): { firstDay: string; lastDay: string } {\n        let today: any = new Date();\n        today.setDate(today.getDate() - 7 * weeksAgo);\n\n        let curDay = String(today.getDate()).padStart(2, '0');\n        let curMonth = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n        let year = today.getFullYear();\n\n        // Runs 0 (Sunday) -> 6 (saturday)\n        const dayOfWeek = today.getDay();\n\n        const firstOfWeek = curMonth + '-' + String(+curDay - dayOfWeek) + '-' + year;\n        const endOfWeek = curMonth + '-' + String(+curDay + (6 - dayOfWeek)) + '-' + year;\n\n        return { firstDay: firstOfWeek, lastDay: endOfWeek };\n    }\n\n    function numDaysCompletedInPrevWeek(weeksAgo: number): number {\n        if (completedDays) {\n            const days = completedDays[goal];\n            const range = getPreviousWeek(weeksAgo);\n            let total = 0;\n\n            days.forEach((day) => {\n                // convert the date to a number\n                // let date = +day.date.replace(/-/g, '');\n\n                if (isDayInRange(day.date, range.firstDay, range.lastDay)) {\n                    console.log('================', day.date, range.firstDay, range.lastDay);\n                    total += 1;\n                }\n            });\n\n            return total;\n        }\n\n        return 0;\n    }\n\n    return (\n        <Bar\n            data={barData}\n            height={300}\n            width={450}\n            isHorizontal={true}\n            margin={{ left: 100 }}\n            colorSchema={colors.colorSchemas.orange}\n        />\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Donut } from 'britecharts-react';\n\nexport default function DonutGraph({ goal, completedDays }) {\n    const [daysCompletedThisMonth, setDaysCompletedThisMonth] = useState(null);\n\n    const [donutData, setDonutData] = useState([]);\n\n    // TODO -- MENTION THAT ALL THIS BIS IS FOR THE CURRENT MONTH.\n\n    useEffect(() => {\n        const today = new Date();\n        const curMonth = today.getMonth() + 1;\n        const totalDays = new Date(2019, curMonth, 0).getDate();\n\n        let totalCompleted = 0;\n\n        if (completedDays && completedDays[goal]) {\n            completedDays[goal].forEach((day) => {\n                if (+day.date.substring(1, 2) == curMonth) {\n                    totalCompleted++;\n                }\n            });\n        }\n\n        const newData = [\n            {\n                quantity: totalCompleted,\n                percentage: ((totalCompleted / totalDays) * 100).toFixed(0),\n                name: 'Days Completed',\n                color: 'white',\n                id: 1\n            },\n            {\n                quantity: totalDays - totalCompleted,\n                percentage: (((totalDays - totalCompleted) / totalDays) * 100).toFixed(0),\n                name: 'Days Not completed',\n                id: 2\n            }\n        ];\n\n        setDonutData(newData);\n\n        console.log('COMPLETED: ', totalCompleted, totalDays - totalCompleted, totalDays);\n    }, [goal]);\n\n    const logMouseOver = () => console.log('Mouse Over');\n\n    return (\n        <Donut\n            data={donutData}\n            customMouseOver={logMouseOver}\n            externalRadius={150}\n            internalRadius={75}\n            highlightSliceById={1}\n        />\n    );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport BarGraph from './BarGraph';\nimport DonutGraph from './DonutGraph';\n\nimport { animated, useSpring } from 'react-spring';\nimport LegendGraph from './LegendGraph';\n\nexport default function Analytics({ goal, completedDays }) {\n    const animatedProps = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n    return (\n        <Container style={animatedProps}>\n            <StackedRowsContainer>\n                <Row style={{ paddingTop: '2rem' }}>\n                    <DonutGraph goal={goal} completedDays={completedDays} />\n                    <BarGraph goal={goal} completedDays={completedDays} />\n                </Row>\n                {/* <Row style={{ paddingBottom: '10rem' }}>\n                    <LegendGraph />\n                </Row> */}\n            </StackedRowsContainer>\n        </Container>\n    );\n}\n\nconst Container = styled(animated.div)`\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    flex-direction: column;\n\n    height: 100%;\n\n    overflow: hidden;\n\n    // TODO -- ADD DIFFERENT BACKGROUND COLOR\n\n    // background-color: #393f4d;\n`;\n\nconst StackedRowsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: space-evenly;\n    height: 100%;\n`;\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    align-items: center;\n    height: 100%;\n    margin-bottom: 10rem;\n`;\n","import React, { useState, useEffect, useRef, Fragment } from 'react';\nimport styled from 'styled-components';\nimport useAuth from './useAuth';\nimport GoalsList from './GoalList';\nimport Calendar from './Calendar';\nimport { db } from './fire';\nimport HeaderBar from './HeaderBar';\nimport { GOAL_COLORS, completedDay } from './constants/AppConstants';\nimport Notes from './Notes';\nimport { addCompletedDay, removeCompletedDay, updateNotesForCompletedDay } from './utils';\n\nimport { useSpring, animated } from 'react-spring';\nimport BarGraph from './BarGraph';\nimport Analytics from './Analytics';\n\n// TODO -- I'M NOT CLEARING OUT MY LOCAL TRACK OF COMPLETED DAYS WHEN A GOAL GETS DELETED.\n\nexport default function LoggedIn() {\n    const { auth } = useAuth();\n\n    const [selectedGoals, setSelectedGoals] = useState([]);\n\n    // Color mapping. Goal --> Hex Color\n    const [colorMap, setColorMap] = useState({});\n\n    // The list of the existing goals.\n    const [existingGoals, setExistingGoals] = useState([]);\n\n    // The currently selectedGoal goal.\n    const [selectedGoal, setSelected] = useState('');\n\n    // Mapping of each goal to the days that are completed (selectedGoal).\n    // The old state of the mapping at the time of the app being loaded\n    // const [oldCompletedDays, setOldCompletedDays] = useState({});\n\n    // Mapping of each goal to the days that are completed (selectedGoal).\n    // the new state of the mapping as the user makes new selections.\n    const [completedDays, setNewCompletedDays] = useState({});\n\n    const [curMonth, setCurMonth] = useState(null);\n\n    const [goalCreationDateMap, setGoalCreationDateMap] = useState({});\n\n    // Track which completed day we are currently writing notes for.\n    const [selectedDayForNotes, setSelectedDayForNotes] = useState(null);\n\n    // Track if we're on the analytics page or the calendar page.\n    const [showAnalytics, setShowAnalytics] = useState(false);\n\n    const animatedProps = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n    const addHandler = (handler) => window.addEventListener('beforeunload', handler);\n    const removeHandler = (handler) => window.removeEventListener('beforeunload', handler);\n\n    useEffect(() => {\n        console.log('\\n');\n        console.log('===================== LOGGED IN STATE =========================');\n        console.log('selectedGoals: ', selectedGoals);\n        console.log('completedDays:  ', completedDays);\n        console.log('selectedDayForNotes: ', selectedDayForNotes);\n        console.log('colorMap: ', colorMap);\n        console.log('\\n');\n    });\n\n    /**\n     * Save completed days for last viewed goal, before the app window closes or the page is refreshed.\n     */\n    const useWindowUnloadEffect = (handler, callOnCleanup) => {\n        const prevHandler = useRef(null);\n        useEffect(() => {\n            if (prevHandler.current) removeHandler(handler.current); // remove the the current event listener, if one exists\n            prevHandler.current = handler;\n            addHandler(handler);\n            return () => {\n                if (callOnCleanup) handler();\n                removeHandler(handler);\n            };\n        }, [handler]);\n    };\n\n    // Load the current month onto the screen.\n    useEffect(() => {\n        const today = new Date();\n        setCurMonth(today.getMonth() + 1);\n    }, []);\n\n    // Load goals and completed days on component mount (only once).\n    useEffect(() => {\n        fetchGoals();\n        fetchCompletedDays();\n    }, []);\n\n    async function updateCurMonth(month: number) {\n        setCurMonth(month);\n    }\n\n    function timeConverter(date: Date) {\n        return date.toISOString().substring(0, 10);\n    }\n\n    /**\n     * Pull Goal data from the firestore.\n     */\n    function fetchGoals() {\n        db.collection('goals')\n            .doc(auth.uid)\n            .collection('userGoals')\n            .where('uid', '==', auth.uid)\n            .get()\n            .then((snapshot) => {\n                const existingGoals: any[] = [];\n                const existingColorMap = {};\n                const createdDateMap = {};\n                snapshot.docs.forEach((doc) => {\n                    if (doc.data().goal) {\n                        existingGoals.push(doc.data().goal);\n                        existingColorMap[doc.data().goal] = doc.data().color;\n\n                        createdDateMap[doc.data().goal] = timeConverter(new Date(doc.data().created));\n                    }\n                });\n\n                existingGoals.sort((a, b) => a.created - b.created);\n\n                // Set the initially selectedGoal goal\n                const selectedGoal: [string] = [selectedGoals[0]];\n                setSelectedGoals(selectedGoal);\n                setSelected(existingGoals[0]);\n                setExistingGoals(existingGoals);\n                setColorMap(existingColorMap);\n                setGoalCreationDateMap(createdDateMap);\n\n                handleGoalSelected(existingGoals[0]);\n            });\n    }\n\n    /**\n     * Load a mapping of each goal to its list of completed dates.\n     */\n    function fetchCompletedDays() {\n        db.collection('completed')\n            .doc(auth.uid)\n            .collection('daysCompleted')\n            .get()\n            .then((snapshot) => {\n                const datesCompleted: any[] = [];\n\n                snapshot.docs.forEach((doc) => {\n                    const goal = doc.data().goal;\n                    const date = doc.data().date;\n                    const notes = doc.data().notes ? doc.data().notes : '';\n                    datesCompleted.push({ goal: goal, date: date, notes: notes });\n                });\n\n                const datesCompletedMap = {};\n                datesCompleted.forEach((data) => {\n                    if (data.goal in datesCompletedMap) {\n                        datesCompletedMap[data.goal].push({\n                            date: data.date,\n                            notes: data.notes\n                        });\n                    } else {\n                        datesCompletedMap[data.goal] = [{ date: data.date, notes: data.notes }];\n                    }\n                });\n                // setOldCompletedDays(JSON.parse(JSON.stringify(datesCompletedMap)));\n                setNewCompletedDays(datesCompletedMap);\n            });\n    }\n\n    /**\n     * Returns the new hex code to use.\n     * @param goal\n     */\n    function addToColorMap(goal: string): string {\n        let nextHexColor = null;\n        // Watch for null pointer exception\n        const colorsInUse = Object.values(colorMap);\n\n        console.log('add to color map:  ', colorsInUse, GOAL_COLORS);\n\n        for (let i = 0; i < GOAL_COLORS.length; i++) {\n            if (!colorsInUse.includes(GOAL_COLORS[i])) {\n                nextHexColor = GOAL_COLORS[i];\n                break;\n            }\n        }\n\n        const updatedMap = colorMap;\n        updatedMap[goal] = nextHexColor;\n        setColorMap(updatedMap);\n\n        return nextHexColor;\n    }\n\n    /**\n     * TODO -- DECIDE IF I SHOULD KEEP THIS. NOT REALLY NEEDED SINCE THE\n     * COLOR MAP WILL REMOVE THE DELETED GOAL'S COLOR ON REFRESH ANYWAY.\n     * @param goal\n     */\n    function removeFromColorMap(goal: string) {\n        const updatedMap = colorMap;\n\n        console.log('remove from color map: ');\n\n        Object.keys(updatedMap).forEach((key) => {\n            console.log(key, goal);\n            if (key == goal) {\n                delete updatedMap[goal];\n            }\n        });\n        setColorMap(updatedMap);\n    }\n\n    /**\n     * Add newly selectedGoal goal to selectedGoalss state.\n     * @param goal\n     * @param goalToRemove\n     */\n    function handleGoalSelected(goal: string, goalsToRemove?: string[]) {\n        console.log('handleGoalSelected', goal, goalsToRemove);\n\n        if (!(selectedGoals.includes(goal) && selectedGoals.length === 1)) {\n            let updateSelected = selectedGoals.includes(goal) ? [...selectedGoals] : [...selectedGoals, goal];\n\n            if (goalsToRemove) {\n                updateSelected = updateSelected.filter((g) => !goalsToRemove.includes(g) || g == goal);\n            }\n            setSelectedGoals(updateSelected);\n        }\n    }\n\n    /**\n     * Remove goal from selectedGoals state.\n     * @param goal\n     */\n    function handleGoalRemoved(goal: string) {\n        if (selectedGoals.includes(goal)) {\n            const filteredSelectedGoals = selectedGoals.filter((g) => {\n                return g != goal;\n            });\n\n            // removeDaysCompleted(auth.uid, goal);\n            // removeFromColorMap(goal);\n            setSelectedGoals([...filteredSelectedGoals]);\n        }\n    }\n\n    /**\n     * Add this day to this goal's list of completed days.\n     * @param date\n     * @param goal\n     */\n    function handleDayCompleted(date: string, goal: string) {\n        const completedDay: completedDay = {\n            date: date,\n            goal: goal,\n            notes: ''\n        };\n\n        // Make firestore call to save completed date.\n        addCompletedDay(auth.uid, completedDay);\n\n        const update: Object = JSON.parse(JSON.stringify(completedDays));\n        update[goal] = update[goal] ? [...update[goal], { date: date, notes: '' }] : [{ date: date, notes: '' }];\n\n        setNewCompletedDays(update);\n    }\n\n    /**\n     * Remove this day from this goal's list of completed days.\n     * @param date\n     * @param goal\n     */\n    function handleDayRemoved(date: string, goal: string) {\n        // Make firestore call to remove completed date.\n        removeCompletedDay(auth.uid, goal, date);\n\n        const update: Object = JSON.parse(JSON.stringify(completedDays));\n        update[goal] = update[goal].filter((curDate) => curDate.date !== date);\n        setNewCompletedDays(update);\n\n        setSelectedDayForNotes(null);\n    }\n\n    function updateSelected(goal: string) {\n        // batchUpdateCompletedDays(selectedGoal);\n        if (GoalsList) setSelected(goal);\n    }\n\n    function handleNoteSelected(date: string, goal: string) {\n        let notes = null;\n\n        if (completedDays && completedDays[goal]) {\n            const day = completedDays[goal].find((e) => {\n                return e.date === date;\n            });\n\n            if (day) {\n                notes = day.notes;\n            }\n        }\n\n        const selectedDay: completedDay = {\n            date: date,\n            goal: goal,\n            notes: notes\n        };\n\n        setSelectedDayForNotes(selectedDay);\n    }\n\n    async function handleNoteAdded(day: completedDay) {\n        // update newSelectedDays to update this selectedGoal day's notes property\n\n        const update: Object = JSON.parse(JSON.stringify(completedDays));\n\n        let dateIndex = update[day.goal].findIndex((obj) => obj.date == day.date);\n\n        console.log('handleNoteAdded: ', dateIndex, day.date, update[day.goal]);\n\n        if (dateIndex != null && dateIndex != undefined) {\n            update[day.goal][dateIndex].notes = day.notes;\n            setNewCompletedDays(update);\n            setSelectedDayForNotes(day);\n\n            await updateNotesForCompletedDay(auth.uid, day);\n        }\n    }\n\n    return (\n        <OverallContainer style={animatedProps}>\n            <HeaderBar\n                curMonth={curMonth}\n                updateCurMonth={updateCurMonth}\n                toggleAnalytics={() => setShowAnalytics(!showAnalytics)}\n            />\n            <InnerRowContainer>\n                <GoalsList\n                    existingGoals={existingGoals}\n                    colorMap={colorMap}\n                    updateSelected={updateSelected}\n                    addToColorMap={addToColorMap}\n                    removeFromColorMap={removeFromColorMap}\n                    handleGoalSelected={handleGoalSelected}\n                    handleGoalRemoved={handleGoalRemoved}\n                    selectedGoals={selectedGoals}\n                    creationDateMap={goalCreationDateMap}\n                />\n                <CalendarContainer>\n                    {showAnalytics ? (\n                        <Analytics goal={selectedGoal} completedDays={completedDays} />\n                    ) : (\n                        <Calendar\n                            key='calendar1'\n                            curMonth={curMonth}\n                            curGoal={selectedGoal}\n                            completedDays={completedDays}\n                            colorMap={colorMap}\n                            selectedGoals={selectedGoals}\n                            handleDayCompleted={handleDayCompleted}\n                            handleDayRemoved={handleDayRemoved}\n                            handleNoteSelected={handleNoteSelected}\n                            selectedDayForNotes={selectedDayForNotes}\n                        />\n                    )}\n                </CalendarContainer>\n\n                <Notes\n                    selectedDayForNotes={selectedDayForNotes}\n                    completedDays={completedDays}\n                    handleNoteAdded={handleNoteAdded}\n                    handleDayRemoved={handleDayRemoved}\n                />\n            </InnerRowContainer>\n        </OverallContainer>\n    );\n}\n\nconst OverallContainer = styled(animated.div)`\n    height: 100%;\n    background-color: #1c1e1f;\n`;\n\nconst CalendarContainer = styled.div`\n    -webkit-box-flex: 1;\n    -ms-flex: 1;\n\n    flex: 1;\n\n    padding-right: 19rem;\n    padding-left: 2rem;\n`;\n\nconst InnerRowContainer = styled.div`\n    display: -webkit-box;\n    display: -ms-flexbox;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n\n    -webkit-box-pack: justify;\n    -ms-flex-pack: justify;\n\n    display: flex;\n    justify-content: space-between;\n    height: 100%;\n`;\n","import React, { useEffect, Fragment } from 'react';\nimport { AppStateProvider } from './app-state';\nimport appReducer, { initialState } from './appReducer';\nimport LoggedOut from './LoggedOut';\nimport LoggedIn from './LoggedIn';\n\nimport useAuth from './useAuth';\n\nfunction App() {\n    const { authAttempted, auth } = useAuth();\n\n    useEffect(() => {\n        document.getElementById('root').style.overflow = 'hidden';\n    });\n\n    if (!authAttempted) return null;\n    return <Fragment>{auth ? <LoggedIn /> : <LoggedOut />}</Fragment>;\n}\n\nexport default () => (\n    <AppStateProvider reducer={appReducer} initialState={initialState}>\n        <App />\n    </AppStateProvider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./App.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}