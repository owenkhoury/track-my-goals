{"version":3,"sources":["app-state.js","fire.js","utils.ts","appReducer.js","LoggedOut.tsx","useAuth.js","MultiSelectSquare.tsx","Day.tsx","constants/AppConstants.ts","Calendar.tsx","DeleteGoalRow.tsx","GoalRow.tsx","GoalList.tsx","HeaderBar.tsx","Notes.tsx","DonutGraph.tsx","BarGraph.tsx","Analytics.tsx","LoggedIn.tsx","App.js","serviceWorker.js","index.js"],"names":["Context","createContext","AppStateProvider","_ref","reducer","_ref$initialState","initialState","children","value","useReducer","react_default","a","createElement","Provider","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","_callee","uid","goal","daysCompletedCollection","regenerator_default","wrap","_context","prev","next","collection","doc","where","get","then","snapshot","docs","forEach","ref","delete","stop","_callee2","_context2","_callee3","color","_context3","abrupt","add","created","Date","_callee4","completedDay","_context4","date","notes","updateNotesForCompletedDay","_x10","_x11","_updateNotesForCompletedDay","apply","this","arguments","_callee5","_context5","id","update","_callee6","_context6","_callee7","_context7","console","log","signup","_x16","_signup","_callee8","email","password","_ref2","user","_context8","auth","createUserWithEmailAndPassword","sent","concat","set","t0","logout","signOut","authAttempted","goals","selectedGoal","selectedDays","workout","appStateReducer","state","action","type","Object","objectSpread","LoggedOut","_useState","useState","_useState2","slicedToArray","focus","setFocus","_useState3","_useState4","isLogin","setIsLogin","_useState5","_useState6","error","setError","_useState7","_useState8","setLoading","loginEmailRef","useRef","loginPasswordRef","useOutsideAlerter","signupEmailRef","signupPasswordRef","handleLogin","asyncToGenerator","mark","event","preventDefault","current","signInWithEmailAndPassword","message","_x","handleSignup","_x2","handleClickOutside","contains","target","useEffect","document","addEventListener","removeEventListener","Login","Heading","CreateAccount","TextLink","onClick","LoginInput","placeholder","LoginButton","ErrorMessage","Signup","styled","u","_templateObject","div","_templateObject2","_templateObject3","h1","_templateObject4","_templateObject5","input","_templateObject6","props","button","_templateObject7","_templateObject8","useAuth","_useAppState","useContext","_useAppState2","_useAppState2$","dispatch","callback","onAuthStateChanged","MultiSelectSquare","isHovered","toggleHover","react","Square","onMouseEnter","onMouseLeave","DropDown","MultiSelectSquare_templateObject","MultiSelectSquare_templateObject2","Day","completedColor","curGoal","day","month","year","goalsCompletedOnDay","selectedGoals","colorMap","handleDayCompleted","completedDays","disabled","handleNoteSelected","selectedDayForNotes","myDate","setMyDate","isTodaysDate","setIsTodaysDate","doesDayHaveNote","setDayHasNote","notesSelected","setNotesSelected","_useState9","_useState10","backgroundColor","setBackgroundColor","_useState11","_useState12","toggleDaySelected","handleDayClicked","length","filter","find","e","toString","padStart","today","dd","String","getDate","mm","getMonth","yyyy","getFullYear","Button","isNoteSelected","numGoals","isCurrentDay","isMultiSelect","Container","style","DayNumber","EditIcon","className","stopPropagation","mutliSelectSquares","squares","push","createColorSquares","MultiSquareContainer","Squares","getColorDisplay","Day_templateObject","Day_templateObject2","Day_templateObject3","Day_templateObject4","i","Day_templateObject5","Day_templateObject6","GOAL_COLORS","MONTH_DAYS","01","02","03","04","05","06","07","08","09","10","11","12","getWindowDimensions","_window","window","width","innerWidth","height","innerHeight","Calendar","curMonth","handleDayRemoved","animatedProps","useSpring","opacity","from","DaysOfWeek","myMonth","dayOfWeek","week","firstOfMonth","getDay","DayOfWeek","unusedDay","_loop","daysPerRow","parseInt","DeselectButton","Calendar_Container","map","idx","DeselectWrapper","calendarYear","monthNum","getYear","animated","Calendar_templateObject","Calendar_templateObject2","Calendar_templateObject3","Calendar_templateObject4","Calendar_templateObject5","DeleteGoalRow","index","undoDelete","confirmDelete","NewListRow","paddingLeft","paddingRight","DeleteGoalRow_templateObject","GoalRow","goalsToDelete","creationDateMap","handleGoalSelected","updateSelected","handleGoalRemoved","readyToDelete","ListRow","selected","includes","checked","getElementById","toDelete","element","ListRowLeft","Circle","ListRowInfo","Goal","StartDate","ListRowRight","Checkbox","defaultChecked","DeleteButton","DeleteIcon","GoalRow_templateObject","GoalRow_templateObject2","GoalRow_templateObject3","GoalRow_templateObject4","span","GoalRow_templateObject5","GoalRow_templateObject6","GoalRow_templateObject7","GoalRow_templateObject8","_templateObject9","label","_templateObject10","GoalsList","existingGoals","addToColorMap","removeFromColorMap","selectAllGoals","newGoal","setNewGoal","setGoalsToDelete","setGoals","windowDimensions","setWindowDimensions","handleDelete","_x3","_x4","_deleteGoal","deleteGoal","g","_removeDaysCompleted","removeDaysCompleted","nextGoalIdx","toConsumableArray","GoalContainer","InnerContainer","AppTitle","InputContainer","MyForm","GoalInput","onChange","onSubmit","onKeyPress","keyCode","key","AddGoalButton","goalColor","_x5","_x6","_x7","_createGoal","createGoal","SelectAll","checkAllCheckmarks","ListContainer","windowHeight","JSON","parse","stringify","goalToDelete","GoalList_templateObject","GoalList_templateObject2","GoalList_templateObject3","GoalList_templateObject4","form","GoalList_templateObject5","GoalList_templateObject6","GoalList_templateObject7","GoalList_templateObject8","GoalList_templateObject9","monthName","1","2","3","4","5","6","7","8","9","HeaderBar","updateCurMonth","toggleAnalytics","analyticsSelected","toggleAnalyticsSelected","calendarSelected","toggleCalendarSelected","clickedAnalytics","Header","HeaderBar_AppTitle","VerticalBar","MonthAndLogoutContainer","MonthContainer","CurMonth","MonthButton","CalendarButton","calendarOn","AnalyticsButton","analyticsOn","HeaderBar_Button","HeaderBar_templateObject","HeaderBar_templateObject2","HeaderBar_templateObject3","HeaderBar_templateObject4","HeaderBar_templateObject5","HeaderBar_templateObject6","HeaderBar_templateObject7","HeaderBar_templateObject8","HeaderBar_templateObject9","HeaderBar_templateObject10","Notes","handleNoteAdded","setGoal","setDate","note","setNote","justSavedNote","setJustSavedNote","showSuccess","noteAtStart","setNoteAtStart","_useState13","_useState14","counter","intervalId","setInterval","clearInterval","Notes_Container","NewContainer","SaveAnimationContainer","xmlns","viewBox","marginBottom","fill","d","cx","cy","r","stroke","stroke-width","stroke-linecap","points","SaveButton","dayToUpdate","OtherDisplay","NotesInput","spellCheck","Remainder","Placeholder","Notes_templateObject","Notes_templateObject2","Notes_templateObject3","Notes_templateObject4","Notes_templateObject5","Notes_templateObject6","textarea","Notes_templateObject7","Notes_templateObject8","DonutGraph","donutData","setDonutData","dayOfMonth","totalCompleted","isDayInMonth","substring","isDayInPast","newData","quantity","percentage","toFixed","name","DonutGraph_Container","Title","britecharts_react_min","data","customMouseOver","externalRadius","internalRadius","highlightSliceById","DonutGraph_templateObject","DonutGraph_templateObject2","BarGraph","barData","numDaysCompletedInPrevWeek","weeksAgo","days","range","curDay","firstDay","lastDay","getPreviousWeek","total","startDate","endDate","dateArray","split","startArray","endArray","isDayInRange","isHorizontal","margin","left","Analytics","Analytics_Container","StackedRowsContainer","Row","paddingTop","Analytics_templateObject","Analytics_templateObject2","Analytics_templateObject3","LoggedIn","isFirstTimeUser","setFirstTimeUser","setSelectedGoals","setColorMap","setExistingGoals","setSelected","setNewCompletedDays","setCurMonth","_useState15","_useState16","goalCreationDateMap","setGoalCreationDateMap","_useState17","_useState18","setSelectedDayForNotes","_useState19","_useState20","showAnalytics","setShowAnalytics","_updateCurMonth","goalsToRemove","_handleNoteAdded","dateIndex","findIndex","obj","undefined","exists","existingColorMap","createdDateMap","toISOString","sort","b","datesCompleted","datesCompletedMap","_x15","_addNotFirstTimeUser","addNotFirstTimeUser","OverallContainer","InnerRowContainer","nextHexColor","colorsInUse","values","updatedMap","keys","filteredSelectedGoals","CalendarContainer","_x8","_x9","_addCompletedDay","addCompletedDay","_x12","_x13","_x14","_removeCompletedDay","removeCompletedDay","curDate","LoggedIn_templateObject","LoggedIn_templateObject2","LoggedIn_templateObject3","App","_useAuth","overflow","Boolean","location","hostname","match","ReactDOM","render","appReducer","App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e085603.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext } from 'react';\n\nconst Context = createContext()\n\nexport function AppStateProvider({ reducer, initialState = {}, children }) {\n    const value = useReducer(reducer, initialState)\n    return <Context.Provider value={value} children={children} />\n}\n\nexport function useAppState() {\n    return useContext(Context);\n}","import firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyCvxmJXWdOQsBw6QkcH7MTghBk8YjBNnHo\",\n  authDomain: \"track-my-goals.firebaseapp.com\",\n  databaseURL: \"https://track-my-goals.firebaseio.com\",\n  projectId: \"track-my-goals\",\n  storageBucket: \"track-my-goals.appspot.com\",\n  messagingSenderId: \"1045953614271\"\n};\n\nfirebase.initializeApp(config);\n\nexport const db = firebase.firestore();\n\nexport const auth = () => firebase.auth();\n\n// export const mode = \"real\"\n\n// export default fire\n","import { completedDay } from './constants/AppConstants';\nimport { db } from './fire';\nimport { auth } from 'firebase';\n\nexport async function removeDaysCompleted(uid, goal) {\n    let daysCompletedCollection = db\n        .collection('completed')\n        .doc(uid)\n        .collection('daysCompleted');\n\n    let daysToDelete = daysCompletedCollection.where('goal', '==', goal);\n\n    daysToDelete.get().then((snapshot) => {\n        snapshot.docs.forEach((doc) => {\n            doc.ref.delete();\n        });\n    });\n}\n\nexport async function deleteGoal(uid, goal) {\n    // let existingGoal = db.collection(`goals-${uid}`);\n    let existingGoal: any = db\n        .collection(`goals`)\n        .doc(uid)\n        .collection('userGoals');\n\n    existingGoal = existingGoal.where('goal', '==', goal);\n    existingGoal = existingGoal.where('uid', '==', uid);\n\n    existingGoal.get().then((snapshot) => {\n        snapshot.docs.forEach((doc) => {\n            doc.ref.delete();\n        });\n    });\n}\n\n// TODO -- ADD A HEX COLOR FIELD TO THE GOAL COLLECTION. ALSO PUT THE AUTH UID ON THE COLLECTION NAME\nexport async function createGoal(uid, goal, color) {\n    return db\n        .collection(`goals`)\n        .doc(uid)\n        .collection('userGoals')\n        .add({\n            uid: uid,\n            goal: goal,\n            color: color,\n            created: +new Date() // Timestamp of creation\n        });\n}\n\nexport async function addCompletedDay(uid, completedDay: completedDay) {\n    return db\n        .collection('completed')\n        .doc(uid)\n        .collection('daysCompleted')\n        .add({\n            uid: uid,\n            goal: completedDay.goal,\n            date: completedDay.date,\n            notes: completedDay.notes\n        });\n}\n\n/**\n * TODO -- update to return the response of the request.\n */\nexport async function updateNotesForCompletedDay(uid, completedDay: completedDay) {\n    let dayToUpdate: any = db\n        .collection('completed')\n        .doc(uid)\n        .collection('daysCompleted');\n\n    dayToUpdate = dayToUpdate.where('goal', '==', completedDay.goal);\n    dayToUpdate = dayToUpdate.where('date', '==', completedDay.date);\n\n    dayToUpdate.get().then((snapshot) => {\n        snapshot.docs.forEach((doc) => {\n            db.collection('completed')\n                .doc(uid)\n                .collection('daysCompleted')\n                .doc(doc.id)\n                .update({\n                    uid: uid,\n                    goal: completedDay.goal,\n                    date: completedDay.date,\n                    notes: completedDay.notes\n                });\n        });\n    });\n}\n\nexport async function removeCompletedDay(uid, goal, date) {\n    // let dayCompleted = db.collection(`daysCompleted-${uid}`);\n\n    let daysCompleted: any = db\n        .collection('completed')\n        .doc(uid)\n        .collection('daysCompleted');\n\n    daysCompleted = daysCompleted.where('goal', '==', goal);\n    daysCompleted = daysCompleted.where('date', '==', date);\n\n    daysCompleted.get().then((snapshot) => {\n        snapshot.docs.forEach((doc) => {\n            doc.ref.delete();\n        });\n    });\n}\n\nexport async function addNotFirstTimeUser(uid) {\n    console.log('addNotFirstTimeUser', uid);\n    db.collection('notFirstTimeUser').add({ uid });\n}\n\nexport async function signup({ email, password }) {\n    try {\n        const { user } = await auth().createUserWithEmailAndPassword(email, password);\n\n        await db.doc(`users/${user.uid}`).set({\n            uid: user.uid\n        });\n    } catch (e) {\n        throw e;\n    }\n}\n\nexport function login(email, password) {\n    return auth().signInWithEmailAndPassword(email, password);\n}\n\nexport function logout() {\n    return auth().signOut();\n}\n\nexport function onAuthStateChanged(callback) {\n    auth().onAuthStateChanged(callback);\n}\n","import { retrieveSelectedDays } from \"./utils\";\n\nconst initialState = {\n  authAttempted: false,\n  auth: null,\n  user: null,\n  goals: [\"Workout\", \"Meditate\", \"Eat Healthy\"],\n  selectedGoal: 0,\n\n  // This is the new state I'm adding so that the calendar can dynamically load\n  // the selected days for each component\n\n  // Should probably just load this once on the first page load. And store it\n  // all in local memory.\n\n  // MAKE THIS A MAP OF GOALS TO DAYS SELECTED;\n  selectedDays: {\n    workout: []\n  }\n};\n\nconst appStateReducer = (state, action) => {\n  switch (action.type) {\n    case \"AUTH_CHANGE\": {\n      return { ...state, auth: action.auth, authAttempted: true };\n    }\n    case \"LOAD_USER\": {\n      return { ...state, user: action.user };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport { initialState };\nexport default appStateReducer;\n","import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { login, signup } from './utils';\n\nexport default function LoggedOut() {\n    const [focus, setFocus] = useState(null);\n\n    // Control whether user sees login or signup.\n    const [isLogin, setIsLogin] = useState(true);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    // login refs\n    const loginEmailRef = useRef(null);\n    const loginPasswordRef = useRef(null);\n\n    useOutsideAlerter(loginEmailRef);\n    useOutsideAlerter(loginPasswordRef);\n\n    // Signup refs\n    const signupEmailRef = useRef(null);\n    const signupPasswordRef = useRef(null);\n\n    useOutsideAlerter(signupEmailRef);\n    useOutsideAlerter(signupPasswordRef);\n\n    const handleLogin = async (event) => {\n        event.preventDefault();\n        setLoading(true);\n        try {\n            await login(loginEmailRef.current.value, loginPasswordRef.current.value);\n        } catch (error) {\n            setLoading(false);\n            setError(error.message);\n        }\n    };\n\n    const handleSignup = async (event) => {\n        event.preventDefault();\n        setLoading(true);\n        try {\n            await signup({\n                email: signupEmailRef.current.value,\n                password: signupPasswordRef.current.value\n            });\n        } catch (error) {\n            setLoading(false);\n            setError(error.message);\n        }\n    };\n\n    function useOutsideAlerter(ref) {\n        function handleClickOutside(event) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                setFocus('');\n                setError(null);\n            }\n        }\n        useEffect(() => {\n            // Bind the event listener\n            document.addEventListener('mousedown', handleClickOutside);\n            return () => {\n                // Unbind the event listener on clean up\n                document.removeEventListener('mousedown', handleClickOutside);\n            };\n        });\n    }\n\n    return isLogin ? (\n        <Login>\n            <Heading>Log into Habit Tracker</Heading>\n            <CreateAccount>\n                New? <TextLink onClick={() => setIsLogin(false)}>Create Account</TextLink>\n            </CreateAccount>\n            <LoginInput\n                ref={loginEmailRef}\n                isLogin={isLogin}\n                focus={focus === 'email'}\n                placeholder={'Email Address'}\n                onClick={() => {\n                    setFocus('email');\n                    setError(null);\n                }}\n            />\n            <LoginInput\n                ref={loginPasswordRef}\n                isLogin={isLogin}\n                type='password'\n                focus={focus === 'password'}\n                placeholder={'Password'}\n                onClick={() => {\n                    setFocus('password');\n                    setError(null);\n                }}\n            />\n            <LoginButton onClick={handleLogin}>Login</LoginButton>\n            {error ? <ErrorMessage>Invalid username or password</ErrorMessage> : null}\n        </Login>\n    ) : (\n        <Signup>\n            <Heading>Create Account</Heading>\n            <CreateAccount>\n                Have one? <TextLink onClick={() => setIsLogin(true)}>Log In</TextLink>\n            </CreateAccount>\n            <LoginInput\n                ref={signupEmailRef}\n                isLogin={isLogin}\n                focus={focus === 'email'}\n                placeholder={'Email Address'}\n                onClick={() => {\n                    setFocus('email');\n                    setError(null);\n                }}\n            />\n            <LoginInput\n                ref={signupPasswordRef}\n                isLogin={isLogin}\n                type='password'\n                focus={focus === 'password'}\n                placeholder={'Password'}\n                onClick={() => {\n                    setFocus('password');\n                    setError(null);\n                }}\n            />\n            <LoginButton onClick={handleSignup}>Create Account</LoginButton>\n            {error ? <ErrorMessage>{error}</ErrorMessage> : null}\n        </Signup>\n    );\n}\n\nconst TextLink = styled.u`\n    &:hover {\n        cursor: pointer;\n    }\n`;\n\nconst Signup = styled.div`\n    overflow: hidden;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center; /*centers items on the line (the x-axis by default)*/\n    align-items: center; /*centers items on the cross-axis (y by default)*/\n`;\n\nconst Login = styled.div`\n    overflow: hidden;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center; /*centers items on the line (the x-axis by default)*/\n    align-items: center; /*centers items on the cross-axis (y by default)*/\n`;\n\nconst Heading = styled.h1`\n    color: black;\n    font-size: 1.64rem;\n    font-family: 'Avenir Next' !important;\n`;\n\nconst CreateAccount = styled.h1`\n    color: '#A9A9A9';\n    font-size: 1rem;\n    margin-top: 1rem;\n    font-family: 'Avenir Next' !important;\n`;\n\nconst LoginInput = styled.input<{ focus; isLogin }>`\n    height: 3rem;\n    width: 18rem;\n    border: none;\n    font-size: 1em;\n    margin-top: 2rem;\n\n    padding-left: 1rem;\n    border-radius: ${(props) => (props.isLogin ? '0.3rem' : '0rem')};\n    font-family: 'Avenir Next' !important;\n\n    background-color: ${(props) => (props.focus ? '#e5e5e5' : 'transparent')};\n    border-bottom: ${(props) => (props.focus ? '3px solid transparent' : '2px solid black')};\n`;\n\nconst LoginButton = styled.button`\n    height: 3rem;\n    width: 19rem;\n    color: black;\n    background: #d8d8d8;\n    border: none;\n    font-size: 1.1rem;\n    margin-top: 2rem;\n\n    padding-left: 1rem;\n    border-radius: 0.3rem;\n    font-family: 'Avenir Next' !important;\n`;\n\nconst ErrorMessage = styled.h1`\n    margin-top: 1.5rem;\n    color: #cf2e38;\n    font-size: 1rem;\n    font-family: 'Avenir Next' !important;\n`;\n","import { useEffect } from \"react\";\nimport { onAuthStateChanged } from \"./utils\";\nimport { useAppState } from \"./app-state\";\n\nexport default function useAuth() {\n  const [{ authAttempted, auth }, dispatch] = useAppState();\n\n  useEffect(() => {\n    if (!authAttempted) {\n      return onAuthStateChanged(auth => {\n        if (auth) {\n          const { uid } = auth;\n          dispatch({\n            type: \"AUTH_CHANGE\",\n            auth: { uid }\n          });\n        } else {\n          dispatch({ type: \"AUTH_CHANGE\", auth: null });\n        }\n      });\n    }\n  }, [authAttempted, dispatch]);\n\n  return { authAttempted, auth };\n}\n","import React, { Fragment, useState } from 'react';\nimport styled from 'styled-components';\n\nexport default function MultiSelectSquare(color) {\n    const [isHovered, toggleHover] = useState(false);\n\n    return (\n        <Fragment>\n            <Square\n                onMouseEnter={() => toggleHover(!isHovered)}\n                onMouseLeave={() => toggleHover(!isHovered)}\n                color={color.color}>\n                {isHovered && color.goal ? <DropDown>{color.goal}</DropDown> : null}\n            </Square>\n        </Fragment>\n    );\n}\n\nconst Square = styled.div<{ color }>`\n    width: 1.5rem;\n    height: 1.5rem;\n    background-color: ${(props) => props.color};\n    border-radius: 2px;\n    border: 0.5px solid black;\n    margin: 0.1rem;\n\n    @media only screen and (max-width: 1450px) {\n        width: 1.2rem;\n        height: 1.2rem;\n    }\n\n    @media only screen and (max-width: 1305px) {\n        width: 0.9rem;\n        height: 0.9rem;\n    }\n`;\n\nconst DropDown = styled.div`\n    position: relative;\n\n    width: max-content;\n    padding-left: 1rem;\n    padding-right: 1rem;\n    height: 2.5rem;\n    background-color: black;\n    color: white;\n    text-align: center;\n    vertical-align: middle;\n    line-height: 2.5rem;\n    margin-top: 1.7rem;\n    border-radius: 10px;\n`;\n","import React, { useEffect, Fragment, useState } from 'react';\nimport styled from 'styled-components';\nimport MultiSelectSquare from './MultiSelectSquare';\n\ninterface Day {\n    completedColor?;\n    curGoal?; // shouldn't need this\n    day?;\n    month?;\n    year?;\n    goalsCompletedOnDay?;\n    selectedGoals?;\n    colorMap?;\n    handleDayCompleted?;\n    completedDays?;\n    disabled?;\n    handleNoteSelected?;\n    selectedDayForNotes?;\n}\n\nexport default function Day({\n    completedColor,\n    curGoal, // shouldn't need this\n    day,\n    month,\n    year,\n    goalsCompletedOnDay,\n    selectedGoals,\n    colorMap,\n    handleDayCompleted,\n    completedDays,\n    disabled,\n    handleNoteSelected,\n    selectedDayForNotes\n}: Day) {\n    const [myDate, setMyDate] = useState('');\n\n    const [isTodaysDate, setIsTodaysDate] = useState(false);\n\n    const [doesDayHaveNote, setDayHasNote] = useState(false);\n\n    const [notesSelected, setNotesSelected] = useState(false);\n\n    const [backgroundColor, setBackgroundColor] = useState('#464e50');\n\n    const [isDaySelected, toggleDaySelected] = useState(false);\n\n    useEffect(() => {\n        if (goalsCompletedOnDay && goalsCompletedOnDay.length === 1) {\n            setBackgroundColor(colorMap[goalsCompletedOnDay]);\n            toggleDaySelected(true);\n        } else {\n            setBackgroundColor('#464e50');\n        }\n    }, [goalsCompletedOnDay]);\n\n    useEffect(() => {\n        if (completedDays && completedDays[curGoal]) {\n            const day = completedDays[curGoal].find((e) => {\n                return e.date === myDate;\n            });\n\n            if (day && day.notes && day.notes.length) {\n                setDayHasNote(true);\n            } else {\n                setDayHasNote(false);\n            }\n        }\n    }, [completedDays, curGoal]);\n\n    useEffect(() => {\n        if (month && day && year) {\n            const date =\n                month.toString().padStart(2, '0') + '-' + day.toString().padStart(2, '0') + '-' + year.toString();\n            setMyDate(date);\n\n            if (selectedDayForNotes) {\n                setNotesSelected(date == selectedDayForNotes.date);\n            }\n\n            let today: any = new Date();\n            let dd = String(today.getDate()).padStart(2, '0');\n            let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n            let yyyy = today.getFullYear();\n            today = mm + '-' + dd + '-' + yyyy;\n\n            if (date == today) {\n                setIsTodaysDate(true);\n            } else {\n                setIsTodaysDate(false);\n            }\n        }\n    }, [month, day, year, selectedDayForNotes]);\n\n    function createColorSquares() {\n        const squares = [];\n\n        if (goalsCompletedOnDay) {\n            goalsCompletedOnDay.forEach((goal) => {\n                squares.push(<MultiSelectSquare color={colorMap[goal]} goal={goal} />);\n            });\n        }\n        return squares;\n    }\n\n    function getColorDisplay() {\n        // check if single select or multi-select.\n        if (selectedGoals && selectedGoals.length === 1) {\n            return (\n                <Button\n                    disabled={disabled}\n                    onClick={handleDayClicked}\n                    isNoteSelected={notesSelected}\n                    numGoals={1}\n                    isCurrentDay={isTodaysDate}\n                    isMultiSelect={selectedGoals.length > 1}>\n                    <Container style={{ backgroundColor: `${backgroundColor}` }}>\n                        <DayNumber style={{ color: 'white' }}>{day}</DayNumber>\n                        {doesDayHaveNote ? (\n                            <EditIcon\n                                className='glyphicon glyphicon-edit'\n                                style={{ color: backgroundColor === '#464e50' ? 'black' : 'white' }}\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    handleNoteSelected(myDate, curGoal);\n                                }}\n                            />\n                        ) : null}\n                    </Container>\n                </Button>\n            );\n        } else if (selectedGoals && selectedGoals.length > 1) {\n            const mutliSelectSquares = createColorSquares();\n\n            return (\n                <Button\n                    disabled={disabled}\n                    onClick={handleDayClicked}\n                    isNoteSelected={notesSelected}\n                    numGoals={2}\n                    isCurrentDay={isTodaysDate}\n                    isMultiSelect={selectedGoals.length > 1}>\n                    <MultiSquareContainer style={{ backgroundColor: '#464e50' }}>\n                        <DayNumber style={{ color: 'white' }}>{day}</DayNumber>\n                        <Squares>{mutliSelectSquares}</Squares>\n                    </MultiSquareContainer>\n                </Button>\n            );\n        } else if (disabled) {\n            return (\n                <Button\n                    disabled={true}\n                    isNoteSelected={false}\n                    numGoals={0}\n                    isCurrentDay={false}\n                    isMultiSelect={false}\n                />\n            );\n        }\n    }\n\n    function handleDayClicked() {\n        if (!disabled) {\n            if (selectedGoals.length === 1) {\n                const goal = selectedGoals[0];\n\n                // THIS IS PRETTTY INEFICIENT.\n                const isDayCompleted =\n                    completedDays &&\n                    completedDays[goal] &&\n                    completedDays[goal].filter((day) => day.date === myDate).length > 0;\n\n                if (!isDayCompleted) {\n                    handleDayCompleted(myDate, goal);\n                }\n\n                handleNoteSelected(myDate, curGoal);\n            }\n        }\n    }\n\n    return <Fragment>{getColorDisplay()}</Fragment>;\n}\n\nconst Squares = styled.div`\n    display: flex;\n    padding-left: 0.2rem;\n    flex-flow: row wrap;\n`;\n\nconst DayNumber = styled.div`\n    padding-right: 0.5rem;\n    padding-top: 0.3rem;\n`;\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: row-reverse;\n    height: 100%;\n    justify-content: space-between;\n`;\n\nconst MultiSquareContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n`;\n\nconst EditIcon = styled.i`\n    margin-left: 0.5rem;\n    margin-top: 0.5rem;\n`;\n\nconst Button = styled.button<{ disabled; isNoteSelected; numGoals; isCurrentDay; isMultiSelect }>`\n    font-family: 'Avenir Next' !important;\n    padding: 0;\n    display: inline-block;\n    height: ${(props) => (props.disabled ? '100%' : '6rem')};\n    width: 6rem;\n    -webkit-text-fill-color: ${(props) => (props.disabled ? 'transparent' : 'none')};\n    font-size: 1em;\n    margin: 0.4375rem;\n    border: ${(props) => (props.disabled ? 'none;' : props.isCurrentDay ? '2px solid white' : '2px solid #6B7A8F')};\n    border-radius: 3px;\n    text-align: right;\n\n    filter: ${(props) => (props.isNoteSelected || props.isMultiSelect ? 'none' : 'brightness(75%)')};\n    &:hover {\n        filter: ${(props) => (props.numGoals === 1 || props.isMultiSelect ? 'none' : 'brightness(75%)')};\n    }\n\n    // Size the square based on the width of the browser window.\n    @media only screen and (max-width: 1450px) {\n        height: ${(props) => (props.disabled ? '100%' : '5rem')};\n        width: 5rem;\n    }\n\n    @media only screen and (max-width: 1305px) {\n        height: ${(props) => (props.disabled ? '100%' : '3.8rem')};\n        width: 3.8rem;\n    }\n\n    margin-top: 0.3rem;\n`;\n","// TODO -- ADD MORE COLORS TO THIS LIST\n\nexport const GOAL_COLORS = ['#279020', '#902027', '#154B5D', '#22155D', '#892090', '#209089', '#908920', '#CF742E'];\n\nexport interface completedDay {\n    date: string;\n    goal: string;\n    notes: string;\n}\n\nexport const MONTH_DAYS = {\n    '01': 31,\n    '02': 28,\n    '03': 31,\n    '04': 30,\n    '05': 31,\n    '06': 30,\n    '07': 31,\n    '08': 31,\n    '09': 30,\n    '10': 31,\n    '11': 30,\n    '12': 31\n};\n","import React, { useState, Fragment } from 'react';\nimport styled from 'styled-components';\nimport Day from './Day';\n\nimport { animated, useSpring } from 'react-spring';\nimport { MONTH_DAYS } from './constants/AppConstants';\n\nexport function getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\n/**\n * NOTES -- Re-renders on every goal selection\n */\nexport default function Calendar({\n    curMonth,\n    curGoal,\n    completedDays,\n    colorMap,\n    selectedGoals,\n    handleDayCompleted,\n    handleDayRemoved,\n    handleNoteSelected,\n    selectedDayForNotes\n}) {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    const animatedProps = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n    const DaysOfWeek = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'];\n\n    function getDate(month: number, day: number) {\n        return (\n            month.toString().padStart(2, '0') +\n            '-' +\n            day\n                .toString()\n                .toString()\n                .padStart(2, '0') +\n            '-' +\n            '2019'\n        );\n    }\n\n    function getMonth(month, completedDays) {\n        const myMonth = [];\n        let dayOfWeek = 1;\n        let week = [];\n\n        const daysPerRow = 7;\n        let firstOfMonth: any = month.toString().padStart(2, '0') + '-01-2019';\n        firstOfMonth = new Date(firstOfMonth).getDay();\n\n        // Add in a row for the days of the week\n        for (let day = 0; day < 7; day++) {\n            week.push(<DayOfWeek>{DaysOfWeek[day]}</DayOfWeek>);\n        }\n\n        myMonth.push(week);\n        week = [];\n\n        // Add in blank days until the first day of the month.\n        for (let unusedDay = 0; unusedDay < firstOfMonth; unusedDay++) {\n            week.push(<Day disabled={true} />);\n        }\n\n        dayOfWeek = firstOfMonth + 1;\n\n        // USING 35 SO THAT WE GET 5 WEEKS.\n        for (let i = 1; i <= MONTH_DAYS[month]; i++) {\n            const date = getDate(month, i);\n\n            if (dayOfWeek === daysPerRow + 1) {\n                myMonth.push(week);\n                dayOfWeek = 1;\n                week = [];\n            }\n\n            let goalsCompletedOnDay = [];\n            selectedGoals.forEach((selectedGoal) => {\n                if (\n                    completedDays[selectedGoal] &&\n                    completedDays[selectedGoal].filter((day) => day.date === date).length > 0 //.indexOf(date) > -1\n                ) {\n                    goalsCompletedOnDay.push(selectedGoal);\n                }\n            });\n\n            week.push(\n                <Day\n                    completedColor={colorMap ? colorMap[curGoal] : 'green'}\n                    curGoal={curGoal}\n                    day={i}\n                    month={parseInt(month)}\n                    year={2019}\n                    goalsCompletedOnDay={goalsCompletedOnDay}\n                    selectedGoals={selectedGoals}\n                    completedDays={completedDays}\n                    colorMap={colorMap}\n                    handleDayCompleted={handleDayCompleted}\n                    disabled={false}\n                    handleNoteSelected={handleNoteSelected}\n                    selectedDayForNotes={selectedDayForNotes}\n                />\n            );\n            dayOfWeek += 1;\n        }\n\n        // fill out the last row with empty days\n        for (let unusedDay = 0; unusedDay < 8 - dayOfWeek; unusedDay++) {\n            week.push(<Day disabled={true} />);\n        }\n\n        myMonth.push(week);\n        week = [];\n\n        // Adds a blank row of disabled days so that the size stays the same.\n        if (myMonth.length === 7) {\n            for (let unusedDay = 0; unusedDay < 7; unusedDay++) {\n                week.push(<Day disabled={true} />);\n            }\n\n            myMonth.push(week);\n        }\n\n        week = [];\n\n        week.push(\n            selectedDayForNotes ? (\n                <DeselectButton\n                    onClick={() => {\n                        if (selectedGoals && selectedGoals.length === 1) {\n                            handleDayRemoved(selectedDayForNotes.date, selectedGoals[0]);\n                        }\n                    }}>\n                    Remove Day\n                </DeselectButton>\n            ) : (\n                <Day disabled={true} />\n            )\n        );\n\n        myMonth.push(week);\n\n        return (\n            <Container>\n                {myMonth.map((week, idx) => {\n                    if (idx === myMonth.length - 1) {\n                        return <DeselectWrapper>{week}</DeselectWrapper>;\n                    }\n\n                    return <div>{week}</div>;\n                })}\n            </Container>\n        );\n    }\n\n    function getYear(completedDays) {\n        const calendarYear = {};\n        for (let i = 1; i <= 12; i++) {\n            let monthNum = i.toString();\n            monthNum = monthNum.length === 1 ? '0' + monthNum : monthNum;\n\n            const month = getMonth(monthNum, completedDays);\n            calendarYear[i] = month;\n        }\n        return calendarYear;\n    }\n\n    const calendarYear = getYear(completedDays);\n\n    return <Container style={animatedProps}>{calendarYear[curMonth] ? calendarYear[curMonth] : null}</Container>;\n}\n\nconst Container = styled(animated.div)`\n    display: flex;\n\n    flex-direction: column;\n\n    align-items: center;\n\n    justify-content: center;\n\n    margin-top: 1rem;\n    overflow: hidden;\n\n    margin-top: 3rem;\n`;\n\nconst Temp = styled.div`\n    display: flex;\n`;\n\nconst DayOfWeek = styled.div`\n    display: inline-block;\n    width: 6rem;\n    height: 1rem;\n    margin: 0.4375rem;\n    margin-bottom: 2rem;\n    text-align: center;\n    font-size: 1.15rem;\n\n    color: white;\n\n    @media only screen and (max-width: 1450px) {\n        width: 5rem;\n    }\n\n    @media only screen and (max-width: 1305px) {\n        width: 3.8rem;\n    }\n`;\n\nconst DeselectWrapper = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: flex-end;\n    justify-content: flex-end;\n`;\n\nconst DeselectButton = styled.button`\n    background-color: #464e50;\n    width: 10rem;\n    height: 4rem;\n    margin-right: 9rem;\n    font-family: 'Avenir Next' !important;\n\n    background-color: #1d1f20;\n    border-color: #0cc6ce;\n    color: #80f2f7;\n    border-radius: 0.1rem;\n\n    &:hover {\n        filter: ${(props) => (props.disabled ? 'brightness(100%)' : 'brightness(85%)')};\n    }\n\n    @media only screen and (max-width: 1450px) {\n        width: 7.5rem;\n        height: 3rem;\n        margin-right: 2rem;\n    }\n\n    @media only screen and (max-width: 1305px) {\n        width: 3.8rem;\n    }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport default function DeleteGoalRow({ goal, index, undoDelete, confirmDelete }) {\n    return (\n        <NewListRow onClick={() => undoDelete}>\n            <b style={{ paddingLeft: '1rem' }}>Delete goal?</b>\n            {/* <b style={{ paddingLeft: '.2rem' }}>{goal}?</b> */}\n            <div>\n                <i\n                    className='glyphicon glyphicon-remove'\n                    style={{ paddingLeft: '4rem' }}\n                    onClick={() => undoDelete()}\n                />\n                <i\n                    className='glyphicon glyphicon-trash'\n                    style={{ paddingLeft: '2rem', paddingRight: '1rem' }}\n                    onClick={() => confirmDelete(goal, index)}\n                />\n            </div>\n        </NewListRow>\n    );\n}\n\nconst NewListRow = styled.div`\n    display: flex;\n    direction: ltr;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    vertical-align: middle;\n    line-height: 2.5rem;\n    height: 5rem !important;\n    margin-bottom: 2rem;\n    width: 19.5rem;\n    border-radius: 0.3rem;\n    border: 1px solid #565656;\n\n    background-color: #b30000;\n\n    padding-left: 0.5rem;\n    color: white;\n    margin-left: 0.5rem;\n    font-family: 'Avenir Next' !important;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport default function GoalRow({\n    index,\n    goal,\n    goals,\n    goalsToDelete,\n    colorMap,\n    selectedGoals,\n    creationDateMap,\n    handleGoalSelected,\n    updateSelected,\n    handleGoalRemoved,\n    readyToDelete\n}) {\n    return (\n        <ListRow\n            selected={selectedGoals.includes(goal)}\n            checked={\n                (document.getElementById(goal) as HTMLInputElement) &&\n                (document.getElementById(goal) as HTMLInputElement).checked\n            }\n            colorMap={colorMap}\n            goal={goal}\n            toDelete={goalsToDelete.includes(goal)}\n            onClick={() => {\n                if (goals.includes(goal)) {\n                    if (selectedGoals) {\n                        selectedGoals.forEach((element) => {\n                            if (document.getElementById(element) as HTMLInputElement) {\n                                (document.getElementById(element) as HTMLInputElement).checked = false;\n                            }\n                        });\n                    }\n                    // Set as selected and check this rows checkbox, remove the previously selected from the selectedList.\n                    handleGoalSelected(goal, selectedGoals);\n                    updateSelected(goal);\n\n                    (document.getElementById(goal) as HTMLInputElement).checked = true;\n                }\n            }}>\n            <ListRowLeft>\n                <Circle color={colorMap && colorMap[goal] ? colorMap[goal] : 'red'} className='dot' />\n                <ListRowInfo>\n                    <Goal>{goal}</Goal>\n                    <StartDate>{creationDateMap[goal]}</StartDate>\n                </ListRowInfo>\n            </ListRowLeft>\n            <ListRowRight>\n                <Checkbox>\n                    <input\n                        id={goal}\n                        type='checkbox'\n                        defaultChecked={index === 0}\n                        onClick={(e) => {\n                            e.stopPropagation();\n                            let checkbox = document.getElementById(goal) as HTMLInputElement;\n\n                            if (checkbox.checked) {\n                                handleGoalSelected(goal);\n                            } else if (selectedGoals.length === 1) {\n                                e.preventDefault();\n                            } else {\n                                handleGoalRemoved(goal);\n                            }\n                        }}\n                    />\n                </Checkbox>{' '}\n                <DeleteButton\n                    onClick={(e) => {\n                        e.stopPropagation();\n                        readyToDelete(goal);\n                    }}>\n                    {' '}\n                    <DeleteIcon className='glyphicon glyphicon-trash' />\n                </DeleteButton>\n            </ListRowRight>\n        </ListRow>\n    );\n}\n\ninterface ListRowProps {\n    selected: boolean;\n    checked: boolean;\n    colorMap: Object;\n    goal: string;\n    toDelete: boolean; // check if this row is in deleting state (user clicked delete button but waiting for confirmation / cancellation).\n}\n\nconst ListRow = styled.div<ListRowProps>`\n  display: flex;\n  direction: ltr;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  vertical-align: middle;\n  line-height: 2.5rem;\n  height: 4.2rem;\n  margin-bottom: 1rem;\n  width: 19.5rem;\n  border-radius: 0.3rem;\n  border: 1px solid #888888;\n  background-color: ${(props) => (props.toDelete ? 'red' : '#464e50')}; \n  padding-left: 0.5rem;\n  color: white;\n  margin-left: 0.5rem;\n  font-family: \"Avenir Next\" !important;\n\n  filter: ${(props) => (props.selected ? 'brightness(100%)' : 'brightness(65%)')};\n  &:hover {\n    /* background-color: ${(props) => (props.colorMap && props.goal ? props.colorMap[props.goal] : '#d8d8d8')}; */\n    filter: ${(props) => (props.selected ? 'brightness(100%)' : 'brightness(50%)')};\n  }\n`;\n\nconst DeleteButton = styled.button`\n    background-color: rgba(0, 0, 0, 0);\n    border: none;\n`;\n\nconst DeleteIcon = styled.i`\n    padding-right: 0.5rem;\n    &:hover {\n        filter: brightness(85%);\n        color: red;\n    }\n`;\n\nconst ListRowInfo = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n    padding-left: 0.75rem;\n`;\n\nconst Circle = styled.span<{ color }>`\n    height: 2.5rem;\n    width: 2.5rem;\n    background-color: ${(props) => props.color};\n    border-radius: 50%;\n    border: 0.04rem solid black;\n`;\n\nconst Goal = styled.div`\n    color: white;\n    font-size: 1rem;\n    font-family: 'Avenir Next' !important;\n    overflow: auto;\n    height: 29px;\n    margin-bottom: 0;\n    overflow-y: hidden; // hide vertical\n    overflow-x: hidden;\n`;\n\nconst StartDate = styled.div`\n    color: '#A9A9A9';\n    font-size: 0.6rem;\n    font-family: 'Avenir Next' !important;\n    overflow-y: hidden; // hide vertical\n    overflow-x: hidden;\n    height: 25px;\n    padding-bottom: 0.6rem;\n`;\n\nconst ListRowLeft = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n`;\n\nconst ListRowRight = styled.div`\n    display: flex;\n    justify-content: end;\n    align-items: center;\n`;\n\nconst Checkbox = styled.label`\n    margin-right: 0rem;\n    width: 3rem;\n`;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { createGoal, deleteGoal, removeDaysCompleted } from './utils';\nimport useAuth from './useAuth';\n\nimport './App.scss';\n\nimport { getWindowDimensions } from './Calendar';\nimport DeleteGoalRow from './DeleteGoalRow';\nimport GoalRow from './GoalRow';\n\nexport default function GoalsList({\n    existingGoals,\n    colorMap,\n    updateSelected,\n    addToColorMap,\n    removeFromColorMap,\n    handleGoalSelected,\n    handleGoalRemoved,\n    selectedGoals,\n    creationDateMap,\n    selectAllGoals\n}) {\n    const { auth } = useAuth();\n\n    // This is the goal that is currently typed into the new goal input.\n    const [newGoal, setNewGoal] = useState('');\n\n    // List of goals that are in the pre-delete state.\n    const [goalsToDelete, setGoalsToDelete] = useState([]);\n\n    // All of the goals\n    const [goals, setGoals] = useState(existingGoals);\n\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        setWindowDimensions(getWindowDimensions());\n    }, []);\n\n    useEffect(() => {\n        setGoals(existingGoals);\n    }, [existingGoals]);\n\n    // TODO -- THE CHECK BOXES ARE MESSED UP WHEN DELETING\n    // DON'T SET THE DELETED GOAL AS SELECTED, JUST USE SEPARATE STATE.\n    function handleDelete(goal: string, idx: number) {\n        deleteGoal(auth.uid, goal);\n        setGoals(goals.filter((g) => g !== goal));\n        removeDaysCompleted(auth.uid, goal);\n\n        removeFromColorMap(goal);\n\n        handleGoalRemoved(goal);\n\n        // Check if there are still goals remaining after this delete.\n        if (goals.length - 1 > 0) {\n            const nextGoalIdx = idx === 0 ? idx + 1 : idx - 1;\n            updateSelected(goals[nextGoalIdx]);\n            handleGoalSelected(goals[nextGoalIdx], goals[idx]);\n        }\n    }\n\n    function undoDelete(goal: string) {\n        let update = JSON.parse(JSON.stringify(goalsToDelete));\n        update = update.filter((g) => g != goal);\n\n        setGoalsToDelete(update);\n    }\n\n    /**\n     * When 'Select all' is clicked, set every goal's checkbox to be checked.\n     * @param goals\n     */\n    function checkAllCheckmarks(goals: string[]) {\n        goals.forEach((goal) => {\n            if (document.getElementById(goal) as HTMLInputElement) {\n                (document.getElementById(goal) as HTMLInputElement).checked = true;\n            }\n        });\n    }\n\n    function readyToDelete(goal: string) {\n        setGoalsToDelete([...goalsToDelete, goal]);\n    }\n\n    return (\n        <GoalContainer>\n            <InnerContainer>\n                <AppTitle>My Goals</AppTitle>\n                <InputContainer>\n                    <MyForm>\n                        <GoalInput\n                            type='text'\n                            placeholder='Enter your next goal ...'\n                            onChange={(e) => {\n                                setNewGoal(e.target.value);\n                            }}\n                            onSubmit={(e) => {\n                                return false;\n                            }}\n                            onKeyPress={(e) => {\n                                if (e.keyCode === 13 || e.key === 'Enter') {\n                                    e.preventDefault();\n                                }\n                            }}\n                        />\n                        <AddGoalButton\n                            type='reset'\n                            onClick={() => {\n                                if (newGoal.length > 0 && !goals.includes(newGoal)) {\n                                    const goalColor = addToColorMap(newGoal);\n                                    createGoal(auth.uid, newGoal, goalColor);\n\n                                    if (goals.includes(newGoal)) {\n                                        updateSelected(newGoal);\n                                    }\n\n                                    setNewGoal('');\n                                    setGoals([...goals, newGoal]);\n                                }\n                            }}>\n                            ADD\n                        </AddGoalButton>\n                    </MyForm>\n                </InputContainer>\n                <SelectAll\n                    onClick={() => {\n                        selectAllGoals(goals);\n                        checkAllCheckmarks(goals);\n                    }}>\n                    Select All\n                </SelectAll>\n                <ListContainer windowHeight={windowDimensions.height}>\n                    {goals\n                        ? goals.map((goal, idx) => {\n                              return (\n                                  <Fragment>\n                                      {goalsToDelete.includes(goal) ? (\n                                          <DeleteGoalRow\n                                              goal={goal}\n                                              index={idx}\n                                              undoDelete={() => undoDelete(goal)}\n                                              confirmDelete={(goalToDelete, index) => handleDelete(goalToDelete, index)}\n                                          />\n                                      ) : (\n                                          <GoalRow\n                                              index={idx}\n                                              goal={goal}\n                                              goals={goals}\n                                              goalsToDelete={goalsToDelete}\n                                              colorMap={colorMap}\n                                              selectedGoals={selectedGoals}\n                                              creationDateMap={creationDateMap}\n                                              handleGoalSelected={handleGoalSelected}\n                                              handleGoalRemoved={handleGoalRemoved}\n                                              updateSelected={updateSelected}\n                                              readyToDelete={readyToDelete}\n                                          />\n                                      )}\n                                  </Fragment>\n                              );\n                          })\n                        : null}\n                </ListContainer>\n            </InnerContainer>\n        </GoalContainer>\n    );\n}\n\nconst AppTitle = styled.div`\n    color: white;\n    margin-bottom: 1rem;\n    font-family: 'Avenir Next';\n    font-size: 1.5rem;\n`;\n\nconst InnerContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n\n    margin-top: 1rem;\n`;\n\nconst GoalContainer = styled.div`\n    background-color: #1c1e1f;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n    font-family: Helvetica;\n    height: 100%;\n    width: 25rem;\n    border-right: 1.5px solid #47484a;\n`;\n\nconst InputContainer = styled.div`\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    flex-direction: row;\n`;\n\nconst MyForm = styled.form`\n    display: flex;\n    flex-direction: row;\n`;\n\nconst ListContainer = styled.div<{ windowHeight }>`\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    direction: rtl;\n    flex-direction: column;\n    align-items: center;\n    display: flex;\n    direction: rtl;\n    flex-direction: column;\n    align-items: center;\n    height: ${(props) => (props.windowHeight ? `${props.windowHeight - 330}px` : '35rem')};\n    overflow-y: scroll;\n    margin-top: 2rem;\n    padding-left: 0.5rem;\n`;\n\nconst SelectAll = styled.button`\n    margin-top: 1rem;\n    width: 8rem;\n\n    background-color: #1d1f20;\n    border-color: #0cc6ce;\n    color: #80f2f7;\n\n    border: 2px solid;\n    font-size: 1em;\n\n    filter: brightness(75%);\n\n    &:hover {\n        filter: brightness(50%);\n    }\n`;\n\nconst GoalInput = styled.input`\n    border: 2px solid;\n\n    height: 3rem;\n    width: 18rem;\n    color: #9a968f;\n    font-size: 1em;\n    background-color: #464e50;\n    padding-left: 0.5rem;\n    /* border-radius: 0.3rem 0 0 0.3rem; */\n\n    ::-webkit-input-placeholder {\n        /* Chrome/Opera/Safari */\n        color: #f5f5f5;\n    }\n    ::-moz-placeholder {\n        /* Firefox 19+ */\n        color: #f5f5f5;\n    }\n    :-ms-input-placeholder {\n        /* IE 10+ */\n        color: #f5f5f5;\n    }\n    :-moz-placeholder {\n        /* Firefox 18- */\n        color: #f5f5f5;\n    }\n`;\n\nconst AddGoalButton = styled.button`\n    background-color: #2b2f31;\n    display: inline-block;\n\n    font-size: 1em;\n    /* padding: 1rem; */\n\n    font-weight: bold;\n\n    height: 100%;\n\n    &:hover {\n        filter: brightness(85%);\n    }\n`;\n","import React, { useState, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { logout } from './utils';\n\nconst monthName = {\n    1: 'Jan',\n    2: 'Feb',\n    3: 'mar',\n    4: 'Apr',\n    5: 'May',\n    6: 'Jun',\n    7: 'Jul',\n    8: 'Aug',\n    9: 'Sept',\n    10: 'Oct',\n    11: 'Nov',\n    12: 'Dec'\n};\n\nexport default function HeaderBar({ curMonth, updateCurMonth, toggleAnalytics }) {\n    const [analyticsSelected, toggleAnalyticsSelected] = useState(false);\n\n    const [calendarSelected, toggleCalendarSelected] = useState(true);\n\n    function clickedAnalytics() {\n        toggleAnalyticsSelected(!analyticsSelected);\n        toggleCalendarSelected(!calendarSelected);\n        toggleAnalytics();\n    }\n\n    return (\n        <Header>\n            <AppTitle>Track-My-Goals</AppTitle>\n            <VerticalBar />\n            <MonthAndLogoutContainer>\n                <MonthContainer>\n                    <CurMonth>{monthName[curMonth] + ' 2019'}</CurMonth>\n                    <MonthButton\n                        onClick={() => {\n                            if (curMonth != 1) {\n                                updateCurMonth(curMonth - 1);\n                            }\n                        }}>\n                        Prev\n                    </MonthButton>\n                    <MonthButton\n                        onClick={() => {\n                            if (curMonth != 12) {\n                                updateCurMonth(curMonth + 1);\n                            }\n                        }}>\n                        Next\n                    </MonthButton>\n                </MonthContainer>\n                <div>\n                    <CalendarButton onClick={clickedAnalytics} calendarOn={calendarSelected}>\n                        Calendar\n                    </CalendarButton>\n                    <AnalyticsButton onClick={clickedAnalytics} analyticsOn={analyticsSelected}>\n                        Analytics\n                    </AnalyticsButton>\n                </div>\n\n                <Button onClick={logout}>Logout</Button>\n            </MonthAndLogoutContainer>\n        </Header>\n    );\n}\n\nconst AppTitle = styled.h1`\n    font-size: 1.1rem;\n    font-family: 'Montserrat', sans-serif;\n    color: #d8d8d8;\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n    width: 18rem;\n`;\n\nconst MonthContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-evenly;\n`;\n\nconst Header = styled.div`\n    /* display: flex;\n    flex-direction: row;\n    height: 4.4rem;\n    background-color: #d8d8d8;\n    border-bottom: 2px solid #979797; */\n\n    color: white;\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: row;\n    flex-direction: row;\n    height: 4.4rem;\n    background-color: #222627;\n    border-bottom: 2px solid #47484a;\n`;\n\nconst MonthAndLogoutContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    width: 100%;\n    background-color: #222627;\n`;\n\nconst VerticalBar = styled.div`\n    border-left: 0rem dotted black; // TODO -- DECIDE IF I WANT THIS BAR HERE\n    height: 4.5rem;\n    margin-left: 7.7rem;\n`;\n\nconst CurMonth = styled.div`\n    font-size: 2.5rem;\n    color: white;\n    margin-left: 3rem;\n    font-family: 'Montserrat', sans-serif;\n    /* font-family: \"Avenir Next\" !important; */\n    margin-right: 1rem;\n    padding-left: 1rem;\n    margin-left: 3rem;\n`;\n\nconst MonthButton = styled.button`\n    display: inline-block;\n\n    font-size: 1em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border: 2px solid;\n\n    border-radius: 3px;\n    display: inline-block;\n    border-radius: 0.3rem;\n\n    background-color: #1d1f20;\n    border-color: #0cc6ce;\n    color: #80f2f7;\n\n    &:hover {\n        filter: brightness(75%);\n    }\n`;\n\nconst Button = styled.button`\n    display: inline-block;\n\n    font-size: 1em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border: 2px solid;\n    border-radius: 3px;\n    display: inline-block;\n    border-radius: 0.3rem;\n\n    background-color: #1d1f20;\n    border-color: #0cc6ce;\n    color: #80f2f7;\n\n    &:hover {\n        filter: brightness(75%);\n    }\n`;\n\nconst CalendarButton = styled.button<{ calendarOn }>`\n    display: inline-block;\n\n    font-size: 1em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border: 2px solid;\n    border-radius: 3px;\n    display: inline-block;\n    border-radius: 0.3rem;\n\n    border-color: ${(props) => (props.calendarOn ? 'white' : '#086186')};\n    color: ${(props) => (props.calendarOn ? 'white' : '#086186')};\n\n    background-color: ${(props) => (props.calendarOn ? '#086186' : '#1d1f20')};\n    &:hover {\n        filter: brightness(75%);\n    }\n`;\n\nconst AnalyticsButton = styled.button<{ analyticsOn }>`\n    display: inline-block;\n\n    font-size: 1em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border: 2px solid;\n    border-radius: 3px;\n    display: inline-block;\n    border-radius: 0.3rem;\n\n    border-color: ${(props) => (props.analyticsOn ? 'white' : '#CF2E38')};\n    color: ${(props) => (props.analyticsOn ? 'white' : '#CF2E38')};\n\n    background-color: ${(props) => (props.analyticsOn ? '#CF2E38' : '#1d1f20')};\n    &:hover {\n        filter: brightness(75%);\n    }\n`;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { completedDay } from './constants/AppConstants';\nimport { getWindowDimensions } from './Calendar';\nimport { useSpring } from 'react-spring';\n\nexport default function Notes({ selectedDayForNotes, completedDays, handleNoteAdded }) {\n    const [goal, setGoal] = useState(null);\n\n    const [date, setDate] = useState(null);\n\n    const [note, setNote] = useState('');\n\n    const [justSavedNote, setJustSavedNote] = useState(false);\n\n    const [showSuccess, setShowSuccess] = useState(1);\n\n    const props = useSpring({ opacity: 0, from: { opacity: showSuccess } });\n\n    const [noteAtStart, setNoteAtStart] = useState('');\n\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        setWindowDimensions(getWindowDimensions());\n    }, []);\n\n    useEffect(() => {\n        if (selectedDayForNotes) {\n            setGoal(selectedDayForNotes.goal);\n            setDate(selectedDayForNotes.date);\n            setNote(selectedDayForNotes.notes ? selectedDayForNotes.notes : '');\n            setNoteAtStart(selectedDayForNotes.notes ? selectedDayForNotes.notes : '');\n        }\n    }, [selectedDayForNotes, completedDays]);\n\n    /**\n     * Display the green checkmark for 2 seconds before switching back to teh save button.\n     */\n    useEffect(() => {\n        if (justSavedNote) {\n            let counter = 2;\n            let intervalId = setInterval(() => {\n                counter = counter - 1;\n                if (counter === 0) {\n                    setJustSavedNote(false);\n                    clearInterval(intervalId);\n                }\n            }, 1000);\n        }\n    }, [justSavedNote]);\n\n    function displaySuccessfulSave() {\n        return (\n            <SaveAnimationContainer>\n                <svg\n                    id='successAnimation'\n                    className='animated'\n                    xmlns='http://www.w3.org/2000/svg'\n                    width='70'\n                    height='70'\n                    viewBox='0 0 70 70'\n                    style={{ marginBottom: '0.5rem' }}>\n                    <path\n                        id='successAnimationResult'\n                        fill='#D8D8D8'\n                        d='M35,60 C21.1928813,60 10,48.8071187 10,35 C10,21.1928813 21.1928813,10 35,10 C48.8071187,10 60,21.1928813 60,35 C60,48.8071187 48.8071187,60 35,60 Z M23.6332378,33.2260427 L22.3667622,34.7739573 L34.1433655,44.40936 L47.776114,27.6305926 L46.223886,26.3694074 L33.8566345,41.59064 L23.6332378,33.2260427 Z'\n                    />\n                    <circle\n                        id='successAnimationCircle'\n                        cx='35'\n                        cy='35'\n                        r='24'\n                        stroke='#979797'\n                        stroke-width='2'\n                        stroke-linecap='round'\n                        fill='transparent'\n                    />\n                    <polyline\n                        id='successAnimationCheck'\n                        stroke='#979797'\n                        stroke-width='2'\n                        points='23 34 34 43 47 27'\n                        fill='transparent'\n                    />\n                </svg>\n            </SaveAnimationContainer>\n        );\n    }\n\n    return (\n        <Fragment>\n            {selectedDayForNotes ? (\n                <Container>\n                    <NewContainer>\n                        <Fragment>\n                            {justSavedNote ? (\n                                displaySuccessfulSave()\n                            ) : (\n                                <SaveButton\n                                    style={{ filter: note != noteAtStart ? 'brightness(95%)' : 'brightness(75%)' }}\n                                    onClick={async () => {\n                                        if (goal && date && note && note.length) {\n                                            const dayToUpdate: completedDay = {\n                                                goal: goal,\n                                                date: date,\n                                                notes: note\n                                            };\n                                            await handleNoteAdded(dayToUpdate);\n                                            setJustSavedNote(true);\n                                        }\n                                    }}>\n                                    Save note\n                                </SaveButton>\n                            )}\n                            <OtherDisplay>\n                                <br />\n                                {goal}\n                                <br />\n                                {date}\n                            </OtherDisplay>\n                            <NotesInput\n                                spellCheck={false}\n                                placeholder={note ? null : `Add Notes for ${goal} on ${date}`}\n                                windowHeight={windowDimensions.height}\n                                onChange={(e) => setNote(e.target.value)}\n                                value={note}>\n                                <button>Hello</button>\n                            </NotesInput>\n                            <Remainder />\n                        </Fragment>\n                    </NewContainer>\n                </Container>\n            ) : (\n                <Container>\n                    <NewContainer>\n                        <Placeholder windowHeight={windowDimensions.height}>Click on a day to add a note</Placeholder>\n                    </NewContainer>\n                </Container>\n            )}\n        </Fragment>\n    );\n}\n\nconst Placeholder = styled.div<{ windowHeight }>`\n    color: white;\n    width: 17rem;\n    background: #222627;\n    font-family: 'Avenir Next';\n    height: ${(props) => (props.windowHeight ? `${props.windowHeight}px` : '35rem')};\n    border: none;\n    padding-top: 3rem;\n    padding-right: 1rem;\n    text-align: center;\n    /* border-left: 1.5px solid #979797; */\n    background-color: #222627;\n`;\n\nconst SaveButton = styled.button`\n    /* border: 3px solid black; */\n    height: 5rem;\n    /* background-color: #464e50;\n    font-family: 'Gayathri', sans-serif;\n    font-size: 1.3rem;\n    color: white;\n    padding: 0;\n    border: 0;\n\n    white-space: normal;\n\n    &:hover {\n        filter: brightness(85%);\n    } */\n\n    font-size: 1.2em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border: 2px solid;\n    border-radius: 3px;\n    display: inline-block;\n    border-radius: 0.3rem;\n\n    background-color: #fdfd96;\n    border-color: #0cc6ce;\n    color: black;\n\n    &:hover {\n        filter: brightness(75%) !important;\n    }\n`;\n\nconst SaveAnimationContainer = styled.button`\n    height: 5rem;\n    font-size: 1.2em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border-radius: 3px;\n    display: inline-block;\n\n    background-color: #fdfd96;\n`;\n\nconst NewContainer = styled.div`\n    /* display: flex;\n    flex-direction: column;\n    background-color: #d8d8d8; */\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    background-color: #fdfd96;\n`;\n\nconst Container = styled.div`\n    width: 17rem;\n    background-color: #fdfd96;\n\n    color: #09868b;\n    border-left: 1.5px solid #47484a;\n    position: absolute;\n    right: 0;\n`;\n\nconst OtherDisplay = styled.div`\n    color: black;\n    width: 17rem;\n    background: #d8d8d8;\n    font-family: 'Gayathri', sans-serif;\n    height: 8rem;\n    padding-left: 0.5rem;\n    border: none;\n    padding-top: 3rem;\n    font-size: 1.5rem;\n\n    /* border-left: 1.5px solid #979797; */\n    background-color: #fdfd96;\n\n    background-attachment: local;\n    background-image: linear-gradient(to right, #fdfd96 10px, transparent 10px),\n        linear-gradient(to left, #fdfd96 10px, transparent 10px),\n        repeating-linear-gradient(#fdfd96, #fdfd96 30px, #ccc 30px, #ccc 31px, white 31px);\n    line-height: 31px;\n    padding: 8px 10px;\n`;\n\nconst NotesInput = styled.textarea<{ windowHeight }>`\n    color: black;\n    width: 17rem;\n    background: #d8d8d8;\n    font-family: 'Gayathri', sans-serif;\n    height: ${(props) => (props.windowHeight ? `${props.windowHeight}px` : '35rem')};\n    padding-left: 0.5rem;\n    border: none;\n    padding-top: 3rem;\n\n    /* border-left: 1.5px solid #979797; */\n    background-color: #fdfd96;\n\n    background-attachment: local;\n    background-image: linear-gradient(to right, #fdfd96 10px, transparent 10px),\n        linear-gradient(to left, #fdfd96 10px, transparent 10px),\n        repeating-linear-gradient(#fdfd96, #fdfd96 30px, #ccc 30px, #ccc 31px, white 31px);\n    line-height: 31px;\n    padding: 8px 10px;\n`;\n\nconst Remainder = styled.div`\n    background: #d8d8d8;\n    height: 200px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Donut } from 'britecharts-react';\n\nexport default function DonutGraph({ goal, completedDays }) {\n    const [donutData, setDonutData] = useState([]);\n\n    useEffect(() => {\n        const today = new Date();\n        const curMonth = today.getMonth() + 1;\n        const dayOfMonth = today.getDate();\n        const totalDays = new Date(2019, curMonth, 0).getDate();\n\n        let totalCompleted = 0;\n        if (completedDays && completedDays[goal]) {\n            completedDays[goal].forEach((day) => {\n                const isDayInMonth: boolean = +day.date.substring(0, 2) === curMonth;\n                const isDayInPast: boolean = +day.date.substring(3, 5) <= dayOfMonth;\n\n                if (day.date && isDayInMonth && isDayInPast) {\n                    totalCompleted++;\n\n                    console.log('donut graph: ', +day.date.substring(3, 5), dayOfMonth);\n                }\n            });\n        }\n\n        const newData = [\n            {\n                quantity: totalCompleted,\n                percentage: ((totalCompleted / dayOfMonth) * 100).toFixed(0),\n                name: 'Completed',\n                color: 'white',\n                id: 1\n            },\n            {\n                quantity: dayOfMonth - totalCompleted,\n                percentage: (((dayOfMonth - totalCompleted) / dayOfMonth) * 100).toFixed(0),\n                name: 'Missed',\n                id: 2\n            }\n        ];\n\n        setDonutData(newData);\n    }, [goal]);\n\n    const logMouseOver = () => console.log('Mouse Over');\n\n    return (\n        <Container>\n            <Title>Progress so far this month</Title>\n            <Donut\n                data={donutData}\n                customMouseOver={logMouseOver}\n                externalRadius={150}\n                internalRadius={75}\n                highlightSliceById={1}\n            />\n        </Container>\n    );\n}\n\nexport const Title = styled.div`\n    margin-bottom: 3rem;\n    font-size: 1.5rem;\n    font-family: 'Avenir Next';\n    color: white;\n`;\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n","import React from 'react';\nimport { Bar } from 'britecharts-react';\nimport colors from './colors';\nimport { Container, Title } from './DonutGraph';\n\nexport default function BarGraph({ goal, completedDays }) {\n    const barData = [\n        { name: 'This week', value: numDaysCompletedInPrevWeek(0) },\n        { name: '1 week ago', value: numDaysCompletedInPrevWeek(1) },\n        { name: '2 weeks ago', value: numDaysCompletedInPrevWeek(2) },\n        { name: '3 weeks ago', value: numDaysCompletedInPrevWeek(3) }\n    ];\n\n    // generate an array of the last s\n\n    function isDayInRange(date: string, startDate: string, endDate: string) {\n        const dateArray = date.split('-');\n        const startArray = startDate.split('-');\n        const endArray = endDate.split('-');\n\n        // Check case for weeks that fit completely in current week.\n        return (\n            +dateArray[0] === +startArray[0] &&\n            +dateArray[0] === +endArray[0] &&\n            +dateArray[1] >= +startArray[1] &&\n            +dateArray[1] <= +endArray[1]\n        );\n    }\n\n    function getPreviousWeek(weeksAgo: number): { firstDay: string; lastDay: string } {\n        let today: any = new Date();\n        today.setDate(today.getDate() - 7 * weeksAgo);\n\n        let curDay = String(today.getDate()).padStart(2, '0');\n        let curMonth = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n        let year = today.getFullYear();\n\n        // Runs 0 (Sunday) -> 6 (saturday)\n        const dayOfWeek = today.getDay();\n\n        const firstOfWeek = curMonth + '-' + String(+curDay - dayOfWeek) + '-' + year;\n        const endOfWeek = curMonth + '-' + String(+curDay + (6 - dayOfWeek)) + '-' + year;\n\n        return { firstDay: firstOfWeek, lastDay: endOfWeek };\n    }\n\n    function numDaysCompletedInPrevWeek(weeksAgo: number): number {\n        if (completedDays) {\n            const days = completedDays[goal];\n            const range = getPreviousWeek(weeksAgo);\n            let total = 0;\n\n            if (days) {\n                days.forEach((day) => {\n                    // convert the date to a number\n                    // let date = +day.date.replace(/-/g, '');\n\n                    if (isDayInRange(day.date, range.firstDay, range.lastDay)) {\n                        total += 1;\n                    }\n                });\n            }\n\n            return total;\n        }\n\n        return 0;\n    }\n\n    return (\n        <Container>\n            <Title>Progress Last 4 Weeks</Title>\n            <Bar data={barData} height={300} width={450} isHorizontal={true} margin={{ left: 100 }} />\n        </Container>\n    );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport BarGraph from './BarGraph';\nimport DonutGraph from './DonutGraph';\n\nimport { animated, useSpring } from 'react-spring';\nimport LegendGraph from './LegendGraph';\n\nexport default function Analytics({ goal, completedDays }) {\n    const animatedProps = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n    return (\n        <Container style={animatedProps}>\n            <StackedRowsContainer>\n                <Row style={{ paddingTop: '2rem' }}>\n                    <DonutGraph goal={goal} completedDays={completedDays} />\n                    <BarGraph goal={goal} completedDays={completedDays} />\n                </Row>\n                {/* <Row style={{ paddingBottom: '10rem' }}>\n                    <LegendGraph />\n                </Row> */}\n            </StackedRowsContainer>\n        </Container>\n    );\n}\n\nconst Container = styled(animated.div)`\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    flex-direction: column;\n\n    height: 100%;\n\n    overflow: hidden;\n\n    // TODO -- ADD DIFFERENT BACKGROUND COLOR\n\n    // background-color: #393f4d;\n`;\n\nconst StackedRowsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: space-evenly;\n    height: 100%;\n`;\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    align-items: center;\n    height: 100%;\n    margin-bottom: 10rem;\n`;\n","import React, { useState, useEffect, useRef, Fragment } from 'react';\nimport styled from 'styled-components';\nimport useAuth from './useAuth';\nimport GoalsList from './GoalList';\nimport Calendar from './Calendar';\nimport { db } from './fire';\nimport HeaderBar from './HeaderBar';\nimport { GOAL_COLORS, completedDay } from './constants/AppConstants';\nimport Notes from './Notes';\nimport { addCompletedDay, removeCompletedDay, updateNotesForCompletedDay, addNotFirstTimeUser } from './utils';\n\nimport { useSpring, animated } from 'react-spring';\nimport Analytics from './Analytics';\nimport WelcomeModal from './WelcomeModal';\n\n// TODO -- I'M NOT CLEARING OUT MY LOCAL TRACK OF COMPLETED DAYS WHEN A GOAL GETS DELETED.\n\nexport default function LoggedIn() {\n    const { auth } = useAuth();\n\n    const [isFirstTimeUser, setFirstTimeUser] = useState(true);\n\n    const [selectedGoals, setSelectedGoals] = useState([]);\n\n    // Color mapping. Goal --> Hex Color\n    const [colorMap, setColorMap] = useState({});\n\n    // The list of the existing goals.\n    const [existingGoals, setExistingGoals] = useState([]);\n\n    // The currently selectedGoal goal.\n    const [selectedGoal, setSelected] = useState('');\n\n    // Mapping of each goal to the days that are completed (selectedGoal).\n    // the new state of the mapping as the user makes new selections.\n    const [completedDays, setNewCompletedDays] = useState({});\n\n    const [curMonth, setCurMonth] = useState(null);\n\n    const [goalCreationDateMap, setGoalCreationDateMap] = useState({});\n\n    // Track which completed day we are currently writing notes for.\n    const [selectedDayForNotes, setSelectedDayForNotes] = useState(null);\n\n    // Track if we're on the analytics page or the calendar page.\n    const [showAnalytics, setShowAnalytics] = useState(false);\n\n    const animatedProps = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n    const addHandler = (handler) => window.addEventListener('beforeunload', handler);\n    const removeHandler = (handler) => window.removeEventListener('beforeunload', handler);\n\n    useEffect(() => {\n        console.log('\\n');\n        console.log('===================== LOGGED IN STATE =========================');\n        console.log('selectedGoals: ', selectedGoals);\n        console.log('completedDays:  ', completedDays);\n        console.log('selectedDayForNotes: ', selectedDayForNotes);\n        console.log('colorMap: ', colorMap);\n        console.log('\\n');\n    });\n\n    // Load the current month onto the screen.\n    useEffect(() => {\n        const today = new Date();\n        setCurMonth(today.getMonth() + 1);\n    }, []);\n\n    // Load goals and completed days on component mount (only once).\n    useEffect(() => {\n        fetchIsFirtTimeUser();\n        fetchGoals();\n        fetchCompletedDays();\n    }, []);\n\n    /**\n     * Display the green checkmark for 2 seconds before switching back to teh save button.\n     */\n    useEffect(() => {\n        if (isFirstTimeUser) {\n            let counter = 2;\n            let intervalId = setInterval(() => {\n                counter = counter - 1;\n                if (counter === 0) {\n                    setFirstTimeUser(false);\n                    addNotFirstTimeUser(auth.uid);\n                    clearInterval(intervalId);\n                }\n            }, 1000);\n        }\n    }, [isFirstTimeUser]);\n\n    async function updateCurMonth(month: number) {\n        setCurMonth(month);\n    }\n\n    function timeConverter(date: Date) {\n        return date.toISOString().substring(0, 10);\n    }\n\n    function fetchIsFirtTimeUser() {\n        db.collection('notFirstTimeUser')\n            .doc(auth.uid)\n            .get()\n            .then((doc) => {\n                if (doc.exists) {\n                    console.log('fetchIsFirtTimeUser ', doc.exists);\n                    setFirstTimeUser(false);\n                }\n            });\n    }\n\n    /**\n     * Pull Goal data from the firestore.\n     */\n    function fetchGoals() {\n        db.collection('goals')\n            .doc(auth.uid)\n            .collection('userGoals')\n            .where('uid', '==', auth.uid)\n            .get()\n            .then((snapshot) => {\n                const existingGoals: any[] = [];\n                const existingColorMap = {};\n                const createdDateMap = {};\n                snapshot.docs.forEach((doc) => {\n                    if (doc.data().goal) {\n                        existingGoals.push(doc.data().goal);\n                        existingColorMap[doc.data().goal] = doc.data().color;\n\n                        createdDateMap[doc.data().goal] = timeConverter(new Date(doc.data().created));\n                    }\n                });\n\n                existingGoals.sort((a, b) => a.created - b.created);\n\n                // Set the initially selectedGoal goal\n                const selectedGoal: [string] = [selectedGoals[0]];\n                setSelectedGoals(selectedGoal);\n                setSelected(existingGoals[0]);\n                setExistingGoals(existingGoals);\n                setColorMap(existingColorMap);\n                setGoalCreationDateMap(createdDateMap);\n\n                handleGoalSelected(existingGoals[0]);\n            });\n    }\n\n    /**\n     * Load a mapping of each goal to its list of completed dates.\n     */\n    function fetchCompletedDays() {\n        db.collection('completed')\n            .doc(auth.uid)\n            .collection('daysCompleted')\n            .get()\n            .then((snapshot) => {\n                const datesCompleted: any[] = [];\n\n                snapshot.docs.forEach((doc) => {\n                    const goal = doc.data().goal;\n                    const date = doc.data().date;\n                    const notes = doc.data().notes ? doc.data().notes : '';\n                    datesCompleted.push({ goal: goal, date: date, notes: notes });\n                });\n\n                const datesCompletedMap = {};\n                datesCompleted.forEach((data) => {\n                    if (data.goal in datesCompletedMap) {\n                        datesCompletedMap[data.goal].push({\n                            date: data.date,\n                            notes: data.notes\n                        });\n                    } else {\n                        datesCompletedMap[data.goal] = [{ date: data.date, notes: data.notes }];\n                    }\n                });\n                // setOldCompletedDays(JSON.parse(JSON.stringify(datesCompletedMap)));\n                setNewCompletedDays(datesCompletedMap);\n            });\n    }\n\n    /**\n     * Returns the new hex code to use.\n     * @param goal\n     */\n    function addToColorMap(goal: string): string {\n        let nextHexColor = null;\n        // Watch for null pointer exception\n        const colorsInUse = Object.values(colorMap);\n\n        console.log('add to color map:  ', colorsInUse, GOAL_COLORS);\n\n        for (let i = 0; i < GOAL_COLORS.length; i++) {\n            if (!colorsInUse.includes(GOAL_COLORS[i])) {\n                nextHexColor = GOAL_COLORS[i];\n                break;\n            }\n        }\n\n        const updatedMap = colorMap;\n        updatedMap[goal] = nextHexColor;\n        setColorMap(updatedMap);\n\n        return nextHexColor;\n    }\n\n    /**\n     * TODO -- DECIDE IF I SHOULD KEEP THIS. NOT REALLY NEEDED SINCE THE\n     * COLOR MAP WILL REMOVE THE DELETED GOAL'S COLOR ON REFRESH ANYWAY.\n     * @param goal\n     */\n    function removeFromColorMap(goal: string) {\n        const updatedMap = colorMap;\n\n        console.log('remove from color map: ');\n\n        Object.keys(updatedMap).forEach((key) => {\n            console.log(key, goal);\n            if (key == goal) {\n                delete updatedMap[goal];\n            }\n        });\n        setColorMap(updatedMap);\n    }\n\n    function selectAllGoals(goals) {\n        setSelectedGoals(goals);\n    }\n\n    /**\n     * Update the selected goals state, removing previously selected and adding newly selected goals.\n     * @param goal\n     * @param goalToRemove\n     */\n    function handleGoalSelected(goal: string, goalsToRemove?: string[]) {\n        console.log('handleGoalSelected', goal, goalsToRemove);\n\n        if (!(selectedGoals.includes(goal) && selectedGoals.length === 1)) {\n            let updateSelected = selectedGoals.includes(goal) ? [...selectedGoals] : [...selectedGoals, goal];\n\n            if (goalsToRemove) {\n                updateSelected = updateSelected.filter((g) => !goalsToRemove.includes(g) || g == goal);\n            }\n            setSelectedGoals(updateSelected);\n        }\n    }\n\n    /**\n     * Remove goal from selectedGoals state.\n     * @param goal\n     */\n    function handleGoalRemoved(goal: string) {\n        if (selectedGoals.includes(goal)) {\n            const filteredSelectedGoals = selectedGoals.filter((g) => {\n                return g != goal;\n            });\n\n            // removeDaysCompleted(auth.uid, goal);\n            // removeFromColorMap(goal);\n            setSelectedGoals([...filteredSelectedGoals]);\n        }\n    }\n\n    /**\n     * Add this day to this goal's list of completed days.\n     * @param date\n     * @param goal\n     */\n    function handleDayCompleted(date: string, goal: string) {\n        const completedDay: completedDay = {\n            date: date,\n            goal: goal,\n            notes: ''\n        };\n\n        // Make firestore call to save completed date.\n        addCompletedDay(auth.uid, completedDay);\n\n        const update: Object = JSON.parse(JSON.stringify(completedDays));\n        update[goal] = update[goal] ? [...update[goal], { date: date, notes: '' }] : [{ date: date, notes: '' }];\n\n        setNewCompletedDays(update);\n    }\n\n    /**\n     * Remove this day from this goal's list of completed days.\n     * @param date\n     * @param goal\n     */\n    function handleDayRemoved(date: string, goal: string) {\n        // Make firestore call to remove completed date.\n        removeCompletedDay(auth.uid, goal, date);\n\n        const update: Object = JSON.parse(JSON.stringify(completedDays));\n        update[goal] = update[goal].filter((curDate) => curDate.date !== date);\n        setNewCompletedDays(update);\n\n        setSelectedDayForNotes(null);\n    }\n\n    function updateSelected(goal: string) {\n        // batchUpdateCompletedDays(selectedGoal);\n        if (GoalsList) setSelected(goal);\n    }\n\n    function handleNoteSelected(date: string, goal: string) {\n        let notes = null;\n\n        if (completedDays && completedDays[goal]) {\n            const day = completedDays[goal].find((e) => {\n                return e.date === date;\n            });\n\n            if (day) {\n                notes = day.notes;\n            }\n        }\n\n        const selectedDay: completedDay = {\n            date: date,\n            goal: goal,\n            notes: notes\n        };\n\n        setSelectedDayForNotes(selectedDay);\n    }\n\n    async function handleNoteAdded(day: completedDay) {\n        // update newSelectedDays to update this selectedGoal day's notes property\n\n        const update: Object = JSON.parse(JSON.stringify(completedDays));\n\n        let dateIndex = update[day.goal].findIndex((obj) => obj.date == day.date);\n\n        if (dateIndex != null && dateIndex != undefined) {\n            update[day.goal][dateIndex].notes = day.notes;\n            setNewCompletedDays(update);\n            setSelectedDayForNotes(day);\n\n            await updateNotesForCompletedDay(auth.uid, day);\n        }\n    }\n\n    return (\n        <OverallContainer style={animatedProps}>\n            {/* {isFirstTimeUser ? <WelcomeModal /> : null} */}\n            <HeaderBar\n                curMonth={curMonth}\n                updateCurMonth={updateCurMonth}\n                toggleAnalytics={() => setShowAnalytics(!showAnalytics)}\n            />\n\n            <InnerRowContainer>\n                <GoalsList\n                    existingGoals={existingGoals}\n                    colorMap={colorMap}\n                    updateSelected={updateSelected}\n                    addToColorMap={addToColorMap}\n                    removeFromColorMap={removeFromColorMap}\n                    handleGoalSelected={handleGoalSelected}\n                    handleGoalRemoved={handleGoalRemoved}\n                    selectedGoals={selectedGoals}\n                    creationDateMap={goalCreationDateMap}\n                    selectAllGoals={selectAllGoals}\n                />\n                <CalendarContainer>\n                    {showAnalytics ? (\n                        <Analytics goal={selectedGoal} completedDays={completedDays} />\n                    ) : (\n                        <Calendar\n                            key='calendar1'\n                            curMonth={curMonth}\n                            curGoal={selectedGoal}\n                            completedDays={completedDays}\n                            colorMap={colorMap}\n                            selectedGoals={selectedGoals}\n                            handleDayCompleted={handleDayCompleted}\n                            handleDayRemoved={handleDayRemoved}\n                            handleNoteSelected={handleNoteSelected}\n                            selectedDayForNotes={selectedDayForNotes}\n                        />\n                    )}\n                </CalendarContainer>\n                <Notes\n                    selectedDayForNotes={selectedDayForNotes}\n                    completedDays={completedDays}\n                    handleNoteAdded={handleNoteAdded}\n                />\n            </InnerRowContainer>\n        </OverallContainer>\n    );\n}\n\nconst OverallContainer = styled(animated.div)`\n    height: 100%;\n    background-color: #1c1e1f;\n`;\n\nconst CalendarContainer = styled.div`\n    -webkit-box-flex: 1;\n    -ms-flex: 1;\n\n    flex: 1;\n\n    padding-right: 19rem;\n    padding-left: 2rem;\n`;\n\nconst InnerRowContainer = styled.div`\n    display: -webkit-box;\n    display: -ms-flexbox;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n\n    -webkit-box-pack: justify;\n    -ms-flex-pack: justify;\n\n    display: flex;\n    justify-content: space-between;\n    height: 100%;\n`;\n","import React, { useEffect, Fragment } from 'react';\nimport { AppStateProvider } from './app-state';\nimport appReducer, { initialState } from './appReducer';\nimport LoggedOut from './LoggedOut';\nimport LoggedIn from './LoggedIn';\n\nimport useAuth from './useAuth';\n\nfunction App() {\n    const { authAttempted, auth } = useAuth();\n\n    useEffect(() => {\n        document.getElementById('root').style.overflow = 'hidden';\n    });\n\n    if (!authAttempted) return null;\n    return <Fragment>{auth ? <LoggedIn /> : <LoggedOut />}</Fragment>;\n}\n\nexport default () => (\n    <AppStateProvider reducer={appReducer} initialState={initialState}>\n        <App />\n    </AppStateProvider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./App.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}