{"version":3,"sources":["app-state.js","fire.js","utils.ts","appReducer.js","LoggedOut.tsx","useAuth.js","MultiSelectSquare.tsx","Day.tsx","constants/AppConstants.ts","Calendar.tsx","DeleteGoalRow.tsx","GoalList.tsx","HeaderBar.tsx","Notes.tsx","colors.js","BarGraph.tsx","DonutGraph.tsx","Analytics.tsx","LoggedIn.tsx","App.js","serviceWorker.js","index.js"],"names":["Context","createContext","AppStateProvider","_ref","reducer","_ref$initialState","initialState","children","value","useReducer","react_default","a","createElement","Provider","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","_callee","uid","goal","daysCompletedCollection","regenerator_default","wrap","_context","prev","next","collection","doc","where","get","then","snapshot","docs","forEach","ref","delete","stop","_callee2","_context2","_callee3","color","_context3","abrupt","add","created","Date","_callee4","completedDay","_context4","console","log","date","notes","updateNotesForCompletedDay","_x10","_x11","_updateNotesForCompletedDay","apply","this","arguments","_callee5","_context5","id","update","_callee6","_context6","signup","_x15","_signup","_callee7","email","password","_ref2","user","_context7","auth","createUserWithEmailAndPassword","sent","concat","set","t0","logout","signOut","authAttempted","goals","selectedGoal","selectedDays","workout","appStateReducer","state","action","type","Object","objectSpread","LoggedOut","_useState","useState","_useState2","slicedToArray","focus","setFocus","_useState3","_useState4","isLogin","setIsLogin","_useState5","_useState6","error","setError","_useState7","_useState8","setLoading","loginEmailRef","useRef","loginPasswordRef","useOutsideAlerter","signupEmailRef","signupPasswordRef","handleLogin","asyncToGenerator","mark","event","preventDefault","current","signInWithEmailAndPassword","_x","handleSignup","_x2","handleClickOutside","contains","target","useEffect","document","addEventListener","removeEventListener","Login","Heading","CreateAccount","TextLink","onClick","LoginInput","placeholder","LoginButton","ErrorMessage","Signup","styled","u","_templateObject","div","_templateObject2","_templateObject3","h1","_templateObject4","_templateObject5","input","_templateObject6","props","button","_templateObject7","_templateObject8","useAuth","_useAppState","useContext","_useAppState2","_useAppState2$","dispatch","callback","onAuthStateChanged","MultiSelectSquare","isHovered","toggleHover","react","Square","onMouseEnter","onMouseLeave","DropDown","MultiSelectSquare_templateObject","MultiSelectSquare_templateObject2","Day","completedColor","curGoal","day","month","year","goalsCompletedOnDay","selectedGoals","colorMap","handleDayCompleted","completedDays","disabled","handleNoteSelected","selectedDayForNotes","myDate","setMyDate","isTodaysDate","setIsTodaysDate","doesDayHaveNote","setDayHasNote","notesSelected","setNotesSelected","_useState9","_useState10","backgroundColor","setBackgroundColor","_useState11","_useState12","toggleDaySelected","handleDayClicked","length","filter","find","e","toString","padStart","today","dd","String","getDate","mm","getMonth","yyyy","getFullYear","display","Button","isNoteSelected","numGoals","isCurrentDay","isMultiSelect","Container","style","DayNumber","className","marginRight","marginTop","stopPropagation","mutliSelectSquares","squares","push","createColorSquares","Squares","getColorDisplay","Day_templateObject","Day_templateObject2","Day_templateObject3","Day_templateObject4","GOAL_COLORS","MONTH_DAYS","01","02","03","04","05","06","07","08","09","10","11","12","getWindowDimensions","_window","window","width","innerWidth","height","innerHeight","Calendar","curMonth","handleDayRemoved","animatedProps","useSpring","opacity","from","DaysOfWeek","myMonth","dayOfWeek","week","firstOfMonth","getDay","DayOfWeek","unusedDay","_loop","i","daysPerRow","parseInt","DeselectButton","calendarYear","monthNum","getYear","Calendar_Container","map","idx","DeselectWrapper","animated","Calendar_templateObject","Calendar_templateObject2","Calendar_templateObject3","Calendar_templateObject4","DeleteGoalRow","index","undoDelete","confirmDelete","NewListRow","paddingLeft","paddingRight","DeleteGoalRow_templateObject","GoalsList","existingGoals","updateSelected","addToColorMap","removeFromColorMap","handleGoalSelected","handleGoalRemoved","creationDateMap","selectAllGoals","newGoal","setNewGoal","goalsToDelete","setGoalsToDelete","setGoals","windowDimensions","setWindowDimensions","handleDelete","_x3","_x4","_deleteGoal","deleteGoal","g","_removeDaysCompleted","removeDaysCompleted","nextGoalIdx","GoalContainer","InnerContainer","InputContainer","MyForm","GoalInput","onChange","onSubmit","onKeyPress","keyCode","key","AddGoalButton","includes","goalColor","_x5","_x6","_x7","_createGoal","createGoal","toConsumableArray","SelectAll","getElementById","checked","checkAllCheckmarks","ListContainer","windowHeight","JSON","parse","stringify","goalToDelete","GoalList_NewListRow","selected","toDelete","element","ListRowLeft","Circle","ListRowInfo","Goal","StartDate","ListRowRight","Checkbox","defaultChecked","DeleteButton","DeleteIcon","GoalList_templateObject","GoalList_templateObject2","GoalList_templateObject3","form","GoalList_templateObject4","GoalList_templateObject5","GoalList_templateObject6","GoalList_templateObject7","GoalList_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","span","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","label","_templateObject18","monthName","1","2","3","4","5","6","7","8","9","HeaderBar","updateCurMonth","toggleAnalytics","analyticsSelected","toggleAnalyticsSelected","Header","AppTitle","VerticalBar","MonthAndLogoutContainer","MonthContainer","CurMonth","MonthButton","AnalyticsButton","analyticsOn","HeaderBar_Button","HeaderBar_templateObject","HeaderBar_templateObject2","HeaderBar_templateObject3","HeaderBar_templateObject4","HeaderBar_templateObject5","HeaderBar_templateObject6","HeaderBar_templateObject7","HeaderBar_templateObject8","HeaderBar_templateObject9","Notes","handleNoteAdded","setGoal","setDate","note","setNote","showSuccess","Notes_Container","NewContainer","SaveButton","dayToUpdate","OtherDisplay","NotesInput","spellCheck","Remainder","Placeholder","Notes_templateObject","Notes_templateObject2","Notes_templateObject3","Notes_templateObject4","Notes_templateObject5","textarea","Notes_templateObject6","Notes_templateObject7","colors","colorSchemas","britecharts","grey","orange","blueGreen","teal","green","yellow","pink","purple","red","colorSchemasHuman","colorGradients","greenBlue","orangePink","bluePurple","colorGradientsHuman","singleColors","aloeGreen","greenColor","blueColor","yellowColor","orangeColor","pinkColor","purpleColor","singleColorsHuman","BarGraph","barData","name","numDaysCompletedInPrevWeek","weeksAgo","days","range","curDay","firstDay","lastDay","getPreviousWeek","total","startDate","endDate","dateArray","split","startArray","endArray","isDayInRange","britecharts_react_min","data","isHorizontal","margin","left","colorSchema","DonutGraph","donutData","setDonutData","totalDays","totalCompleted","substring","newData","quantity","percentage","toFixed","customMouseOver","externalRadius","internalRadius","highlightSliceById","Analytics","Analytics_Container","StackedRowsContainer","Row","paddingTop","Analytics_templateObject","Analytics_templateObject2","Analytics_templateObject3","LoggedIn","setSelectedGoals","setColorMap","setExistingGoals","setSelected","setNewCompletedDays","setCurMonth","_useState13","_useState14","goalCreationDateMap","setGoalCreationDateMap","_useState15","_useState16","setSelectedDayForNotes","_useState17","_useState18","showAnalytics","setShowAnalytics","_updateCurMonth","goalsToRemove","_x12","_x13","_x14","_removeCompletedDay","removeCompletedDay","curDate","_handleNoteAdded","dateIndex","findIndex","obj","undefined","existingColorMap","createdDateMap","toISOString","sort","b","datesCompleted","datesCompletedMap","OverallContainer","InnerRowContainer","nextHexColor","colorsInUse","values","updatedMap","keys","filteredSelectedGoals","CalendarContainer","_x8","_x9","_addCompletedDay","addCompletedDay","LoggedIn_templateObject","LoggedIn_templateObject2","LoggedIn_templateObject3","App","_useAuth","overflow","Boolean","location","hostname","match","ReactDOM","render","appReducer","App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29762918.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext } from 'react';\n\nconst Context = createContext()\n\nexport function AppStateProvider({ reducer, initialState = {}, children }) {\n    const value = useReducer(reducer, initialState)\n    return <Context.Provider value={value} children={children} />\n}\n\nexport function useAppState() {\n    return useContext(Context);\n}","import firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyCvxmJXWdOQsBw6QkcH7MTghBk8YjBNnHo\",\n  authDomain: \"track-my-goals.firebaseapp.com\",\n  databaseURL: \"https://track-my-goals.firebaseio.com\",\n  projectId: \"track-my-goals\",\n  storageBucket: \"track-my-goals.appspot.com\",\n  messagingSenderId: \"1045953614271\"\n};\n\nfirebase.initializeApp(config);\n\nexport const db = firebase.firestore();\n\nexport const auth = () => firebase.auth();\n\n// export const mode = \"real\"\n\n// export default fire\n","import { completedDay } from './constants/AppConstants';\nimport { db } from './fire';\nimport { auth } from 'firebase';\n\nexport async function removeDaysCompleted(uid, goal) {\n    let daysCompletedCollection = db\n        .collection('completed')\n        .doc(uid)\n        .collection('daysCompleted');\n\n    let daysToDelete = daysCompletedCollection.where('goal', '==', goal);\n\n    daysToDelete.get().then((snapshot) => {\n        snapshot.docs.forEach((doc) => {\n            doc.ref.delete();\n        });\n    });\n}\n\nexport async function deleteGoal(uid, goal) {\n    // let existingGoal = db.collection(`goals-${uid}`);\n    let existingGoal: any = db\n        .collection(`goals`)\n        .doc(uid)\n        .collection('userGoals');\n\n    existingGoal = existingGoal.where('goal', '==', goal);\n    existingGoal = existingGoal.where('uid', '==', uid);\n\n    existingGoal.get().then((snapshot) => {\n        snapshot.docs.forEach((doc) => {\n            doc.ref.delete();\n        });\n    });\n}\n\n// TODO -- ADD A HEX COLOR FIELD TO THE GOAL COLLECTION. ALSO PUT THE AUTH UID ON THE COLLECTION NAME\nexport async function createGoal(uid, goal, color) {\n    return db\n        .collection(`goals`)\n        .doc(uid)\n        .collection('userGoals')\n        .add({\n            uid: uid,\n            goal: goal,\n            color: color,\n            created: +new Date() // Timestamp of creation\n        });\n}\n\nexport async function addCompletedDay(uid, completedDay: completedDay) {\n    console.log('addCompletedDay', uid, completedDay);\n\n    return db\n        .collection('completed')\n        .doc(uid)\n        .collection('daysCompleted')\n        .add({\n            uid: uid,\n            goal: completedDay.goal,\n            date: completedDay.date,\n            notes: completedDay.notes\n        });\n}\n\n/**\n * TODO -- update to return the response of the request.\n */\nexport async function updateNotesForCompletedDay(uid, completedDay: completedDay) {\n    let dayToUpdate: any = db\n        .collection('completed')\n        .doc(uid)\n        .collection('daysCompleted');\n\n    dayToUpdate = dayToUpdate.where('goal', '==', completedDay.goal);\n    dayToUpdate = dayToUpdate.where('date', '==', completedDay.date);\n\n    dayToUpdate.get().then((snapshot) => {\n        snapshot.docs.forEach((doc) => {\n            db.collection('completed')\n                .doc(uid)\n                .collection('daysCompleted')\n                .doc(doc.id)\n                .update({\n                    uid: uid,\n                    goal: completedDay.goal,\n                    date: completedDay.date,\n                    notes: completedDay.notes\n                });\n        });\n    });\n}\n\nexport async function removeCompletedDay(uid, goal, date) {\n    // let dayCompleted = db.collection(`daysCompleted-${uid}`);\n\n    let daysCompleted: any = db\n        .collection('completed')\n        .doc(uid)\n        .collection('daysCompleted');\n\n    daysCompleted = daysCompleted.where('goal', '==', goal);\n    daysCompleted = daysCompleted.where('date', '==', date);\n\n    daysCompleted.get().then((snapshot) => {\n        snapshot.docs.forEach((doc) => {\n            doc.ref.delete();\n        });\n    });\n}\n\nexport async function signup({ email, password }) {\n    try {\n        const { user } = await auth().createUserWithEmailAndPassword(email, password);\n\n        await db.doc(`users/${user.uid}`).set({\n            uid: user.uid\n        });\n    } catch (e) {\n        throw e;\n    }\n}\n\nexport function login(email, password) {\n    return auth().signInWithEmailAndPassword(email, password);\n}\n\nexport function logout() {\n    return auth().signOut();\n}\n\nexport function onAuthStateChanged(callback) {\n    auth().onAuthStateChanged(callback);\n}\n","import { retrieveSelectedDays } from \"./utils\";\n\nconst initialState = {\n  authAttempted: false,\n  auth: null,\n  user: null,\n  goals: [\"Workout\", \"Meditate\", \"Eat Healthy\"],\n  selectedGoal: 0,\n\n  // This is the new state I'm adding so that the calendar can dynamically load\n  // the selected days for each component\n\n  // Should probably just load this once on the first page load. And store it\n  // all in local memory.\n\n  // MAKE THIS A MAP OF GOALS TO DAYS SELECTED;\n  selectedDays: {\n    workout: []\n  }\n};\n\nconst appStateReducer = (state, action) => {\n  switch (action.type) {\n    case \"AUTH_CHANGE\": {\n      return { ...state, auth: action.auth, authAttempted: true };\n    }\n    case \"LOAD_USER\": {\n      return { ...state, user: action.user };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport { initialState };\nexport default appStateReducer;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { login, signup } from \"./utils\";\n// import { Tabs, TabList, Tab, TabPanels, TabPanel } from \"@reach/tabs\";\n// import Signup from \"./Signup\";\n// import Login from \"./Login\";\n\nexport default function LoggedOut() {\n  const [focus, setFocus] = useState(null);\n\n  // Control whether user sees login or signup.\n  const [isLogin, setIsLogin] = useState(true);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // login refs\n  const loginEmailRef = useRef(null);\n  const loginPasswordRef = useRef(null);\n\n  useOutsideAlerter(loginEmailRef);\n  useOutsideAlerter(loginPasswordRef);\n\n  // Signup refs\n  const signupEmailRef = useRef(null);\n  const signupPasswordRef = useRef(null);\n\n  useOutsideAlerter(signupEmailRef);\n  useOutsideAlerter(signupPasswordRef);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      await login(loginEmailRef.current.value, loginPasswordRef.current.value);\n    } catch (error) {\n      setLoading(false);\n      setError(error);\n    }\n  };\n\n  const handleSignup = async event => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      await signup({\n        email: signupEmailRef.current.value,\n        password: signupPasswordRef.current.value\n      });\n    } catch (error) {\n      setLoading(false);\n      setError(error);\n    }\n  };\n\n  function useOutsideAlerter(ref) {\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setFocus(\"\");\n        setError(null);\n      }\n    }\n    useEffect(() => {\n      // Bind the event listener\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        // Unbind the event listener on clean up\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    });\n  }\n\n  return isLogin ? (\n    <Login>\n      <Heading>Log into Habit Tracker</Heading>\n      <CreateAccount>\n        New?{\" \"}\n        <TextLink onClick={() => setIsLogin(false)}>Create Account</TextLink>\n      </CreateAccount>\n      <LoginInput\n        ref={loginEmailRef}\n        isLogin={isLogin}\n        focus={focus === \"email\"}\n        placeholder={\"Email Address\"}\n        onClick={() => {\n          setFocus(\"email\");\n          setError(null);\n        }}\n      />\n      <LoginInput\n        ref={loginPasswordRef}\n        isLogin={isLogin}\n        type=\"password\"\n        focus={focus === \"password\"}\n        placeholder={\"Password\"}\n        onClick={() => {\n          setFocus(\"password\");\n          setError(null);\n        }}\n      />\n      <LoginButton onClick={handleLogin}>Login</LoginButton>\n      {error ? <ErrorMessage>Invalid username or password</ErrorMessage> : null}\n    </Login>\n  ) : (\n    <Signup>\n      <Heading>Create Account</Heading>\n      <CreateAccount>\n        Have one? <TextLink onClick={() => setIsLogin(true)}>Log In</TextLink>\n      </CreateAccount>\n      <LoginInput\n        ref={signupEmailRef}\n        isLogin={isLogin}\n        focus={focus === \"email\"}\n        placeholder={\"Email Address\"}\n        onClick={() => {\n          setFocus(\"email\");\n          setError(null);\n        }}\n      />\n      <LoginInput\n        ref={signupPasswordRef}\n        isLogin={isLogin}\n        type=\"password\"\n        focus={focus === \"password\"}\n        placeholder={\"Password\"}\n        onClick={() => {\n          setFocus(\"password\");\n          setError(null);\n        }}\n      />\n      <LoginButton onClick={handleSignup}>Create Account</LoginButton>\n      {error ? <ErrorMessage>Invalid username or password</ErrorMessage> : null}\n    </Signup>\n  );\n}\n\nconst TextLink = styled.u`\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst Signup = styled.div`\n  overflow: hidden;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center; /*centers items on the line (the x-axis by default)*/\n  align-items: center; /*centers items on the cross-axis (y by default)*/\n`;\n\nconst Login = styled.div`\n  overflow: hidden;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center; /*centers items on the line (the x-axis by default)*/\n  align-items: center; /*centers items on the cross-axis (y by default)*/\n`;\n\nconst Heading = styled.h1`\n  color: black;\n  font-size: 1.64rem;\n  font-family: \"Avenir Next\" !important;\n`;\n\nconst CreateAccount = styled.h1`\n  color: \"#A9A9A9\";\n  font-size: 1rem;\n  margin-top: 1rem;\n  font-family: \"Avenir Next\" !important;\n`;\n\nconst LoginInput = styled.input<{ focus; isLogin }>`\n  height: 3rem;\n  width: 18rem;\n  border: none;\n  font-size: 1em;\n  margin-top: 2rem;\n\n  padding-left: 1rem;\n  border-radius: ${props => (props.isLogin ? \"0.3rem\" : \"0rem\")};\n  font-family: \"Avenir Next\" !important;\n\n  background-color: ${props => (props.focus ? \"#e5e5e5\" : \"transparent\")};\n  border-bottom: ${props =>\n    props.focus ? \"3px solid transparent\" : \"2px solid black\"};\n`;\n\nconst LoginButton = styled.button`\n  height: 3rem;\n  width: 19rem;\n  color: black;\n  background: #d8d8d8;\n  border: none;\n  font-size: 1.1rem;\n  margin-top: 2rem;\n\n  padding-left: 1rem;\n  border-radius: 0.3rem;\n  font-family: \"Avenir Next\" !important;\n`;\n\nconst ErrorMessage = styled.h1`\n  margin-top: 1.5rem;\n  color: #cf2e38;\n  font-size: 1rem;\n  font-family: \"Avenir Next\" !important;\n`;\n","import { useEffect } from \"react\";\nimport { onAuthStateChanged } from \"./utils\";\nimport { useAppState } from \"./app-state\";\n\nexport default function useAuth() {\n  const [{ authAttempted, auth }, dispatch] = useAppState();\n\n  useEffect(() => {\n    if (!authAttempted) {\n      return onAuthStateChanged(auth => {\n        if (auth) {\n          const { uid } = auth;\n          dispatch({\n            type: \"AUTH_CHANGE\",\n            auth: { uid }\n          });\n        } else {\n          dispatch({ type: \"AUTH_CHANGE\", auth: null });\n        }\n      });\n    }\n  }, [authAttempted, dispatch]);\n\n  return { authAttempted, auth };\n}\n","import React, { Fragment, useState } from 'react';\nimport styled from 'styled-components';\n\nexport default function MultiSelectSquare(color) {\n    const [isHovered, toggleHover] = useState(false);\n\n    return (\n        <Fragment>\n            <Square\n                onMouseEnter={() => toggleHover(!isHovered)}\n                onMouseLeave={() => toggleHover(!isHovered)}\n                color={color.color}>\n                {isHovered && color.goal ? <DropDown>{color.goal}</DropDown> : null}\n            </Square>\n        </Fragment>\n    );\n}\n\nconst Square = styled.div<{ color }>`\n    width: 1.5rem;\n    height: 1.5rem;\n    background-color: ${(props) => props.color};\n    border-radius: 2px;\n    border: 0.5px solid black;\n    margin: 0.1rem;\n\n    @media only screen and (max-width: 1450px) {\n        width: 1.2rem;\n        height: 1.2rem;\n    }\n\n    @media only screen and (max-width: 1305px) {\n        width: 0.9rem;\n        height: 0.9rem;\n    }\n`;\n\nconst DropDown = styled.div`\n    position: relative;\n\n    width: max-content;\n    padding-left: 1rem;\n    padding-right: 1rem;\n    height: 2.5rem;\n    background-color: black;\n    color: white;\n    text-align: center;\n    vertical-align: middle;\n    line-height: 2.5rem;\n    margin-top: 1.7rem;\n    border-radius: 10px;\n`;\n","import React, { useEffect, Fragment, useState } from 'react';\nimport styled from 'styled-components';\nimport MultiSelectSquare from './MultiSelectSquare';\n\ninterface Day {\n    completedColor?;\n    curGoal?; // shouldn't need this\n    day?;\n    month?;\n    year?;\n    goalsCompletedOnDay?;\n    selectedGoals?;\n    colorMap?;\n    handleDayCompleted?;\n    completedDays?;\n    disabled?;\n    handleNoteSelected?;\n    selectedDayForNotes?;\n}\n\nexport default function Day({\n    completedColor,\n    curGoal, // shouldn't need this\n    day,\n    month,\n    year,\n    goalsCompletedOnDay,\n    selectedGoals,\n    colorMap,\n    handleDayCompleted,\n    completedDays,\n    disabled,\n    handleNoteSelected,\n    selectedDayForNotes\n}: Day) {\n    const [myDate, setMyDate] = useState('');\n\n    const [isTodaysDate, setIsTodaysDate] = useState(false);\n\n    const [doesDayHaveNote, setDayHasNote] = useState(false);\n\n    const [notesSelected, setNotesSelected] = useState(false);\n\n    const [backgroundColor, setBackgroundColor] = useState('#464e50');\n\n    const [isDaySelected, toggleDaySelected] = useState(false);\n\n    useEffect(() => {\n        if (goalsCompletedOnDay && goalsCompletedOnDay.length === 1) {\n            setBackgroundColor(colorMap[goalsCompletedOnDay]);\n            toggleDaySelected(true);\n        } else {\n            setBackgroundColor('#464e50');\n        }\n    }, [goalsCompletedOnDay]);\n\n    useEffect(() => {\n        if (completedDays && completedDays[curGoal]) {\n            const day = completedDays[curGoal].find((e) => {\n                return e.date === myDate;\n            });\n\n            if (day && day.notes && day.notes.length) {\n                setDayHasNote(true);\n            } else {\n                setDayHasNote(false);\n            }\n        }\n    }, [completedDays, curGoal]);\n\n    useEffect(() => {\n        if (month && day && year) {\n            const date =\n                month.toString().padStart(2, '0') + '-' + day.toString().padStart(2, '0') + '-' + year.toString();\n            setMyDate(date);\n\n            if (selectedDayForNotes) {\n                setNotesSelected(date == selectedDayForNotes.date);\n            }\n\n            let today: any = new Date();\n            let dd = String(today.getDate()).padStart(2, '0');\n            let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n            let yyyy = today.getFullYear();\n            today = mm + '-' + dd + '-' + yyyy;\n\n            if (date == today) {\n                setIsTodaysDate(true);\n            } else {\n                setIsTodaysDate(false);\n            }\n        }\n    }, [month, day, year, selectedDayForNotes]);\n\n    function createColorSquares() {\n        const squares = [];\n\n        console.log('createColorSquares: ', goalsCompletedOnDay);\n\n        if (goalsCompletedOnDay) {\n            goalsCompletedOnDay.forEach((goal) => {\n                squares.push(<MultiSelectSquare color={colorMap[goal]} goal={goal} />);\n            });\n        }\n        return squares;\n    }\n\n    function getColorDisplay() {\n        // check if single select or multi-select.\n        if (selectedGoals && selectedGoals.length === 1) {\n            return (\n                <Button\n                    disabled={disabled}\n                    onClick={handleDayClicked}\n                    isNoteSelected={notesSelected}\n                    numGoals={1}\n                    isCurrentDay={isTodaysDate}\n                    isMultiSelect={selectedGoals.length > 1}>\n                    <Container style={{ backgroundColor: `${backgroundColor}` }}>\n                        <DayNumber style={{ color: 'white' }}>{day}</DayNumber>\n                        {isTodaysDate ? (\n                            <i\n                                className='glyphicon glyphicon-time'\n                                style={{\n                                    color: 'white',\n                                    marginRight: '.2rem',\n                                    marginTop: '.3rem'\n                                }}\n                            />\n                        ) : null}\n                        {doesDayHaveNote ? (\n                            <i\n                                className='glyphicon glyphicon-edit'\n                                style={{ color: backgroundColor === '#464e50' ? 'black' : 'white' }}\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    handleNoteSelected(myDate, curGoal);\n                                }}\n                            />\n                        ) : null}\n                    </Container>\n                </Button>\n            );\n        } else if (selectedGoals && selectedGoals.length > 1) {\n            const mutliSelectSquares = createColorSquares();\n\n            return (\n                <Button\n                    disabled={disabled}\n                    onClick={handleDayClicked}\n                    isNoteSelected={notesSelected}\n                    numGoals={2}\n                    isCurrentDay={isTodaysDate}\n                    isMultiSelect={selectedGoals.length > 1}>\n                    <Container style={{ backgroundColor: '#464e50' }}>\n                        <DayNumber style={{ color: 'white' }}>{day}</DayNumber>\n                        <Squares>{mutliSelectSquares}</Squares>\n                    </Container>\n                </Button>\n            );\n        } else if (disabled) {\n            return (\n                <Button\n                    disabled={true}\n                    isNoteSelected={false}\n                    numGoals={0}\n                    isCurrentDay={false}\n                    isMultiSelect={false}\n                />\n            );\n        }\n    }\n\n    function handleDayClicked() {\n        if (!disabled) {\n            if (selectedGoals.length === 1) {\n                const goal = selectedGoals[0];\n\n                // THIS IS PRETTTY INEFICIENT.\n                const isDayCompleted =\n                    completedDays &&\n                    completedDays[goal] &&\n                    completedDays[goal].filter((day) => day.date === myDate).length > 0;\n\n                if (!isDayCompleted) {\n                    handleDayCompleted(myDate, goal);\n                }\n\n                handleNoteSelected(myDate, curGoal);\n            }\n        }\n    }\n\n    const display = getColorDisplay();\n\n    return <Fragment>{display}</Fragment>;\n}\n\nconst Squares = styled.div`\n    display: flex;\n    padding-left: 0.2rem;\n    flex-flow: row wrap;\n`;\n\nconst DayNumber = styled.div`\n    padding-right: 0.5rem;\n    padding-top: 0.3rem;\n`;\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n`;\n\nconst Button = styled.button<{ disabled; isNoteSelected; numGoals; isCurrentDay; isMultiSelect }>`\n    font-family: 'Avenir Next' !important;\n    padding: 0;\n    display: inline-block;\n    height: ${(props) => (props.disabled ? '100%' : '6rem')};\n    width: 6rem;\n    -webkit-text-fill-color: ${(props) => (props.disabled ? 'transparent' : 'none')};\n    font-size: 1em;\n    margin: 0.4375rem;\n    border: ${(props) => (props.disabled ? 'none;' : props.isCurrentDay ? '2px solid white' : '2px solid #6B7A8F')};\n    border-radius: 3px;\n    text-align: right;\n\n    filter: ${(props) => (props.isNoteSelected || props.isMultiSelect ? 'none' : 'brightness(75%)')};\n    &:hover {\n        filter: ${(props) => (props.numGoals === 1 ? 'none' : 'brightness(75%)')};\n    }\n\n    // Size the square based on the width of the browser window.\n    @media only screen and (max-width: 1450px) {\n        height: ${(props) => (props.disabled ? '100%' : '5rem')};\n        width: 5rem;\n    }\n\n    @media only screen and (max-width: 1305px) {\n        height: ${(props) => (props.disabled ? '100%' : '3.8rem')};\n        width: 3.8rem;\n    }\n\n    margin-top: 0.3rem;\n`;\n","// TODO -- ADD MORE COLORS TO THIS LIST\n\nexport const GOAL_COLORS = ['#279020', '#902027', '#154B5D', '#22155D', '#892090', '#209089', '#908920', '#CF742E'];\n\nexport interface completedDay {\n    date: string;\n    goal: string;\n    notes: string;\n}\n\nexport const MONTH_DAYS = {\n    '01': 31,\n    '02': 28,\n    '03': 31,\n    '04': 30,\n    '05': 31,\n    '06': 30,\n    '07': 31,\n    '08': 31,\n    '09': 30,\n    '10': 31,\n    '11': 30,\n    '12': 31\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Day from './Day';\n\nimport { animated, useSpring } from 'react-spring';\nimport { MONTH_DAYS } from './constants/AppConstants';\n\nexport function getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\n/**\n * NOTES -- Re-renders on every goal selection\n */\nexport default function Calendar({\n    curMonth,\n    curGoal,\n    completedDays,\n    colorMap,\n    selectedGoals,\n    handleDayCompleted,\n    handleDayRemoved,\n    handleNoteSelected,\n    selectedDayForNotes\n}) {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    const animatedProps = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n    const DaysOfWeek = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'];\n\n    function getMonth(month, completedDays) {\n        const myMonth = [[]];\n        let dayOfWeek = 1;\n        let week = [];\n\n        // Dynamically adjust the number of rows in the calendar as the window resizes.\n        // const daysPerRow = Math.floor(windowDimensions.width / 180);\n        const daysPerRow = 7;\n\n        let firstOfMonth: any = month.toString().padStart(2, '0') + '-01-2019';\n        firstOfMonth = new Date(firstOfMonth).getDay();\n\n        // Add in a row for the days of the week\n        for (let day = 0; day < 7; day++) {\n            week.push(<DayOfWeek>{DaysOfWeek[day]}</DayOfWeek>);\n        }\n\n        myMonth.push(week);\n        week = [];\n\n        // Add in blank days until the first day of the month.\n        for (let unusedDay = 0; unusedDay < firstOfMonth; unusedDay++) {\n            week.push(<Day disabled={true} />);\n        }\n\n        dayOfWeek = firstOfMonth + 1;\n\n        // USING 35 SO THAT WE GET 5 WEEKS.\n        for (let i = 1; i <= MONTH_DAYS[month]; i++) {\n            const date =\n                month.toString().padStart(2, '0') +\n                '-' +\n                i\n                    .toString()\n                    .toString()\n                    .padStart(2, '0') +\n                '-' +\n                '2019';\n\n            if (dayOfWeek === daysPerRow + 1) {\n                myMonth.push(week);\n                dayOfWeek = 1;\n                week = [];\n            }\n\n            let goalsCompletedOnDay = [];\n            selectedGoals.forEach((selectedGoal) => {\n                if (\n                    completedDays[selectedGoal] &&\n                    completedDays[selectedGoal].filter((day) => day.date === date).length > 0 //.indexOf(date) > -1\n                ) {\n                    goalsCompletedOnDay.push(selectedGoal);\n                }\n            });\n\n            week.push(\n                <Day\n                    completedColor={colorMap ? colorMap[curGoal] : 'green'}\n                    curGoal={curGoal}\n                    day={i}\n                    month={parseInt(month)}\n                    year={2019}\n                    goalsCompletedOnDay={goalsCompletedOnDay}\n                    selectedGoals={selectedGoals}\n                    completedDays={completedDays}\n                    colorMap={colorMap}\n                    handleDayCompleted={handleDayCompleted}\n                    disabled={false}\n                    handleNoteSelected={handleNoteSelected}\n                    selectedDayForNotes={selectedDayForNotes}\n                />\n            );\n            dayOfWeek += 1;\n        }\n\n        // fill out the last row with empty days\n        for (let unusedDay = 0; unusedDay < 8 - dayOfWeek; unusedDay++) {\n            week.push(<Day disabled={true} />);\n        }\n\n        myMonth.push(week);\n        week = [];\n\n        // Adds a blank row of disabled days so that the size stays the same.\n        if (myMonth.length === 7) {\n            for (let unusedDay = 0; unusedDay < 7; unusedDay++) {\n                week.push(<Day disabled={true} />);\n            }\n\n            myMonth.push(week);\n        }\n\n        week = [];\n\n        week.push(\n            selectedDayForNotes ? (\n                <DeselectButton\n                    onClick={() => {\n                        if (selectedGoals && selectedGoals.length === 1) {\n                            handleDayRemoved(selectedDayForNotes.date, selectedGoals[0]);\n                        }\n                    }}>\n                    Remove Day\n                </DeselectButton>\n            ) : (\n                <Day disabled={true} />\n            )\n        );\n\n        // week.push(<Day disabled={true} />);\n\n        myMonth.push(week);\n\n        return myMonth;\n    }\n\n    function getYear(completedDays) {\n        const calendarYear = {};\n        for (let i = 1; i <= 12; i++) {\n            let monthNum = i.toString();\n            monthNum = monthNum.length === 1 ? '0' + monthNum : monthNum;\n\n            const month = getMonth(monthNum, completedDays);\n            calendarYear[i] = month;\n        }\n        return calendarYear;\n    }\n\n    const calendarYear = getYear(completedDays);\n\n    return (\n        <Container style={animatedProps}>\n            {calendarYear[curMonth]\n                ? calendarYear[curMonth].map((week, idx) => {\n                      if (idx === calendarYear[curMonth].length - 1) {\n                          return <DeselectWrapper>{week}</DeselectWrapper>;\n                      }\n\n                      return <div id={week}>{week}</div>;\n                  })\n                : null}\n        </Container>\n    );\n}\n\nconst Container = styled(animated.div)`\n    /* display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin-left: 22rem;\n    margin-top: 1rem;\n    overflow: hidden; */\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    -webkit-box-pack: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n    /* margin-left: 22rem; */\n    margin-top: 1rem;\n    overflow: hidden;\n\n    margin-top: 3rem;\n`;\n\nconst DayOfWeek = styled.div`\n    display: inline-block;\n    width: 6rem;\n    height: 1rem;\n    margin: 0.4375rem;\n    margin-bottom: 2rem;\n    text-align: center;\n    font-size: 1.15rem;\n\n    @media only screen and (max-width: 1450px) {\n        width: 5rem;\n    }\n\n    @media only screen and (max-width: 1305px) {\n        width: 3.8rem;\n    }\n`;\n\nconst DeselectWrapper = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: flex-end;\n    justify-content: flex-end;\n`;\n\nconst DeselectButton = styled.button`\n    background-color: #464e50;\n    width: 10rem;\n    height: 4rem;\n    margin-right: 9rem;\n    font-family: 'Avenir Next' !important;\n    color: white;\n    border-radius: 0.5rem;\n\n    &:hover {\n        filter: ${(props) => (props.disabled ? 'brightness(100%)' : 'brightness(85%)')};\n    }\n\n    @media only screen and (max-width: 1450px) {\n        width: 7.5rem;\n        height: 3rem;\n        margin-right: 2rem;\n    }\n\n    @media only screen and (max-width: 1305px) {\n        width: 3.8rem;\n    }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport default function DeleteGoalRow({ goal, index, undoDelete, confirmDelete }) {\n    return (\n        <NewListRow onClick={() => undoDelete}>\n            <b style={{ paddingLeft: '1rem' }}>Delete goal?</b>\n            {/* <b style={{ paddingLeft: '.2rem' }}>{goal}?</b> */}\n            <div>\n                <i\n                    className='glyphicon glyphicon-remove'\n                    style={{ paddingLeft: '4rem' }}\n                    onClick={() => undoDelete()}\n                />\n                <i\n                    className='glyphicon glyphicon-trash'\n                    style={{ paddingLeft: '2rem', paddingRight: '1rem' }}\n                    onClick={() => confirmDelete(goal, index)}\n                />\n            </div>\n        </NewListRow>\n    );\n}\n\nconst NewListRow = styled.div`\n    display: flex;\n    direction: ltr;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    vertical-align: middle;\n    line-height: 2.5rem;\n    height: 5rem !important;\n    margin-bottom: 2rem;\n    width: 19.5rem;\n    border-radius: 0.3rem;\n    border: 1px solid #565656;\n\n    background-color: #ff3a22;\n\n    padding-left: 0.5rem;\n    color: white;\n    margin-left: 0.5rem;\n    font-family: 'Avenir Next' !important;\n`;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { createGoal, deleteGoal, removeDaysCompleted } from './utils';\nimport useAuth from './useAuth';\n\nimport './App.scss';\n\nimport { getWindowDimensions } from './Calendar';\nimport DeleteGoalRow from './DeleteGoalRow';\n\nexport default function GoalsList({\n    existingGoals,\n    colorMap,\n    updateSelected,\n    addToColorMap,\n    removeFromColorMap,\n    handleGoalSelected,\n    handleGoalRemoved,\n    selectedGoals,\n    creationDateMap,\n    selectAllGoals\n}) {\n    const { auth } = useAuth();\n\n    // This is the goal that is currently typed into the new goal input.\n    const [newGoal, setNewGoal] = useState('');\n\n    // List of goals that are in the pre-delete state.\n    const [goalsToDelete, setGoalsToDelete] = useState([]);\n\n    // The list of the existing goals.\n    const [goals, setGoals] = useState(existingGoals);\n\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        setWindowDimensions(getWindowDimensions());\n    }, []);\n\n    useEffect(() => {\n        setGoals(existingGoals);\n    }, [existingGoals]);\n\n    // TODO -- THE CHECK BOXES ARE MESSED UP WHEN DELETING\n    // DON'T SET THE DELETED GOAL AS SELECTED, JUST USE SEPARATE STATE.\n    function handleDelete(goal: string, idx: number) {\n        deleteGoal(auth.uid, goal);\n        setGoals(goals.filter((g) => g !== goal));\n        removeDaysCompleted(auth.uid, goal);\n\n        removeFromColorMap(goal);\n\n        handleGoalRemoved(goal);\n\n        // Check if there are still goals remaining after this delete.\n        if (goals.length - 1 > 0) {\n            const nextGoalIdx = idx === 0 ? idx + 1 : idx - 1;\n            updateSelected(goals[nextGoalIdx]);\n            handleGoalSelected(goals[nextGoalIdx], goals[idx]);\n        }\n    }\n\n    function undoDelete(goal: string) {\n        let update = JSON.parse(JSON.stringify(goalsToDelete));\n        update = update.filter((g) => g != goal);\n\n        setGoalsToDelete(update);\n    }\n\n    /**\n     * When 'Select all' is clicked, set every goal's checkbox to be checked.\n     * @param goals\n     */\n    function checkAllCheckmarks(goals) {\n        goals.forEach((goal) => {\n            if (document.getElementById(goal) as HTMLInputElement) {\n                (document.getElementById(goal) as HTMLInputElement).checked = true;\n            }\n        });\n    }\n\n    return (\n        <GoalContainer>\n            <InnerContainer>\n                <InputContainer>\n                    <MyForm>\n                        <GoalInput\n                            type='text'\n                            placeholder='Enter your next habit ...'\n                            onChange={(e) => {\n                                setNewGoal(e.target.value);\n                            }}\n                            onSubmit={(e) => {\n                                return false;\n                            }}\n                            onKeyPress={(e) => {\n                                if (e.keyCode === 13 || e.key === 'Enter') {\n                                    e.preventDefault();\n                                }\n                            }}\n                        />\n                        <AddGoalButton\n                            type='reset'\n                            onClick={() => {\n                                if (newGoal.length > 0 && !goals.includes(newGoal)) {\n                                    const goalColor = addToColorMap(newGoal);\n                                    createGoal(auth.uid, newGoal, goalColor);\n\n                                    if (goals.includes(newGoal)) {\n                                        updateSelected(newGoal);\n                                    }\n\n                                    setNewGoal('');\n                                    setGoals([...goals, newGoal]);\n                                }\n                            }}>\n                            ADD\n                        </AddGoalButton>\n                    </MyForm>\n                </InputContainer>\n                <SelectAll\n                    onClick={() => {\n                        selectAllGoals(goals);\n                        checkAllCheckmarks(goals);\n                    }}>\n                    Select All\n                </SelectAll>\n                <ListContainer windowHeight={windowDimensions.height}>\n                    {goals\n                        ? goals.map((goal, idx) => {\n                              return (\n                                  <Fragment>\n                                      {goalsToDelete.includes(goal) ? (\n                                          <DeleteGoalRow\n                                              goal={goal}\n                                              index={idx}\n                                              undoDelete={() => undoDelete(goal)}\n                                              confirmDelete={(goalToDelete, index) => handleDelete(goalToDelete, index)}\n                                          />\n                                      ) : (\n                                          <NewListRow\n                                              // selected={goal === selectedGoals[0]}\n                                              selected={selectedGoals.includes(goal)}\n                                              checked={\n                                                  (document.getElementById(goal) as HTMLInputElement) &&\n                                                  (document.getElementById(goal) as HTMLInputElement).checked\n                                              }\n                                              colorMap={colorMap}\n                                              goal={goal}\n                                              toDelete={goalsToDelete.includes(goal)}\n                                              onClick={() => {\n                                                  if (goals.includes(goal)) {\n                                                      if (selectedGoals) {\n                                                          selectedGoals.forEach((element) => {\n                                                              if (\n                                                                  document.getElementById(element) as HTMLInputElement\n                                                              ) {\n                                                                  (document.getElementById(\n                                                                      element\n                                                                  ) as HTMLInputElement).checked = false;\n                                                              }\n                                                          });\n                                                      }\n\n                                                      // Set as selected and check this rows checkbox, remove the previously selected from the selectedList.\n                                                      handleGoalSelected(goal, selectedGoals);\n                                                      updateSelected(goal);\n\n                                                      (document.getElementById(\n                                                          goal\n                                                      ) as HTMLInputElement).checked = true;\n                                                  }\n                                              }}>\n                                              <ListRowLeft>\n                                                  <Circle\n                                                      color={colorMap && colorMap[goal] ? colorMap[goal] : 'red'}\n                                                      className='dot'\n                                                  />\n                                                  <ListRowInfo>\n                                                      <Goal>{goal}</Goal>\n                                                      <StartDate>{creationDateMap[goal]}</StartDate>\n                                                  </ListRowInfo>\n                                              </ListRowLeft>\n                                              <ListRowRight>\n                                                  <Checkbox>\n                                                      <input\n                                                          id={goal}\n                                                          type='checkbox'\n                                                          defaultChecked={idx === 0}\n                                                          onClick={(e) => {\n                                                              //selectGoal(e, goal);\n                                                              e.stopPropagation();\n                                                              let checkbox = document.getElementById(\n                                                                  goal\n                                                              ) as HTMLInputElement;\n\n                                                              if (checkbox.checked) {\n                                                                  handleGoalSelected(goal);\n                                                              } else if (selectedGoals.length === 1) {\n                                                                  e.preventDefault();\n                                                              } else {\n                                                                  handleGoalRemoved(goal);\n                                                              }\n                                                          }}\n                                                      />\n                                                  </Checkbox>{' '}\n                                                  <DeleteButton\n                                                      onClick={(e) => {\n                                                          e.stopPropagation();\n                                                          setGoalsToDelete([...goalsToDelete, goal]);\n\n                                                          // update local state of rows in delete state\n                                                          setGoalsToDelete([...goalsToDelete, goal]);\n                                                      }}>\n                                                      {' '}\n                                                      <DeleteIcon className='glyphicon glyphicon-trash' />\n                                                  </DeleteButton>\n                                              </ListRowRight>\n                                          </NewListRow>\n                                      )}\n                                  </Fragment>\n                              );\n                          })\n                        : null}\n                </ListContainer>\n            </InnerContainer>\n        </GoalContainer>\n    );\n}\n\nconst InnerContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n\n    margin-top: 3rem;\n`;\n\nconst GoalContainer = styled.div`\n    /* display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n    \n    font-family: Helvetica;\n    position: absolute;\n    height: 100%;\n    width: 25rem;\n    border-right: 1.5px solid #d0d0d0; */\n\n    background-color: #1c1e1f;\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n\n    font-family: Helvetica;\n    // position: absolute;\n    height: 100%;\n    width: 25rem;\n    border-right: 1.5px solid #47484a;\n`;\n\nconst InputContainer = styled.div`\n    /* display: flex;\n    flex-direction: row; */\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: row;\n    flex-direction: row;\n`;\n\nconst MyForm = styled.form`\n    display: flex;\n    flex-direction: row;\n`;\n\nconst ListContainer = styled.div<{ windowHeight }>`\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    direction: rtl;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n\n    display: flex;\n    direction: rtl;\n    flex-direction: column;\n    align-items: center;\n    height: ${(props) => (props.windowHeight ? `${props.windowHeight - 330}px` : '35rem')};\n    overflow-y: scroll;\n    margin-top: 2rem;\n    padding-left: 0.5rem;\n`;\n\nconst SelectAll = styled.button`\n    margin-top: 1rem;\n    width: 8rem;\n\n    background-color: #464e50;\n    border-color: #0cc6ce;\n    color: #80f2f7;\n\n    border: 2px solid;\n    font-size: 1em;\n\n    filter: brightness(75%);\n\n    &:hover {\n        filter: brightness(50%);\n    }\n`;\n\nconst DeleteButton = styled.button`\n    background-color: rgba(0, 0, 0, 0);\n    border: none;\n`;\n\nconst DeleteIcon = styled.i`\n    padding-right: 0.5rem;\n    &:hover {\n        filter: brightness(85%);\n        color: red;\n    }\n`;\n\nconst GoalInput = styled.input`\n    border: 2px solid;\n\n    height: 3rem;\n    width: 18rem;\n    color: #9a968f;\n    font-size: 1em;\n    background-color: #464e50;\n    padding-left: 0.5rem;\n    /* border-radius: 0.3rem 0 0 0.3rem; */\n\n    ::-webkit-input-placeholder {\n        /* Chrome/Opera/Safari */\n        color: #f5f5f5;\n    }\n    ::-moz-placeholder {\n        /* Firefox 19+ */\n        color: #f5f5f5;\n    }\n    :-ms-input-placeholder {\n        /* IE 10+ */\n        color: #f5f5f5;\n    }\n    :-moz-placeholder {\n        /* Firefox 18- */\n        color: #f5f5f5;\n    }\n`;\n\nconst AddGoalButton = styled.button`\n    background-color: #2b2f31;\n    display: inline-block;\n\n    font-size: 1em;\n    /* padding: 1rem; */\n\n    font-weight: bold;\n\n    height: 100%;\n\n    &:hover {\n        filter: brightness(85%);\n    }\n`;\n\ninterface ListRowProps {\n    selected: boolean;\n    checked: boolean;\n    colorMap: Object;\n    goal: string;\n    toDelete: boolean; // check if this row is in deleting state (user clicked delete button but waiting for confirmation / cancellation).\n}\n\nconst NewListRow = styled.div<ListRowProps>`\n  display: flex;\n  direction: ltr;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  vertical-align: middle;\n  line-height: 2.5rem;\n  height: 4.2rem;\n  margin-bottom: 2rem;\n  width: 19.5rem;\n  border-radius: 0.3rem;\n  border: 1px solid #888888;\n  background-color: ${(props) => (props.toDelete ? 'red' : '#464e50')}; \n  padding-left: 0.5rem;\n  color: white;\n  margin-left: 0.5rem;\n  font-family: \"Avenir Next\" !important;\n\n  filter: ${(props) => (props.selected ? 'brightness(100%)' : 'brightness(65%)')};\n  &:hover {\n    /* background-color: ${(props) => (props.colorMap && props.goal ? props.colorMap[props.goal] : '#d8d8d8')}; */\n    filter: ${(props) => (props.selected ? 'brightness(100%)' : 'brightness(50%)')};\n  }\n`;\n\nconst ListRowInfo = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n    padding-left: 0.75rem;\n`;\n\nconst Circle = styled.span<{ color }>`\n    height: 2.5rem;\n    width: 2.5rem;\n    background-color: ${(props) => props.color};\n    border-radius: 50%;\n    border: 0.04rem solid black;\n`;\n\nconst Goal = styled.div`\n    color: white;\n    font-size: 1rem;\n    font-family: 'Avenir Next' !important;\n    overflow: auto;\n    height: 29px;\n    margin-bottom: 0;\n    overflow-y: hidden; // hide vertical\n    overflow-x: hidden;\n`;\n\nconst StartDate = styled.div`\n    color: '#A9A9A9';\n    font-size: 0.6rem;\n    font-family: 'Avenir Next' !important;\n    overflow-y: hidden; // hide vertical\n    overflow-x: hidden;\n    height: 25px;\n    padding-bottom: 0.6rem;\n`;\n\nconst ListRowLeft = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n`;\n\nconst ListRowRight = styled.div`\n    display: flex;\n    justify-content: end;\n    align-items: center;\n`;\n\nconst Checkbox = styled.label`\n    margin-right: 0rem;\n    width: 3rem;\n`;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { logout } from './utils';\n\nconst monthName = {\n    1: 'Jan',\n    2: 'Feb',\n    3: 'mar',\n    4: 'Apr',\n    5: 'May',\n    6: 'Jun',\n    7: 'Jul',\n    8: 'Aug',\n    9: 'Sept',\n    10: 'Oct',\n    11: 'Nov',\n    12: 'Dec'\n};\n\nexport default function HeaderBar({ curMonth, updateCurMonth, toggleAnalytics }) {\n    const [analyticsSelected, toggleAnalyticsSelected] = useState(false);\n\n    function clickedAnalytics() {\n        toggleAnalyticsSelected(!analyticsSelected);\n        toggleAnalytics();\n    }\n\n    return (\n        <Header>\n            <AppTitle>HabitTracker</AppTitle>\n            <VerticalBar />\n            <MonthAndLogoutContainer>\n                <MonthContainer>\n                    <CurMonth>{monthName[curMonth] + ' 2019'}</CurMonth>\n                    <MonthButton\n                        onClick={() => {\n                            if (curMonth != 1) {\n                                updateCurMonth(curMonth - 1);\n                            }\n                        }}>\n                        Prev\n                    </MonthButton>\n                    <MonthButton\n                        onClick={() => {\n                            if (curMonth != 12) {\n                                updateCurMonth(curMonth + 1);\n                            }\n                        }}>\n                        Next\n                    </MonthButton>\n                </MonthContainer>\n                <AnalyticsButton onClick={clickedAnalytics} analyticsOn={analyticsSelected}>\n                    Analytics\n                </AnalyticsButton>\n                <Button onClick={logout}>Logout</Button>\n            </MonthAndLogoutContainer>\n        </Header>\n    );\n}\n\nconst AppTitle = styled.h1`\n    font-size: 1.5rem;\n    font-family: 'Montserrat', sans-serif;\n    color: white;\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n`;\n\nconst MonthContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-evenly;\n`;\n\nconst Header = styled.div`\n    /* display: flex;\n    flex-direction: row;\n    height: 4.4rem;\n    background-color: #d8d8d8;\n    border-bottom: 2px solid #979797; */\n\n    color: white;\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: row;\n    flex-direction: row;\n    height: 4.4rem;\n    background-color: #222627;\n    border-bottom: 2px solid #47484a;\n`;\n\nconst MonthAndLogoutContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    width: 100%;\n    background-color: #222627;\n`;\n\nconst VerticalBar = styled.div`\n    border-left: 0rem dotted black; // TODO -- DECIDE IF I WANT THIS BAR HERE\n    height: 4.5rem;\n    margin-left: 13.7rem;\n`;\n\nconst CurMonth = styled.div`\n    font-size: 2.5rem;\n    color: white;\n    margin-left: 3rem;\n    font-family: 'Montserrat', sans-serif;\n    /* font-family: \"Avenir Next\" !important; */\n    margin-right: 1rem;\n    padding-left: 1rem;\n    margin-left: 3rem;\n`;\n\nconst MonthButton = styled.button`\n    display: inline-block;\n\n    font-size: 1em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border: 2px solid;\n\n    border-radius: 3px;\n    display: inline-block;\n    border-radius: 0.3rem;\n\n    background-color: #1d1f20;\n    border-color: #0cc6ce;\n    color: #80f2f7;\n\n    &:hover {\n        filter: brightness(75%);\n    }\n`;\n\nconst Button = styled.button`\n    display: inline-block;\n\n    font-size: 1em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border: 2px solid;\n    border-radius: 3px;\n    display: inline-block;\n    border-radius: 0.3rem;\n\n    background-color: #1d1f20;\n    border-color: #0cc6ce;\n    color: #80f2f7;\n\n    &:hover {\n        filter: brightness(75%);\n    }\n`;\n\nconst AnalyticsButton = styled.button<{ analyticsOn }>`\n    display: inline-block;\n\n    font-size: 1em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border: 2px solid;\n    border-radius: 3px;\n    display: inline-block;\n    border-radius: 0.3rem;\n\n    border-color: ${(props) => (props.analyticsOn ? 'white' : '#CF2E38')};\n    color: ${(props) => (props.analyticsOn ? 'white' : '#CF2E38')};\n\n    background-color: ${(props) => (props.analyticsOn ? '#CF2E38' : '#1d1f20')};\n    &:hover {\n        filter: brightness(75%);\n    }\n`;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { completedDay } from './constants/AppConstants';\nimport { getWindowDimensions } from './Calendar';\nimport { useSpring, animated } from 'react-spring';\n\nexport default function Notes({ selectedDayForNotes, completedDays, handleNoteAdded, handleDayRemoved }) {\n    const [goal, setGoal] = useState(null);\n\n    const [date, setDate] = useState(null);\n\n    const [note, setNote] = useState('');\n\n    const [showSuccess, setShowSuccess] = useState(1);\n\n    const props = useSpring({ opacity: 0, from: { opacity: showSuccess } });\n\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        setWindowDimensions(getWindowDimensions());\n    }, []);\n\n    useEffect(() => {\n        if (selectedDayForNotes) {\n            setGoal(selectedDayForNotes.goal);\n            setDate(selectedDayForNotes.date);\n            setNote(selectedDayForNotes.notes ? selectedDayForNotes.notes : '');\n        }\n    }, [selectedDayForNotes, completedDays]);\n\n    return (\n        <Fragment>\n            {selectedDayForNotes ? (\n                <Container>\n                    <NewContainer>\n                        <Fragment>\n                            <SaveButton\n                                onClick={async () => {\n                                    if (goal && date && note && note.length) {\n                                        const dayToUpdate: completedDay = {\n                                            goal: goal,\n                                            date: date,\n                                            notes: note\n                                        };\n                                        await handleNoteAdded(dayToUpdate);\n                                    }\n                                }}>\n                                Save note\n                            </SaveButton>\n\n                            <OtherDisplay>\n                                <br />\n                                {goal}\n                                <br />\n                                {date}\n                            </OtherDisplay>\n\n                            {/* <svg\n                                id='successAnimation'\n                                className='animated'\n                                xmlns='http://www.w3.org/2000/svg'\n                                width='70'\n                                height='70'\n                                viewBox='0 0 70 70'>\n                                <path\n                                    id='successAnimationResult'\n                                    fill='#D8D8D8'\n                                    d='M35,60 C21.1928813,60 10,48.8071187 10,35 C10,21.1928813 21.1928813,10 35,10 C48.8071187,10 60,21.1928813 60,35 C60,48.8071187 48.8071187,60 35,60 Z M23.6332378,33.2260427 L22.3667622,34.7739573 L34.1433655,44.40936 L47.776114,27.6305926 L46.223886,26.3694074 L33.8566345,41.59064 L23.6332378,33.2260427 Z'\n                                />\n                                <circle\n                                    id='successAnimationCircle'\n                                    cx='35'\n                                    cy='35'\n                                    r='24'\n                                    stroke='#979797'\n                                    stroke-width='2'\n                                    stroke-linecap='round'\n                                    fill='transparent'\n                                />\n                                <polyline\n                                    id='successAnimationCheck'\n                                    stroke='#979797'\n                                    stroke-width='2'\n                                    points='23 34 34 43 47 27'\n                                    fill='transparent'\n                                />\n                            </svg> */}\n\n                            <NotesInput\n                                spellCheck={false}\n                                placeholder={note ? null : `Add Notes for ${goal} on ${date}`}\n                                windowHeight={windowDimensions.height}\n                                onChange={(e) => setNote(e.target.value)}\n                                value={note}>\n                                <button>Hello</button>\n                            </NotesInput>\n\n                            <Remainder />\n                        </Fragment>\n                    </NewContainer>\n                </Container>\n            ) : (\n                <Container>\n                    <NewContainer>\n                        <Placeholder windowHeight={windowDimensions.height}>Click on a day to add a note</Placeholder>\n                    </NewContainer>\n                </Container>\n            )}\n        </Fragment>\n    );\n}\n\nconst Placeholder = styled.div<{ windowHeight }>`\n    color: white;\n    width: 17rem;\n    background: #222627;\n    font-family: 'Gayathri', sans-serif;\n    height: ${(props) => (props.windowHeight ? `${props.windowHeight}px` : '35rem')};\n    border: none;\n    padding-top: 3rem;\n    padding-right: 1rem;\n    text-align: center;\n    /* border-left: 1.5px solid #979797; */\n    background-color: #222627;\n`;\n\nconst SaveButton = styled.button`\n    /* border: 3px solid black; */\n    height: 5rem;\n    /* background-color: #464e50;\n    font-family: 'Gayathri', sans-serif;\n    font-size: 1.3rem;\n    color: white;\n    padding: 0;\n    border: 0;\n\n    white-space: normal;\n\n    &:hover {\n        filter: brightness(85%);\n    } */\n\n    font-size: 1.2em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border: 2px solid;\n    border-radius: 3px;\n    display: inline-block;\n    border-radius: 0.3rem;\n\n    background-color: #fdfd96;\n    border-color: #0cc6ce;\n    color: black;\n\n    \n\n    &:hover {\n        filter: brightness(75%);\n    }\n`;\n\nconst NewContainer = styled.div`\n    /* display: flex;\n    flex-direction: column;\n    background-color: #d8d8d8; */\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    background-color: #fdfd96;\n`;\n\nconst Container = styled.div`\n    width: 17rem;\n    background-color: #fdfd96;\n\n    color: #09868b;\n    border-left: 1.5px solid #47484a;\n    position: absolute;\n    right: 0;\n`;\n\nconst OtherDisplay = styled.div`\n    color: black;\n    width: 17rem;\n    background: #d8d8d8;\n    font-family: 'Gayathri', sans-serif;\n    height: 8rem;\n    padding-left: 0.5rem;\n    border: none;\n    padding-top: 3rem;\n    font-size: 1.5rem;\n\n    /* border-left: 1.5px solid #979797; */\n    background-color: #fdfd96;\n\n    background-attachment: local;\n    background-image: linear-gradient(to right, #fdfd96 10px, transparent 10px),\n        linear-gradient(to left, #fdfd96 10px, transparent 10px),\n        repeating-linear-gradient(#fdfd96, #fdfd96 30px, #ccc 30px, #ccc 31px, white 31px);\n    line-height: 31px;\n    padding: 8px 10px;\n`;\n\nconst NotesInput = styled.textarea<{ windowHeight }>`\n    color: black;\n    width: 17rem;\n    background: #d8d8d8;\n    font-family: 'Gayathri', sans-serif;\n    height: ${(props) => (props.windowHeight ? `${props.windowHeight}px` : '35rem')};\n    padding-left: 0.5rem;\n    border: none;\n    padding-top: 3rem;\n\n    /* border-left: 1.5px solid #979797; */\n    background-color: #fdfd96;\n\n    background-attachment: local;\n    background-image: linear-gradient(to right, #fdfd96 10px, transparent 10px),\n        linear-gradient(to left, #fdfd96 10px, transparent 10px),\n        repeating-linear-gradient(#fdfd96, #fdfd96 30px, #ccc 30px, #ccc 31px, white 31px);\n    line-height: 31px;\n    padding: 8px 10px;\n`;\n\nconst Remainder = styled.div`\n    background: #d8d8d8;\n    height: 200px;\n`;\n","// Color Gradients\nexport const colorGradients = {\n    greenBlue: ['#39C7EA', '#4CDCBA'],\n    orangePink: ['#FBC670', '#F766B8'],\n    bluePurple: ['#3DC3C9', '#824a9e']\n};\nexport const colorGradientsHuman = {\n    greenBlue: 'Green to Blue',\n    orangePink: 'Orange to Pink',\n    bluePurple: 'Blue to Purple'\n};\n\n// Color Schemas\n// Standard Color Schema for Britecharts\nexport const britecharts = [\n    '#6aedc7', //green\n    '#39c2c9', //blue\n    '#ffce00', //yellow\n    '#ffa71a', //orange\n    '#f866b9', //pink\n    '#998ce3' //purple\n];\n// Grey Palette\nexport const grey = ['#F8F8FA', '#EFF2F5', '#D2D6DF', '#C3C6CF', '#ADB0B6', '#666A73', '#45494E', '#363A43', '#282C35'];\n// Orange Palette\nexport const orange = [\n    '#fcc870',\n    '#ffa71a',\n    '#fb8825',\n    '#f6682f',\n    '#db5a2c',\n    '#bf4c28',\n    '#a43b1c',\n    '#892a10',\n    '#f9e9c5'\n];\n// Blue Palette\nexport const blueGreen = [\n    '#ccf7f6',\n    '#70e4e0',\n    '#00d8d2',\n    '#00acaf',\n    '#007f8c',\n    '#005e66',\n    '#003c3f',\n    '#002d2f',\n    '#0d2223'\n];\n// LightBlue Palette\nexport const teal = ['#ccfffe', '#94f7f4', '#00fff8', '#1de1e1', '#39c2c9', '#2e9a9d', '#227270', '#1a5957', '#133f3e'];\n// Green Palette\nexport const green = [\n    '#edfff7',\n    '#d7ffef',\n    '#c0ffe7',\n    '#95f5d7',\n    '#6aedc7',\n    '#59c3a3',\n    '#479980',\n    '#34816a',\n    '#206953'\n];\n// Yellow Palette\nexport const yellow = [\n    '#f9f2b3',\n    '#fbe986',\n    '#fce05a',\n    '#fed72d',\n    '#ffce00',\n    '#fcc11c',\n    '#f9b438',\n    '#eda629',\n    '#e09819'\n];\n// Pink Palette\nexport const pink = ['#fdd1ea', '#fb9cd2', '#f866b9', '#fc40b6', '#ff1ab3', '#e3239d', '#c62c86', '#a62073', '#85135f'];\n// Purple Palette\nexport const purple = [\n    '#ddd6fc',\n    '#bbb1f0',\n    '#998ce3',\n    '#8e6bc1',\n    '#824a9e',\n    '#77337f',\n    '#6b1c60',\n    '#591650',\n    '#470f3f'\n];\n// Red Palette\nexport const red = ['#ffd8d4', '#ffb5b0', '#ff938c', '#ff766c', '#ff584c', '#f04b42', '#e03d38', '#be2e29', '#9c1e19'];\n\nexport const colorSchemas = {\n    britecharts,\n    grey,\n    orange,\n    blueGreen,\n    teal,\n    green,\n    yellow,\n    pink,\n    purple,\n    red\n};\nexport const colorSchemasHuman = {\n    britecharts: 'Britecharts Default',\n    grey: 'Britecharts Grey',\n    orange: 'Orange',\n    blueGreen: 'Blue',\n    teal: 'Light Blue',\n    green: 'Green',\n    yellow: 'Yellow',\n    pink: 'Pink',\n    purple: 'Purple',\n    red: 'Red'\n};\n\n// Single Colors\nexport const aloeGreen = ['#7bdcc0']; // To Deprecate\nexport const greenColor = ['#6aedc7'];\nexport const blueColor = ['#39c2c9'];\nexport const yellowColor = ['#ffce00'];\nexport const orangeColor = ['#ffa71a'];\nconst pinkColor = ['#f866b9'];\nconst purpleColor = ['#998ce3'];\n\nconst singleColors = {\n    aloeGreen,\n    greenColor,\n    blueColor,\n    yellowColor,\n    orangeColor,\n    pinkColor,\n    purpleColor\n};\nconst singleColorsHuman = {\n    aloeGreen: 'Aloe Green',\n    greenColor: 'Green',\n    blueColor: 'Blue',\n    yellowColor: 'Yellow',\n    orangeColor: 'Orange',\n    pinkColor: 'Pink',\n    purpleColor: 'Purple'\n};\n\nexport default {\n    colorSchemas,\n    colorSchemasHuman,\n    colorGradients,\n    colorGradientsHuman,\n    singleColors,\n    singleColorsHuman\n};\n","import React, { useEffect } from 'react';\n\nimport { Bar } from 'britecharts-react';\nimport colors from './colors';\n\nexport default function BarGraph({ goal, completedDays }) {\n    const barData = [\n        { name: 'This week', value: numDaysCompletedInPrevWeek(0) },\n        { name: '1 week ago', value: numDaysCompletedInPrevWeek(1) },\n        { name: '2 weeks ago', value: numDaysCompletedInPrevWeek(2) },\n        { name: '3 weeks ago', value: numDaysCompletedInPrevWeek(3) }\n    ];\n\n    // generate an array of the last s\n\n    function isDayInRange(date: string, startDate: string, endDate: string) {\n        const dateArray = date.split('-');\n        const startArray = startDate.split('-');\n        const endArray = endDate.split('-');\n\n        console.log('HERE HERE HERE: ', date, startDate, endDate);\n        console.log('HERE HERE HERE: ', +dateArray[1], +startArray[1], +endArray[1]);\n\n        // Check case for weeks that fit completely in current week.\n        return (\n            +dateArray[0] === +startArray[0] &&\n            +dateArray[0] === +endArray[0] &&\n            +dateArray[1] >= +startArray[1] &&\n            +dateArray[1] <= +endArray[1]\n        );\n    }\n\n    function getPreviousWeek(weeksAgo: number): { firstDay: string; lastDay: string } {\n        let today: any = new Date();\n        today.setDate(today.getDate() - 7 * weeksAgo);\n\n        let curDay = String(today.getDate()).padStart(2, '0');\n        let curMonth = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n        let year = today.getFullYear();\n\n        // Runs 0 (Sunday) -> 6 (saturday)\n        const dayOfWeek = today.getDay();\n\n        const firstOfWeek = curMonth + '-' + String(+curDay - dayOfWeek) + '-' + year;\n        const endOfWeek = curMonth + '-' + String(+curDay + (6 - dayOfWeek)) + '-' + year;\n\n        return { firstDay: firstOfWeek, lastDay: endOfWeek };\n    }\n\n    function numDaysCompletedInPrevWeek(weeksAgo: number): number {\n        if (completedDays) {\n            const days = completedDays[goal];\n            const range = getPreviousWeek(weeksAgo);\n            let total = 0;\n\n            if (days) {\n                days.forEach((day) => {\n                    // convert the date to a number\n                    // let date = +day.date.replace(/-/g, '');\n\n                    if (isDayInRange(day.date, range.firstDay, range.lastDay)) {\n                        console.log('================', day.date, range.firstDay, range.lastDay);\n                        total += 1;\n                    }\n                });\n            }\n\n            return total;\n        }\n\n        return 0;\n    }\n\n    return (\n        <Bar\n            data={barData}\n            height={300}\n            width={450}\n            isHorizontal={true}\n            margin={{ left: 100 }}\n            colorSchema={colors.colorSchemas.orange}\n        />\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Donut } from 'britecharts-react';\n\nexport default function DonutGraph({ goal, completedDays }) {\n    const [daysCompletedThisMonth, setDaysCompletedThisMonth] = useState(null);\n\n    const [donutData, setDonutData] = useState([]);\n\n    // TODO -- MENTION THAT ALL THIS BIS IS FOR THE CURRENT MONTH.\n\n    useEffect(() => {\n        const today = new Date();\n        const curMonth = today.getMonth() + 1;\n        const totalDays = new Date(2019, curMonth, 0).getDate();\n\n        let totalCompleted = 0;\n\n        if (completedDays && completedDays[goal]) {\n            console.log('ENTERING FOR EACH LOOP DONUT');\n\n            completedDays[goal].forEach((day) => {\n                console.log(+day.date.substring(0, 2), curMonth);\n                if (+day.date.substring(0, 2) == curMonth) {\n                    totalCompleted++;\n                }\n            });\n\n            console.log('FINSISHED');\n        }\n\n        const newData = [\n            {\n                quantity: totalCompleted,\n                percentage: ((totalCompleted / totalDays) * 100).toFixed(0),\n                name: 'Days Completed',\n                color: 'white',\n                id: 1\n            },\n            {\n                quantity: totalDays - totalCompleted,\n                percentage: (((totalDays - totalCompleted) / totalDays) * 100).toFixed(0),\n                name: 'Days Not completed',\n                id: 2\n            }\n        ];\n\n        setDonutData(newData);\n\n        console.log('COMPLETED: ', totalCompleted, totalDays - totalCompleted, totalDays);\n    }, [goal]);\n\n    const logMouseOver = () => console.log('Mouse Over');\n\n    return (\n        <Donut\n            data={donutData}\n            customMouseOver={logMouseOver}\n            externalRadius={150}\n            internalRadius={75}\n            highlightSliceById={1}\n        />\n    );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport BarGraph from './BarGraph';\nimport DonutGraph from './DonutGraph';\n\nimport { animated, useSpring } from 'react-spring';\nimport LegendGraph from './LegendGraph';\n\nexport default function Analytics({ goal, completedDays }) {\n    const animatedProps = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n    return (\n        <Container style={animatedProps}>\n            <StackedRowsContainer>\n                <Row style={{ paddingTop: '2rem' }}>\n                    <DonutGraph goal={goal} completedDays={completedDays} />\n                    <BarGraph goal={goal} completedDays={completedDays} />\n                </Row>\n                {/* <Row style={{ paddingBottom: '10rem' }}>\n                    <LegendGraph />\n                </Row> */}\n            </StackedRowsContainer>\n        </Container>\n    );\n}\n\nconst Container = styled(animated.div)`\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    flex-direction: column;\n\n    height: 100%;\n\n    overflow: hidden;\n\n    // TODO -- ADD DIFFERENT BACKGROUND COLOR\n\n    // background-color: #393f4d;\n`;\n\nconst StackedRowsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: space-evenly;\n    height: 100%;\n`;\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    align-items: center;\n    height: 100%;\n    margin-bottom: 10rem;\n`;\n","import React, { useState, useEffect, useRef, Fragment } from 'react';\nimport styled from 'styled-components';\nimport useAuth from './useAuth';\nimport GoalsList from './GoalList';\nimport Calendar from './Calendar';\nimport { db } from './fire';\nimport HeaderBar from './HeaderBar';\nimport { GOAL_COLORS, completedDay } from './constants/AppConstants';\nimport Notes from './Notes';\nimport { addCompletedDay, removeCompletedDay, updateNotesForCompletedDay } from './utils';\n\nimport { useSpring, animated } from 'react-spring';\nimport BarGraph from './BarGraph';\nimport Analytics from './Analytics';\n\n// TODO -- I'M NOT CLEARING OUT MY LOCAL TRACK OF COMPLETED DAYS WHEN A GOAL GETS DELETED.\n\nexport default function LoggedIn() {\n    const { auth } = useAuth();\n\n    const [selectedGoals, setSelectedGoals] = useState([]);\n\n    // Color mapping. Goal --> Hex Color\n    const [colorMap, setColorMap] = useState({});\n\n    // The list of the existing goals.\n    const [existingGoals, setExistingGoals] = useState([]);\n\n    // The currently selectedGoal goal.\n    const [selectedGoal, setSelected] = useState('');\n\n    // Mapping of each goal to the days that are completed (selectedGoal).\n    // The old state of the mapping at the time of the app being loaded\n    // const [oldCompletedDays, setOldCompletedDays] = useState({});\n\n    // Mapping of each goal to the days that are completed (selectedGoal).\n    // the new state of the mapping as the user makes new selections.\n    const [completedDays, setNewCompletedDays] = useState({});\n\n    const [curMonth, setCurMonth] = useState(null);\n\n    const [goalCreationDateMap, setGoalCreationDateMap] = useState({});\n\n    // Track which completed day we are currently writing notes for.\n    const [selectedDayForNotes, setSelectedDayForNotes] = useState(null);\n\n    // Track if we're on the analytics page or the calendar page.\n    const [showAnalytics, setShowAnalytics] = useState(false);\n\n    const animatedProps = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n    const addHandler = (handler) => window.addEventListener('beforeunload', handler);\n    const removeHandler = (handler) => window.removeEventListener('beforeunload', handler);\n\n    useEffect(() => {\n        console.log('\\n');\n        console.log('===================== LOGGED IN STATE =========================');\n        console.log('selectedGoals: ', selectedGoals);\n        console.log('completedDays:  ', completedDays);\n        console.log('selectedDayForNotes: ', selectedDayForNotes);\n        console.log('colorMap: ', colorMap);\n        console.log('\\n');\n    });\n\n    /**\n     * Save completed days for last viewed goal, before the app window closes or the page is refreshed.\n     */\n    const useWindowUnloadEffect = (handler, callOnCleanup) => {\n        const prevHandler = useRef(null);\n        useEffect(() => {\n            if (prevHandler.current) removeHandler(handler.current); // remove the the current event listener, if one exists\n            prevHandler.current = handler;\n            addHandler(handler);\n            return () => {\n                if (callOnCleanup) handler();\n                removeHandler(handler);\n            };\n        }, [handler]);\n    };\n\n    // Load the current month onto the screen.\n    useEffect(() => {\n        const today = new Date();\n        setCurMonth(today.getMonth() + 1);\n    }, []);\n\n    // Load goals and completed days on component mount (only once).\n    useEffect(() => {\n        fetchGoals();\n        fetchCompletedDays();\n    }, []);\n\n    async function updateCurMonth(month: number) {\n        setCurMonth(month);\n    }\n\n    function timeConverter(date: Date) {\n        return date.toISOString().substring(0, 10);\n    }\n\n    /**\n     * Pull Goal data from the firestore.\n     */\n    function fetchGoals() {\n        db.collection('goals')\n            .doc(auth.uid)\n            .collection('userGoals')\n            .where('uid', '==', auth.uid)\n            .get()\n            .then((snapshot) => {\n                const existingGoals: any[] = [];\n                const existingColorMap = {};\n                const createdDateMap = {};\n                snapshot.docs.forEach((doc) => {\n                    if (doc.data().goal) {\n                        existingGoals.push(doc.data().goal);\n                        existingColorMap[doc.data().goal] = doc.data().color;\n\n                        createdDateMap[doc.data().goal] = timeConverter(new Date(doc.data().created));\n                    }\n                });\n\n                existingGoals.sort((a, b) => a.created - b.created);\n\n                // Set the initially selectedGoal goal\n                const selectedGoal: [string] = [selectedGoals[0]];\n                setSelectedGoals(selectedGoal);\n                setSelected(existingGoals[0]);\n                setExistingGoals(existingGoals);\n                setColorMap(existingColorMap);\n                setGoalCreationDateMap(createdDateMap);\n\n                handleGoalSelected(existingGoals[0]);\n            });\n    }\n\n    /**\n     * Load a mapping of each goal to its list of completed dates.\n     */\n    function fetchCompletedDays() {\n        db.collection('completed')\n            .doc(auth.uid)\n            .collection('daysCompleted')\n            .get()\n            .then((snapshot) => {\n                const datesCompleted: any[] = [];\n\n                snapshot.docs.forEach((doc) => {\n                    const goal = doc.data().goal;\n                    const date = doc.data().date;\n                    const notes = doc.data().notes ? doc.data().notes : '';\n                    datesCompleted.push({ goal: goal, date: date, notes: notes });\n                });\n\n                const datesCompletedMap = {};\n                datesCompleted.forEach((data) => {\n                    if (data.goal in datesCompletedMap) {\n                        datesCompletedMap[data.goal].push({\n                            date: data.date,\n                            notes: data.notes\n                        });\n                    } else {\n                        datesCompletedMap[data.goal] = [{ date: data.date, notes: data.notes }];\n                    }\n                });\n                // setOldCompletedDays(JSON.parse(JSON.stringify(datesCompletedMap)));\n                setNewCompletedDays(datesCompletedMap);\n            });\n    }\n\n    /**\n     * Returns the new hex code to use.\n     * @param goal\n     */\n    function addToColorMap(goal: string): string {\n        let nextHexColor = null;\n        // Watch for null pointer exception\n        const colorsInUse = Object.values(colorMap);\n\n        console.log('add to color map:  ', colorsInUse, GOAL_COLORS);\n\n        for (let i = 0; i < GOAL_COLORS.length; i++) {\n            if (!colorsInUse.includes(GOAL_COLORS[i])) {\n                nextHexColor = GOAL_COLORS[i];\n                break;\n            }\n        }\n\n        const updatedMap = colorMap;\n        updatedMap[goal] = nextHexColor;\n        setColorMap(updatedMap);\n\n        return nextHexColor;\n    }\n\n    /**\n     * TODO -- DECIDE IF I SHOULD KEEP THIS. NOT REALLY NEEDED SINCE THE\n     * COLOR MAP WILL REMOVE THE DELETED GOAL'S COLOR ON REFRESH ANYWAY.\n     * @param goal\n     */\n    function removeFromColorMap(goal: string) {\n        const updatedMap = colorMap;\n\n        console.log('remove from color map: ');\n\n        Object.keys(updatedMap).forEach((key) => {\n            console.log(key, goal);\n            if (key == goal) {\n                delete updatedMap[goal];\n            }\n        });\n        setColorMap(updatedMap);\n    }\n\n    function selectAllGoals(goals) {\n        setSelectedGoals(goals);\n    }\n\n    /**\n     * Update the selected goals state, removing previously selected and adding newly selected goals.\n     * @param goal\n     * @param goalToRemove\n     */\n    function handleGoalSelected(goal: string, goalsToRemove?: string[]) {\n        console.log('handleGoalSelected', goal, goalsToRemove);\n\n        if (!(selectedGoals.includes(goal) && selectedGoals.length === 1)) {\n            let updateSelected = selectedGoals.includes(goal) ? [...selectedGoals] : [...selectedGoals, goal];\n\n            if (goalsToRemove) {\n                updateSelected = updateSelected.filter((g) => !goalsToRemove.includes(g) || g == goal);\n            }\n            setSelectedGoals(updateSelected);\n        }\n    }\n\n    /**\n     * Remove goal from selectedGoals state.\n     * @param goal\n     */\n    function handleGoalRemoved(goal: string) {\n        if (selectedGoals.includes(goal)) {\n            const filteredSelectedGoals = selectedGoals.filter((g) => {\n                return g != goal;\n            });\n\n            // removeDaysCompleted(auth.uid, goal);\n            // removeFromColorMap(goal);\n            setSelectedGoals([...filteredSelectedGoals]);\n        }\n    }\n\n    /**\n     * Add this day to this goal's list of completed days.\n     * @param date\n     * @param goal\n     */\n    function handleDayCompleted(date: string, goal: string) {\n        const completedDay: completedDay = {\n            date: date,\n            goal: goal,\n            notes: ''\n        };\n\n        // Make firestore call to save completed date.\n        addCompletedDay(auth.uid, completedDay);\n\n        const update: Object = JSON.parse(JSON.stringify(completedDays));\n        update[goal] = update[goal] ? [...update[goal], { date: date, notes: '' }] : [{ date: date, notes: '' }];\n\n        setNewCompletedDays(update);\n    }\n\n    /**\n     * Remove this day from this goal's list of completed days.\n     * @param date\n     * @param goal\n     */\n    function handleDayRemoved(date: string, goal: string) {\n        // Make firestore call to remove completed date.\n        removeCompletedDay(auth.uid, goal, date);\n\n        const update: Object = JSON.parse(JSON.stringify(completedDays));\n        update[goal] = update[goal].filter((curDate) => curDate.date !== date);\n        setNewCompletedDays(update);\n\n        setSelectedDayForNotes(null);\n    }\n\n    function updateSelected(goal: string) {\n        // batchUpdateCompletedDays(selectedGoal);\n        if (GoalsList) setSelected(goal);\n    }\n\n    function handleNoteSelected(date: string, goal: string) {\n        let notes = null;\n\n        if (completedDays && completedDays[goal]) {\n            const day = completedDays[goal].find((e) => {\n                return e.date === date;\n            });\n\n            if (day) {\n                notes = day.notes;\n            }\n        }\n\n        const selectedDay: completedDay = {\n            date: date,\n            goal: goal,\n            notes: notes\n        };\n\n        setSelectedDayForNotes(selectedDay);\n    }\n\n    async function handleNoteAdded(day: completedDay) {\n        // update newSelectedDays to update this selectedGoal day's notes property\n\n        const update: Object = JSON.parse(JSON.stringify(completedDays));\n\n        let dateIndex = update[day.goal].findIndex((obj) => obj.date == day.date);\n\n        console.log('handleNoteAdded: ', dateIndex, day.date, update[day.goal]);\n\n        if (dateIndex != null && dateIndex != undefined) {\n            update[day.goal][dateIndex].notes = day.notes;\n            setNewCompletedDays(update);\n            setSelectedDayForNotes(day);\n\n            await updateNotesForCompletedDay(auth.uid, day);\n        }\n    }\n\n    return (\n        <OverallContainer style={animatedProps}>\n            <HeaderBar\n                curMonth={curMonth}\n                updateCurMonth={updateCurMonth}\n                toggleAnalytics={() => setShowAnalytics(!showAnalytics)}\n            />\n            <InnerRowContainer>\n                <GoalsList\n                    existingGoals={existingGoals}\n                    colorMap={colorMap}\n                    updateSelected={updateSelected}\n                    addToColorMap={addToColorMap}\n                    removeFromColorMap={removeFromColorMap}\n                    handleGoalSelected={handleGoalSelected}\n                    handleGoalRemoved={handleGoalRemoved}\n                    selectedGoals={selectedGoals}\n                    creationDateMap={goalCreationDateMap}\n                    selectAllGoals={selectAllGoals}\n                />\n                <CalendarContainer>\n                    {showAnalytics ? (\n                        <Analytics goal={selectedGoal} completedDays={completedDays} />\n                    ) : (\n                        <Calendar\n                            key='calendar1'\n                            curMonth={curMonth}\n                            curGoal={selectedGoal}\n                            completedDays={completedDays}\n                            colorMap={colorMap}\n                            selectedGoals={selectedGoals}\n                            handleDayCompleted={handleDayCompleted}\n                            handleDayRemoved={handleDayRemoved}\n                            handleNoteSelected={handleNoteSelected}\n                            selectedDayForNotes={selectedDayForNotes}\n                        />\n                    )}\n                </CalendarContainer>\n\n                <Notes\n                    selectedDayForNotes={selectedDayForNotes}\n                    completedDays={completedDays}\n                    handleNoteAdded={handleNoteAdded}\n                    handleDayRemoved={handleDayRemoved}\n                />\n            </InnerRowContainer>\n        </OverallContainer>\n    );\n}\n\nconst OverallContainer = styled(animated.div)`\n    height: 100%;\n    background-color: #1c1e1f;\n`;\n\nconst CalendarContainer = styled.div`\n    -webkit-box-flex: 1;\n    -ms-flex: 1;\n\n    flex: 1;\n\n    padding-right: 19rem;\n    padding-left: 2rem;\n`;\n\nconst InnerRowContainer = styled.div`\n    display: -webkit-box;\n    display: -ms-flexbox;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n\n    -webkit-box-pack: justify;\n    -ms-flex-pack: justify;\n\n    display: flex;\n    justify-content: space-between;\n    height: 100%;\n`;\n","import React, { useEffect, Fragment } from 'react';\nimport { AppStateProvider } from './app-state';\nimport appReducer, { initialState } from './appReducer';\nimport LoggedOut from './LoggedOut';\nimport LoggedIn from './LoggedIn';\n\nimport useAuth from './useAuth';\n\nfunction App() {\n    const { authAttempted, auth } = useAuth();\n\n    useEffect(() => {\n        document.getElementById('root').style.overflow = 'hidden';\n    });\n\n    if (!authAttempted) return null;\n    return <Fragment>{auth ? <LoggedIn /> : <LoggedOut />}</Fragment>;\n}\n\nexport default () => (\n    <AppStateProvider reducer={appReducer} initialState={initialState}>\n        <App />\n    </AppStateProvider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./App.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}