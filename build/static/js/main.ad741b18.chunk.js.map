{"version":3,"sources":["app-state.js","fire.js","utils.ts","appReducer.js","LoggedOut.tsx","useAuth.js","Day.tsx","Calendar.tsx","DeleteGoalRow.tsx","GoalList.tsx","HeaderBar.tsx","constants/AppConstants.ts","Notes.tsx","Analytics.tsx","LoggedIn.tsx","App.js","serviceWorker.js","index.js"],"names":["Context","createContext","AppStateProvider","_ref","reducer","_ref$initialState","initialState","children","value","useReducer","react_default","a","createElement","Provider","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","_callee","uid","goal","daysCompletedCollection","regenerator_default","wrap","_context","prev","next","collection","doc","where","get","then","snapshot","docs","forEach","ref","delete","stop","_callee2","_context2","_callee3","color","_context3","abrupt","add","created","Date","_callee4","completedDay","_context4","console","log","date","notes","updateNotesForCompletedDay","_x10","_x11","_updateNotesForCompletedDay","apply","this","arguments","_callee5","_context5","id","update","_callee6","_context6","signup","_x15","_signup","_callee7","email","password","_ref2","user","_context7","auth","createUserWithEmailAndPassword","sent","concat","set","t0","logout","signOut","authAttempted","goals","selectedGoal","selectedDays","workout","appStateReducer","state","action","type","Object","objectSpread","LoggedOut","_useState","useState","_useState2","slicedToArray","focus","setFocus","_useState3","_useState4","isLogin","setIsLogin","_useState5","_useState6","error","setError","_useState7","_useState8","setLoading","loginEmailRef","useRef","loginPasswordRef","useOutsideAlerter","signupEmailRef","signupPasswordRef","handleLogin","asyncToGenerator","mark","event","preventDefault","current","signInWithEmailAndPassword","_x","handleSignup","_x2","handleClickOutside","contains","target","useEffect","document","addEventListener","removeEventListener","Login","Heading","CreateAccount","TextLink","onClick","LoginInput","placeholder","LoginButton","ErrorMessage","Signup","styled","u","_templateObject","div","_templateObject2","_templateObject3","h1","_templateObject4","_templateObject5","input","_templateObject6","props","button","_templateObject7","_templateObject8","useAuth","_useAppState","useContext","_useAppState2","_useAppState2$","dispatch","callback","onAuthStateChanged","Day","completedColor","curGoal","day","month","year","goalsCompletedOnDay","selectedGoals","colorMap","handleDayCompleted","handleDayRemoved","newCompletedDays","disabled","handleNoteSelected","myDate","setMyDate","isTodaysDate","setIsTodaysDate","doesDayHaveNote","setDayHasNote","find","e","length","toString","padStart","today","dd","String","getDate","mm","getMonth","yyyy","getFullYear","dayColors","oneGoal","multipleGoals","singleColor","react","MyDiv","style","display","flexDirection","alignItems","background","paddingLeft","paddingTop","className","stopPropagation","marginRight","marginTop","Text","x","push","getColorDisplay","Button","filter","Day_templateObject","Day_templateObject2","Day_templateObject3","Day_templateObject4","getWindowDimensions","_window","window","width","innerWidth","height","innerHeight","Calendar","curMonth","monthDays","01","02","03","04","05","06","07","08","09","10","11","12","DaysOfWeek","completedDays","myMonth","dayOfWeek","week","firstOfMonth","getDay","DayOfWeek","unusedDay","_loop","i","daysPerRow","parseInt","calendarYear","monthNum","getYear","Container","map","Calendar_templateObject","Calendar_templateObject2","DeleteGoalRow","index","undoDelete","confirmDelete","NewListRow","paddingRight","DeleteGoalRow_templateObject","GoalsList","existingGoals","updateSelected","addToColorMap","removeFromColorMap","handleGoalSelected","handleGoalRemoved","creationDateMap","newGoal","setNewGoal","goalsToDelete","setGoalsToDelete","setGoals","windowDimensions","setWindowDimensions","handleDelete","idx","_x3","_x4","_deleteGoal","deleteGoal","g","_removeDaysCompleted","removeDaysCompleted","nextGoalIdx","GoalContainer","AppTitle","InputContainer","GoalInput","onChange","AddGoalButton","includes","goalColor","_x5","_x6","_x7","_createGoal","createGoal","toConsumableArray","ListContainer","windowHeight","JSON","parse","stringify","goalToDelete","GoalList_NewListRow","selected","checked","getElementById","toDelete","element","ListRowLeft","Circle","ListRowInfo","Goal","StartDate","ListRowRight","Checkbox","defaultChecked","DeleteButton","GoalList_templateObject","GoalList_templateObject2","GoalList_templateObject3","GoalList_templateObject4","GoalList_templateObject5","GoalList_templateObject6","GoalList_templateObject7","GoalList_templateObject8","_templateObject9","span","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","label","_templateObject15","monthName","1","2","3","4","5","6","7","8","9","HeaderBar","updateCurMonth","toggleAnalytics","Header","HeaderBar_AppTitle","VerticalBar","MonthAndLogoutContainer","MonthContainer","CurMonth","MonthButton","HeaderBar_Button","borderColor","HeaderBar_templateObject","HeaderBar_templateObject2","HeaderBar_templateObject3","HeaderBar_templateObject4","HeaderBar_templateObject5","HeaderBar_templateObject6","HeaderBar_templateObject7","HeaderBar_templateObject8","GOAL_COLORS","Notes","selectedDayForNotes","handleNoteAdded","setGoal","setDate","note","setNote","showSuccess","setShowSuccess","_useState9","useSpring","opacity","from","_useState10","Notes_Container","NewContainer","SaveButton","dayToUpdate","saveDisplay","Notes_Header","paddingBottom","borderBottom","NotesInput","Remainder","Placeholder","Notes_templateObject","Notes_templateObject2","animated","Notes_templateObject3","success","h4","Notes_templateObject4","Notes_templateObject5","Notes_templateObject6","Notes_templateObject7","textarea","Notes_templateObject8","Notes_templateObject9","Analytics","objectDestructuringEmpty","Analytics_Container","Row","Analytics_templateObject","Analytics_templateObject2","LoggedIn","setSelectedGoals","setColorMap","setExistingGoals","setSelected","setNewCompletedDays","_useState11","_useState12","setCurMonth","_useState13","_useState14","goalCreationDateMap","setGoalCreationDateMap","_useState15","_useState16","setSelectedDayForNotes","_useState17","_useState18","showAnalytics","setShowAnalytics","animatedProps","_updateCurMonth","goalsToRemove","_handleNoteAdded","dateIndex","findIndex","obj","undefined","existingColorMap","createdDateMap","data","toISOString","substring","sort","b","datesCompleted","datesCompletedMap","web","LoggedIn_Container","CalendarAndGoalsContainer","nextHexColor","colorsInUse","values","updatedMap","keys","key","filteredSelectedGoals","CalendarContainer","_x8","_x9","_addCompletedDay","addCompletedDay","_x12","_x13","_x14","_removeCompletedDay","removeCompletedDay","curDate","LoggedIn_templateObject","LoggedIn_templateObject2","LoggedIn_templateObject3","App","_useAuth","overflow","App_Container","AppContainer","App_templateObject","App_templateObject2","Boolean","location","hostname","match","ReactDOM","render","appReducer","App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4JAEMA,EAAUC,0BAET,SAASC,EAATC,GAAoE,IAAxCC,EAAwCD,EAAxCC,QAAwCC,EAAAF,EAA/BG,oBAA+B,IAAAD,EAAhB,GAAgBA,EAAZE,EAAYJ,EAAZI,SACrDC,EAAQC,qBAAWL,EAASE,GAClC,OAAOI,EAAAC,EAAAC,cAACZ,EAAQa,SAAT,CAAkBL,MAAOA,EAAOD,SAAUA,sECOrDO,IAASC,cATM,CACbC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,kBAKd,IAAMC,EAAKR,IAASS,uDCXpB,SAAAC,EAAmCC,EAAKC,GAAxC,IAAAC,EAAA,OAAAC,EAAAjB,EAAAkB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACCL,EAA0BL,EACzBW,WAAW,aACXC,IAAIT,GACJQ,WAAW,iBAEGN,EAAwBQ,MAAM,OAAQ,KAAMT,GAElDU,MAAMC,KAAK,SAACC,GACrBA,EAASC,KAAKC,QAAQ,SAACN,GACnBA,EAAIO,IAAIC,aAVb,wBAAAZ,EAAAa,SAAAnB,wEAeA,SAAAoB,EAA0BnB,EAAKC,GAA/B,OAAAE,EAAAjB,EAAAkB,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OAEqBV,EACnBW,WADmB,SAEnBC,IAAIT,GACJQ,WAAW,aAEYE,MAAM,OAAQ,KAAMT,GACpBS,MAAM,MAAO,KAAMV,GAElCW,MAAMC,KAAK,SAACC,GACrBA,EAASC,KAAKC,QAAQ,SAACN,GACnBA,EAAIO,IAAIC,aAZb,wBAAAG,EAAAF,SAAAC,wEAkBA,SAAAE,EAA0BrB,EAAKC,EAAMqB,GAArC,OAAAnB,EAAAjB,EAAAkB,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAC,OAAA,SACI3B,EACFW,WADE,SAEFC,IAAIT,GACJQ,WAAW,aACXiB,IAAI,CACDzB,IAAKA,EACLC,KAAMA,EACNqB,MAAOA,EACPI,SAAU,IAAIC,QATnB,wBAAAJ,EAAAL,SAAAG,wEAaA,SAAAO,EAA+B5B,EAAK6B,GAApC,OAAA1B,EAAAjB,EAAAkB,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cACHwB,QAAQC,IAAI,kBAAmBhC,EAAK6B,GADjCC,EAAAN,OAAA,SAGI3B,EACFW,WAAW,aACXC,IAAIT,GACJQ,WAAW,iBACXiB,IAAI,CACDzB,IAAKA,EACLC,KAAM4B,EAAa5B,KACnBgC,KAAMJ,EAAaI,KACnBC,MAAOL,EAAaK,SAXzB,wBAAAJ,EAAAZ,SAAAU,6BAkBA,SAAeO,EAAtBC,EAAAC,GAAA,OAAAC,EAAAC,MAAAC,KAAAC,sDAAO,SAAAC,EAA0C1C,EAAK6B,GAA/C,OAAA1B,EAAAjB,EAAAkB,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,OACoBV,EAClBW,WAAW,aACXC,IAAIT,GACJQ,WAAW,iBAEUE,MAAM,OAAQ,KAAMmB,EAAa5B,MACjCS,MAAM,OAAQ,KAAMmB,EAAaI,MAE/CtB,MAAMC,KAAK,SAACC,GACpBA,EAASC,KAAKC,QAAQ,SAACN,GACnBZ,EAAGW,WAAW,aACTC,IAAIT,GACJQ,WAAW,iBACXC,IAAIA,EAAImC,IACRC,OAAO,CACJ7C,IAAKA,EACLC,KAAM4B,EAAa5B,KACnBgC,KAAMJ,EAAaI,KACnBC,MAAOL,EAAaK,YAnBjC,wBAAAS,EAAAzB,SAAAwB,wEAyBA,SAAAI,EAAkC9C,EAAKC,EAAMgC,GAA7C,OAAA9B,EAAAjB,EAAAkB,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,OAGsBV,EACpBW,WAAW,aACXC,IAAIT,GACJQ,WAAW,iBAEcE,MAAM,OAAQ,KAAMT,GACpBS,MAAM,OAAQ,KAAMuB,GAEpCtB,MAAMC,KAAK,SAACC,GACtBA,EAASC,KAAKC,QAAQ,SAACN,GACnBA,EAAIO,IAAIC,aAbb,wBAAA8B,EAAA7B,SAAA4B,6BAkBA,SAAeE,EAAtBC,GAAA,OAAAC,EAAAX,MAAAC,KAAAC,sDAAO,SAAAU,EAAAzE,GAAA,IAAA0E,EAAAC,EAAAC,EAAAC,EAAA,OAAApD,EAAAjB,EAAAkB,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cAAwB6C,EAAxB1E,EAAwB0E,MAAOC,EAA/B3E,EAA+B2E,SAA/BG,EAAAlD,KAAA,EAAAkD,EAAAjD,KAAA,EAEwBkD,iBAAOC,+BAA+BN,EAAOC,GAFrE,cAAAC,EAAAE,EAAAG,KAESJ,EAFTD,EAESC,KAFTC,EAAAjD,KAAA,EAIOV,EAAGY,IAAH,SAAAmD,OAAgBL,EAAKvD,MAAO6D,IAAI,CAClC7D,IAAKuD,EAAKvD,MALf,OAAAwD,EAAAjD,KAAA,uBAAAiD,EAAAlD,KAAA,GAAAkD,EAAAM,GAAAN,EAAA,SAAAA,EAAAM,GAAA,yBAAAN,EAAAtC,SAAAiC,EAAA,yCAgBA,SAASY,IACZ,OAAON,iBAAOO,UC9HlB,IAAMnF,EAAe,CACnBoF,eAAe,EACfR,KAAM,KACNF,KAAM,KACNW,MAAO,CAAC,UAAW,WAAY,eAC/BC,aAAc,EASdC,aAAc,CACZC,QAAS,KAmBEC,EAfS,SAACC,EAAOC,GAC9B,OAAQA,EAAOC,MACb,IAAK,cACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKH,EAAZ,CAAmBd,KAAMe,EAAOf,KAAMQ,eAAe,IAEvD,IAAK,YACH,OAAOS,OAAAC,EAAA,EAAAD,CAAA,GAAKH,EAAZ,CAAmBhB,KAAMiB,EAAOjB,OAGlC,QACE,OAAOgB,u4DCxBE,SAASK,IAAY,IAAAC,EACRC,mBAAS,MADDC,EAAAL,OAAAM,EAAA,EAAAN,CAAAG,EAAA,GAC3BI,EAD2BF,EAAA,GACpBG,EADoBH,EAAA,GAAAI,EAIJL,oBAAS,GAJLM,EAAAV,OAAAM,EAAA,EAAAN,CAAAS,EAAA,GAI3BE,EAJ2BD,EAAA,GAIlBE,EAJkBF,EAAA,GAAAG,EAKRT,mBAAS,MALDU,EAAAd,OAAAM,EAAA,EAAAN,CAAAa,EAAA,GAK3BE,EAL2BD,EAAA,GAKpBE,EALoBF,EAAA,GAAAG,EAMJb,oBAAS,GANLc,EAAAlB,OAAAM,EAAA,EAAAN,CAAAiB,EAAA,GAMlBE,GANkBD,EAAA,GAAAA,EAAA,IAS5BE,EAAgBC,iBAAO,MACvBC,EAAmBD,iBAAO,MAEhCE,EAAkBH,GAClBG,EAAkBD,GAGlB,IAAME,EAAiBH,iBAAO,MACxBI,EAAoBJ,iBAAO,MAEjCE,EAAkBC,GAClBD,EAAkBE,GAElB,IAAMC,EAAW,eAAA1H,EAAAgG,OAAA2B,EAAA,EAAA3B,CAAAvE,EAAAjB,EAAAoH,KAAG,SAAAvG,EAAMwG,GAAN,OAAApG,EAAAjB,EAAAkB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAClBgG,EAAMC,iBACNX,GAAW,GAFOxF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EF8FA6C,EE1FJ0C,EAAcW,QAAQ1H,MF0FXsE,EE1FkB2C,EAAiBS,QAAQ1H,MF2F7D0E,iBAAOiD,2BAA2BtD,EAAOC,GE/F9B,OAAAhD,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAyD,GAAAzD,EAAA,SAMhBwF,GAAW,GACXH,EAAQrF,EAAAyD,IAPQ,yBAAAzD,EAAAa,OF8Ff,IAAekC,EAAOC,GE9FPtD,EAAA,iBAAH,gBAAA4G,GAAA,OAAAjI,EAAA6D,MAAAC,KAAAC,YAAA,GAWXmE,EAAY,eAAAtD,EAAAoB,OAAA2B,EAAA,EAAA3B,CAAAvE,EAAAjB,EAAAoH,KAAG,SAAAnF,EAAMoF,GAAN,OAAApG,EAAAjB,EAAAkB,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cACnBgG,EAAMC,iBACNX,GAAW,GAFQzE,EAAAd,KAAA,EAAAc,EAAAb,KAAA,EAIXyC,EAAO,CACXI,MAAO8C,EAAeO,QAAQ1H,MAC9BsE,SAAU8C,EAAkBM,QAAQ1H,QANrB,OAAAqC,EAAAb,KAAA,gBAAAa,EAAAd,KAAA,EAAAc,EAAA0C,GAAA1C,EAAA,SASjByE,GAAW,GACXH,EAAQtE,EAAA0C,IAVS,yBAAA1C,EAAAF,SAAAC,EAAA,iBAAH,gBAAA0F,GAAA,OAAAvD,EAAAf,MAAAC,KAAAC,YAAA,GAclB,SAASwD,EAAkBjF,GACzB,SAAS8F,EAAmBP,GACtBvF,EAAIyF,UAAYzF,EAAIyF,QAAQM,SAASR,EAAMS,UAC7C9B,EAAS,IACTQ,EAAS,OAGbuB,oBAAU,WAGR,OADAC,SAASC,iBAAiB,YAAaL,GAChC,WAELI,SAASE,oBAAoB,YAAaN,MAKhD,OAAOzB,EACLpG,EAAAC,EAAAC,cAACkI,EAAD,KACEpI,EAAAC,EAAAC,cAACmI,EAAD,+BACArI,EAAAC,EAAAC,cAACoI,EAAD,YACO,IACLtI,EAAAC,EAAAC,cAACqI,EAAD,CAAUC,QAAS,kBAAMnC,GAAW,KAApC,mBAEFrG,EAAAC,EAAAC,cAACuI,EAAD,CACE1G,IAAK8E,EACLT,QAASA,EACTJ,MAAiB,UAAVA,EACP0C,YAAa,gBACbF,QAAS,WACPvC,EAAS,SACTQ,EAAS,SAGbzG,EAAAC,EAAAC,cAACuI,EAAD,CACE1G,IAAKgF,EACLX,QAASA,EACTZ,KAAK,WACLQ,MAAiB,aAAVA,EACP0C,YAAa,WACbF,QAAS,WACPvC,EAAS,YACTQ,EAAS,SAGbzG,EAAAC,EAAAC,cAACyI,EAAD,CAAaH,QAASrB,GAAtB,SACCX,EAAQxG,EAAAC,EAAAC,cAAC0I,EAAD,qCAA4D,MAGvE5I,EAAAC,EAAAC,cAAC2I,EAAD,KACE7I,EAAAC,EAAAC,cAACmI,EAAD,uBACArI,EAAAC,EAAAC,cAACoI,EAAD,kBACYtI,EAAAC,EAAAC,cAACqI,EAAD,CAAUC,QAAS,kBAAMnC,GAAW,KAApC,WAEZrG,EAAAC,EAAAC,cAACuI,EAAD,CACE1G,IAAKkF,EACLb,QAASA,EACTJ,MAAiB,UAAVA,EACP0C,YAAa,gBACbF,QAAS,WACPvC,EAAS,SACTQ,EAAS,SAGbzG,EAAAC,EAAAC,cAACuI,EAAD,CACE1G,IAAKmF,EACLd,QAASA,EACTZ,KAAK,WACLQ,MAAiB,aAAVA,EACP0C,YAAa,WACbF,QAAS,WACPvC,EAAS,YACTQ,EAAS,SAGbzG,EAAAC,EAAAC,cAACyI,EAAD,CAAaH,QAASb,GAAtB,kBACCnB,EAAQxG,EAAAC,EAAAC,cAAC0I,EAAD,qCAA4D,MAK3E,IAAML,EAAWO,IAAOC,EAAVC,KAMRH,EAASC,IAAOG,IAAVC,KAWNd,EAAQU,IAAOG,IAAVE,KAWLd,EAAUS,IAAOM,GAAVC,KAMPf,EAAgBQ,IAAOM,GAAVE,KAObb,EAAaK,IAAOS,MAAVC,IAQG,SAAAC,GAAK,OAAKA,EAAMrD,QAAU,SAAW,QAGlC,SAAAqD,GAAK,OAAKA,EAAMzD,MAAQ,UAAY,eACvC,SAAAyD,GAAK,OACpBA,EAAMzD,MAAQ,wBAA0B,oBAGtC2C,EAAcG,IAAOY,OAAVC,KAcXf,EAAeE,IAAOM,GAAVQ,aC1MH,SAASC,IAAU,IAAAC,ELMvBC,qBAAWzK,GKNY0K,EAAAvE,OAAAM,EAAA,EAAAN,CAAAqE,EAAA,GAAAG,EAAAD,EAAA,GACvBhF,EADuBiF,EACvBjF,cAAeR,EADQyF,EACRzF,KAAQ0F,EADAF,EAAA,GAmBhC,OAhBAhC,oBAAU,WACR,IAAKhD,EACH,OH0H6BmF,EG1HH,SAAA3F,GACxB,GAAIA,EAAM,KACAzD,EAAQyD,EAARzD,IACRmJ,EAAS,CACP1E,KAAM,cACNhB,KAAM,CAAEzD,cAGVmJ,EAAS,CAAE1E,KAAM,cAAehB,KAAM,aHmH5CA,iBAAO4F,mBAAmBD,GADvB,IAA4BA,GG9G9B,CAACnF,EAAekF,IAEZ,CAAElF,gBAAeR,qzBCpBX,SAAS6F,GAAT5K,GAcZ,IAbC6K,EAaD7K,EAbC6K,eACAC,EAYD9K,EAZC8K,QACAC,EAWD/K,EAXC+K,IACAC,EAUDhL,EAVCgL,MACAC,EASDjL,EATCiL,KACAC,EAQDlL,EARCkL,oBACAC,EAODnL,EAPCmL,cACAC,EAMDpL,EANCoL,SACAC,EAKDrL,EALCqL,mBACAC,EAIDtL,EAJCsL,iBACAC,EAGDvL,EAHCuL,iBACAC,EAEDxL,EAFCwL,SACAC,EACDzL,EADCyL,mBACDtF,EAC6BC,mBAAS,IADtCC,EAAAL,OAAAM,EAAA,EAAAN,CAAAG,EAAA,GACQuF,EADRrF,EAAA,GACgBsF,EADhBtF,EAAA,GAAAI,EAGyCL,oBAAS,GAHlDM,EAAAV,OAAAM,EAAA,EAAAN,CAAAS,EAAA,GAGQmF,EAHRlF,EAAA,GAGsBmF,EAHtBnF,EAAA,GAAAG,EAK0CT,oBAAS,GALnDU,EAAAd,OAAAM,EAAA,EAAAN,CAAAa,EAAA,GAKQiF,EALRhF,EAAA,GAKyBiF,EALzBjF,EAAA,GAOCyB,oBAAU,WACNlF,QAAQC,IAAI,mBAGhBiF,oBAAU,WACN,GAAIgD,GAAoBA,EAAiBT,GAAU,CAC/C,IAAMC,EAAMQ,EAAiBT,GAASkB,KAAK,SAACC,GACxC,OAAOA,EAAE1I,OAASmI,IAGlBX,GAAOA,EAAIvH,OAASuH,EAAIvH,MAAM0I,OAC9BH,GAAc,GAEdA,GAAc,KAGvB,CAACR,EAAkBT,IAEtBvC,oBAAU,WACN,GAAIyC,GAASD,GAAOE,EAAM,CACtB,IAAM1H,EACFyH,EAAMmB,WAAWC,SAAS,EAAG,KAAO,IAAMrB,EAAIoB,WAAWC,SAAS,EAAG,KAAO,IAAMnB,EAAKkB,WAC3FR,EAAUpI,GAEV,IAAI8I,EAAa,IAAIpJ,KACjBqJ,EAAKC,OAAOF,EAAMG,WAAWJ,SAAS,EAAG,KACzCK,EAAKF,OAAOF,EAAMK,WAAa,GAAGN,SAAS,EAAG,KAC9CO,EAAON,EAAMO,cAIbf,EADAtI,IAFJ8I,EAAQI,EAAK,IAAMH,EAAK,IAAMK,MAQnC,CAAC3B,EAAOD,EAAKE,IA2GhB,IAAM4B,EArGN,WACI,IAAMC,EAAmB5B,GAAsD,IAA/BA,EAAoBgB,OAE9Da,EAAyB7B,GAAuBA,EAAoBgB,OAAS,EAEnF,GAAIY,EAAS,CACT,IAAME,EAAc5B,EAASF,EAAoB,IACjD,OACI3K,EAAAC,EAAAC,cAACwM,EAAA,SAAD,KACI1M,EAAAC,EAAAC,cAACyM,GAAD,CACIC,MAAO,CACHC,QAAS,OACTC,cAAe,SACfC,WAAY,QACZC,WAAYP,EACZQ,YAAa,SACbC,WAAY,WAEhBlN,EAAAC,EAAAC,cAAA,KACIiN,UAAU,2BACVP,MAAO,CAAEvK,MAAO,SAChBmG,QAAS,SAACkD,GACNA,EAAE0B,kBACFlC,EAAmBC,EAAQZ,MAGlCgB,EACGvL,EAAAC,EAAAC,cAAA,KACIiN,UAAU,yBACVP,MAAO,CAAEvK,MAAO,QAASgL,YAAa,QAASC,UAAW,WAE9D,MAERtN,EAAAC,EAAAC,cAACyM,GAAD,CAAOC,MAAO,CAAEI,WAAYP,IACxBzM,EAAAC,EAAAC,cAACqN,GAAD,CAAMX,MAAO,CAAEvK,MAAO,UAAY4I,EAAW,IAAMT,EAAnD,KACCa,EACGrL,EAAAC,EAAAC,cAAA,KACIiN,UAAU,2BACVP,MAAO,CAAEvK,MAAO,QAASgL,YAAa,QAASC,UAAW,WAE9D,MAERtN,EAAAC,EAAAC,cAACyM,GAAD,CAAOC,MAAO,CAAEI,WAAYP,KAC5BzM,EAAAC,EAAAC,cAACyM,GAAD,CAAOC,MAAO,CAAEI,WAAYP,MAGjC,GAAID,EAAe,CACtB,IAAIK,EAAU,GAGd,IAAK,IAAIW,KAAK7C,EACA,MAAN6C,EACAX,EAAQY,KACJzN,EAAAC,EAAAC,cAACyM,GAAD,CAAOC,MAAO,CAAEI,WAAYnC,EAASF,EAAoB6C,IAAKnL,MAAO,UACjErC,EAAAC,EAAAC,cAACqN,GAAD,KAAOtC,EAAW,IAAMT,EAAxB,KACCa,EACGrL,EAAAC,EAAAC,cAAA,KACIiN,UAAU,2BACVP,MAAO,CAAEvK,MAAO,QAASgL,YAAa,QAASC,UAAW,WAE9D,OAIZT,EAAQY,KAAKzN,EAAAC,EAAAC,cAACyM,GAAD,CAAOC,MAAO,CAAEI,WAAYnC,EAASF,EAAoB6C,QAI9E,KAA0B,IAAnBX,EAAQlB,QACXkB,EAAQY,KAAKzN,EAAAC,EAAAC,cAACyM,GAAD,CAAOC,MAAO,CAAEI,WAAY,cAG7C,OACIhN,EAAAC,EAAAC,cAACwM,EAAA,SAAD,KACKG,EAAQ,GACRA,EAAQ,GACRA,EAAQ,GACRA,EAAQ,IAIjB,IAAMJ,EAAcxB,EAAW,UAAY,UAC3C,OACIjL,EAAAC,EAAAC,cAACwM,EAAA,SAAD,KACI1M,EAAAC,EAAAC,cAACyM,GAAD,CAAOC,MAAO,CAAEI,WAAYP,KAC5BzM,EAAAC,EAAAC,cAACyM,GAAD,CAAOC,MAAO,CAAEI,WAAYP,IACxBzM,EAAAC,EAAAC,cAACqN,GAAD,KAAOtC,EAAW,IAAMT,EAAxB,KACCa,EACGrL,EAAAC,EAAAC,cAAA,KACIiN,UAAU,2BACVP,MAAO,CAAEvK,MAAO,QAASgL,YAAa,QAASC,UAAW,WAE9D,MAERtN,EAAAC,EAAAC,cAACyM,GAAD,CAAOC,MAAO,CAAEI,WAAYP,KAC5BzM,EAAAC,EAAAC,cAACyM,GAAD,CAAOC,MAAO,CAAEI,WAAYP,MAM1BiB,GAElB,OACI1N,EAAAC,EAAAC,cAACyN,GAAD,CACIrD,eAAgBA,EAChBW,SAAUA,EACVzC,QAAS,WACL,IAAKyC,GAE4B,IAAzBL,EAAce,OAAc,CAC5B,IAAM3K,EAAO4J,EAAc,GAE3BM,EAAmBC,EAAQZ,GAGvBS,GACAA,EAAiBhK,IACjBgK,EAAiBhK,GAAM4M,OAAO,SAACpD,GAAD,OAASA,EAAIxH,OAASmI,IAAQQ,OAAS,EAGrEZ,EAAiBI,EAAQnK,GAEzB8J,EAAmBK,EAAQnK,MAK1CsL,GAKSxD,IAAOG,IAAV4E,KAAnB,IAMMN,GAAOzE,IAAOG,IAAV6E,KAKJnB,GAAQ7D,IAAOG,IAAV8E,KAWLJ,GAAS7E,IAAOY,OAAVsE,IAMmB,SAACvE,GAAD,OAAYA,EAAMwB,SAAW,cAAgB,QAG9D,SAACxB,GAAD,OAAYA,EAAMwB,SAAW,qBAAuB,qBAKhD,SAACxB,GAAD,OAAYA,EAAMwB,SAAW,mBAAqB,g7BCrO7D,SAASgD,KAAsB,IAAAC,EACiBC,OACnD,MAAO,CACHC,MAH8BF,EAC1BG,WAGJC,OAJ8BJ,EACPK,aAUhB,SAASC,GAAT/O,GASZ,IARCgP,EAQDhP,EARCgP,SACAlE,EAOD9K,EAPC8K,QACAS,EAMDvL,EANCuL,iBACAH,EAKDpL,EALCoL,SACAD,EAIDnL,EAJCmL,cACAE,EAGDrL,EAHCqL,mBACAC,EAEDtL,EAFCsL,iBACAG,EACDzL,EADCyL,mBACDtF,EACiDC,mBAASoI,MAD1DnI,EAAAL,OAAAM,EAAA,EAAAN,CAAAG,EAAA,GAGO8I,GAHP5I,EAAA,GAAAA,EAAA,GAGmB,CACd6I,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,GAAM,GACNC,GAAM,GACNC,GAAM,KAGJC,EAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAE9D,SAASpD,EAAS1B,EAAO+E,GACrB,IAAMC,EAAU,CAAC,IACbC,EAAY,EACZC,EAAO,GAMPC,EAAoBnF,EAAMmB,WAAWC,SAAS,EAAG,KAAO,WAC5D+D,EAAe,IAAIlN,KAAKkN,GAAcC,SAGtC,IAAK,IAAIrF,EAAM,EAAGA,EAAM,EAAGA,IACvBmF,EAAKlC,KAAKzN,EAAAC,EAAAC,cAAC4P,GAAD,KAAYP,EAAW/E,KAGrCiF,EAAQhC,KAAKkC,GACbA,EAAO,GAGP,IAAK,IAAII,EAAY,EAAGA,EAAYH,EAAcG,IAC9CJ,EAAKlC,KACDzN,EAAAC,EAAAC,cAACmK,GAAD,CACIC,eAAgB,KAChBE,IAAK,KACLC,MAAO,KACPC,KAAM,KACNC,oBAAqB,KACrBC,cAAe,KACfI,iBAAkB,KAClBH,SAAU,KACVC,mBAAoB,KACpBC,iBAAkB,KAClBR,QAASA,EACTU,UAAU,EACVC,mBAAoBA,KAKhCwE,EAAYE,EAAe,EAG3B,IA5CoC,IAAAI,EAAA,SA4C3BC,GACL,IAAMjN,EACFyH,EAAMmB,WAAWC,SAAS,EAAG,KAC7B,IACAoE,EACKrE,WACAA,WACAC,SAAS,EAAG,KACjB,QAGcqE,IAAdR,IACAD,EAAQhC,KAAKkC,GACbD,EAAY,EACZC,EAAO,IAGX,IAAIhF,EAAsB,GAC1BC,EAAc9I,QAAQ,SAACoD,GAEfsK,EAActK,IACdsK,EAActK,GAAc0I,OAAO,SAACpD,GAAD,OAASA,EAAIxH,OAASA,IAAM2I,OAAS,GAExEhB,EAAoB8C,KAAKvI,KAIjCyK,EAAKlC,KACDzN,EAAAC,EAAAC,cAACmK,GAAD,CACIC,eAAgBO,EAAWA,EAASN,GAAW,QAC/CA,QAASA,EACTC,IAAKyF,EACLxF,MAAO0F,SAAS1F,GAChBC,KAAM,KACNC,oBAAqBA,EACrBC,cAAeA,EACfI,iBAAkBA,EAClBH,SAAUA,EACVC,mBAAoBA,EACpBC,iBAAkBA,EAClBE,UAAU,EACVC,mBAAoBA,KAG5BwE,GAAa,GA5CRO,EAAI,EAAGA,GAAKvB,EAAUjE,GAAQwF,IAAKD,EAAnCC,GAgDT,IAAK,IAAIF,EAAY,EAAGA,EAAY,EAAIL,EAAWK,IAC/CJ,EAAKlC,KACDzN,EAAAC,EAAAC,cAACmK,GAAD,CACIC,eAAgB,KAChBE,IAAK,KACLC,MAAO,KACPC,KAAM,KACNC,oBAAqB,KACrBC,cAAe,KACfI,iBAAkB,KAClBH,SAAU,KACVC,mBAAoB,KACpBC,iBAAkB,KAClBR,QAASA,EACTU,UAAU,EACVC,mBAAoBA,KAShC,GAJAuE,EAAQhC,KAAKkC,GACbA,EAAO,GAGgB,IAAnBF,EAAQ9D,OAAc,CACtB,IAAK,IAAIoE,EAAY,EAAGA,EAAY,EAAGA,IACnCJ,EAAKlC,KACDzN,EAAAC,EAAAC,cAACmK,GAAD,CACIC,eAAgB,KAChBE,IAAK,KACLC,MAAO,KACPC,KAAM,KACNC,oBAAqB,KACrBC,cAAe,KACfI,iBAAkB,KAClBH,SAAU,KACVC,mBAAoB,KACpBC,iBAAkB,KAClBR,QAASA,EACTU,UAAU,EACVC,mBAAoBA,KAKhCuE,EAAQhC,KAAKkC,GAGjB,OAAOF,EAeX,IAAMW,EAZN,SAAiBZ,GAEb,IADA,IAAMY,EAAe,GACZH,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC1B,IAAII,EAAWJ,EAAErE,WAGXnB,EAAQ0B,EAFdkE,EAA+B,IAApBA,EAAS1E,OAAe,IAAM0E,EAAWA,EAEnBb,GACjCY,EAAaH,GAAKxF,EAEtB,OAAO2F,EAGUE,CAAQtF,GAE7B,OACIhL,EAAAC,EAAAC,cAACqQ,GAAD,KACKH,EAAa3B,GACR2B,EAAa3B,GAAU+B,IAAI,SAACb,GACxB,OAAO3P,EAAAC,EAAAC,cAAA,OAAKyD,GAAIgM,GAAOA,KAE3B,MAKlB,IAAMY,GAAYzH,IAAOG,IAAVwH,MA2BTX,GAAYhH,IAAOG,IAAVyH,yiBC9OA,SAASC,GAATlR,GAAmE,IAA1CuB,EAA0CvB,EAA1CuB,KAAM4P,EAAoCnR,EAApCmR,MAAOC,EAA6BpR,EAA7BoR,WAAYC,EAAiBrR,EAAjBqR,cAC7D,OACI9Q,EAAAC,EAAAC,cAAC6Q,GAAD,CAAYvI,QAAS,kBAAMqI,IACvB7Q,EAAAC,EAAAC,cAAA,KAAG0M,MAAO,CAAEK,YAAa,SAAzB,gBAEAjN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KACIiN,UAAU,6BACVP,MAAO,CAAEK,YAAa,QACtBzE,QAAS,kBAAMqI,OAEnB7Q,EAAAC,EAAAC,cAAA,KACIiN,UAAU,4BACVP,MAAO,CAAEK,YAAa,OAAQ+D,aAAc,QAC5CxI,QAAS,kBAAMsI,EAAc9P,EAAM4P,QAOvD,IAAMG,GAAajI,IAAOG,IAAVgI,mmJCdD,SAASC,GAATzR,GAUZ,IATC0R,EASD1R,EATC0R,cACAtG,EAQDpL,EARCoL,SACAuG,EAOD3R,EAPC2R,eACAC,EAMD5R,EANC4R,cACAC,EAKD7R,EALC6R,mBACAC,EAID9R,EAJC8R,mBACAC,EAGD/R,EAHC+R,kBACA5G,EAEDnL,EAFCmL,cACA6G,EACDhS,EADCgS,gBAEQjN,EAASqF,IAATrF,KADToB,EAI+BC,mBAAS,IAJxCC,EAAAL,OAAAM,EAAA,EAAAN,CAAAG,EAAA,GAIQ8L,EAJR5L,EAAA,GAIiB6L,EAJjB7L,EAAA,GAAAI,EAO2CL,mBAAS,IAPpDM,EAAAV,OAAAM,EAAA,EAAAN,CAAAS,EAAA,GAOQ0L,EAPRzL,EAAA,GAOuB0L,EAPvB1L,EAAA,GAAAG,EAU2BT,mBAASsL,GAVpC5K,EAAAd,OAAAM,EAAA,EAAAN,CAAAa,EAAA,GAUQrB,EAVRsB,EAAA,GAUeuL,EAVfvL,EAAA,GAAAG,EAYiDb,mBAASoI,MAZ1DtH,EAAAlB,OAAAM,EAAA,EAAAN,CAAAiB,EAAA,GAYQqL,EAZRpL,EAAA,GAY0BqL,EAZ1BrL,EAAA,GAwBC,SAASsL,EAAajR,EAAckR,GAUhC,GPnCD,SAAPC,EAAAC,GAAAC,EAAA/O,MAAAC,KAAAC,WO0BQ8O,CAAW9N,EAAKzD,IAAKC,GACrB8Q,EAAS7M,EAAM2I,OAAO,SAAC2E,GAAD,OAAOA,IAAMvR,KP1CpC,SAAP0G,EAAAE,GAAA4K,EAAAlP,MAAAC,KAAAC,WO2CQiP,CAAoBjO,EAAKzD,IAAKC,GAE9BsQ,EAAmBtQ,GAEnBwQ,EAAkBxQ,GAGdiE,EAAM0G,OAAS,EAAI,EAAG,CACtB,IAAM+G,EAAsB,IAARR,EAAYA,EAAM,EAAIA,EAAM,EAChDd,EAAenM,EAAMyN,IACrBnB,EAAmBtM,EAAMyN,GAAczN,EAAMiN,KAWrD,OAlCAlK,oBAAU,WACNgK,EAAoB/D,OACrB,IAEHjG,oBAAU,WACN8J,EAASX,IACV,CAACA,IA6BAnR,EAAAC,EAAAC,cAACyS,GAAD,KACI3S,EAAAC,EAAAC,cAAC0S,GAAD,MAEA5S,EAAAC,EAAAC,cAAC2S,GAAD,KACI7S,EAAAC,EAAAC,cAAC4S,GAAD,CACItN,KAAK,OACLkD,YAAY,wBACZqK,SAAU,SAACrH,GAAD,OAAOiG,EAAWjG,EAAE3D,OAAOjI,UAEzCE,EAAAC,EAAAC,cAAC8S,GAAD,CACIxK,QAAS,WACL,GAAIkJ,EAAQ/F,OAAS,IAAM1G,EAAMgO,SAASvB,GAAU,CAChD,IAAMwB,EAAY7B,EAAcK,IP5CrD,SAAPyB,EAAAC,EAAAC,GAAAC,EAAAhQ,MAAAC,KAAAC,WO6C4B+P,CAAW/O,EAAKzD,IAAK2Q,EAASwB,GAE1BjO,EAAMgO,SAASvB,IACfN,EAAeM,GAGnBC,EAAW,IACXG,EAAQ,GAAAnN,OAAAc,OAAA+N,EAAA,EAAA/N,CAAKR,GAAL,CAAYyM,QAXhC,QAiBJ1R,EAAAC,EAAAC,cAACuT,GAAD,CAAeC,aAAc3B,EAAiBzD,QACzCrJ,EACKA,EAAMuL,IAAI,SAACxP,EAAMkR,GACb,OACIlS,EAAAC,EAAAC,cAACwM,EAAA,SAAD,KACKkF,EAAcqB,SAASjS,GACpBhB,EAAAC,EAAAC,cAACyQ,GAAD,CACI3P,KAAMA,EACN4P,MAAOsB,EACPrB,WAAY,kBA3ClD,SAAoB7P,GAChB,IAAI4C,EAAS+P,KAAKC,MAAMD,KAAKE,UAAUjC,IACvChO,EAASA,EAAOgK,OAAO,SAAC2E,GAAD,OAAOA,GAAKvR,IAEnC6Q,EAAiBjO,GAuCmCiN,CAAW7P,IAC7B8P,cAAe,SAACgD,EAAclD,GAAf,OAAyBqB,EAAa6B,EAAclD,MAGvE5Q,EAAAC,EAAAC,cAAC6T,GAAD,CACIC,SAAUhT,IAAS4J,EAAc,GACjCqJ,QACKhM,SAASiM,eAAelT,IACxBiH,SAASiM,eAAelT,GAA2BiT,QAExDpJ,SAAUA,EACV7J,KAAMA,EACNmT,SAAUvC,EAAcqB,SAASjS,GACjCwH,QAAS,WACDvD,EAAMgO,SAASjS,KACX4J,GACAA,EAAc9I,QAAQ,SAACsS,GAClBnM,SAASiM,eACNE,GACmBH,SAAU,IAKzC1C,EAAmBvQ,EAAM4J,GACzBwG,EAAepQ,GAEdiH,SAASiM,eAAelT,GAA2BiT,SAAU,KAGtEjU,EAAAC,EAAAC,cAACmU,GAAD,KACIrU,EAAAC,EAAAC,cAACoU,GAAD,CACIjS,MAAOwI,GAAYA,EAAS7J,GAAQ6J,EAAS7J,GAAQ,MACrDmM,UAAU,QAEdnN,EAAAC,EAAAC,cAACqU,GAAD,KACIvU,EAAAC,EAAAC,cAACsU,GAAD,KAAOxT,GACPhB,EAAAC,EAAAC,cAACuU,GAAD,KAAYhD,EAAgBzQ,MAGpChB,EAAAC,EAAAC,cAACwU,GAAD,KACI1U,EAAAC,EAAAC,cAACyU,GAAD,KACI3U,EAAAC,EAAAC,cAAA,SACIyD,GAAI3C,EACJwE,KAAK,WACLoP,eAAwB,IAAR1C,EAChB1J,QAAS,SAACkD,GACNA,EAAE0B,kBACanF,SAASiM,eACpBlT,GAGSiT,QACT1C,EAAmBvQ,GACa,IAAzB4J,EAAce,OACrBD,EAAEnE,iBAEFiK,EAAkBxQ,OAItB,IACZhB,EAAAC,EAAAC,cAAC2U,GAAD,CACIrM,QAAS,SAACkD,GACNA,EAAE0B,kBACFyE,EAAgB,GAAAlN,OAAAc,OAAA+N,EAAA,EAAA/N,CAAKmM,GAAL,CAAoB5Q,KAGpC6Q,EAAgB,GAAAlN,OAAAc,OAAA+N,EAAA,EAAA/N,CAAKmM,GAAL,CAAoB5Q,OAEvC,IACDhB,EAAAC,EAAAC,cAAA,KACIiN,UAAU,4BACVP,MAAO,CAAEoE,aAAc,iBASvD,OAMtB,IAAM2B,GAAgB7J,IAAOG,IAAV6L,MAiCblC,GAAW9J,IAAOG,IAAV8L,MASRlC,GAAiB/J,IAAOG,IAAV+L,MAadvB,GAAgB3K,IAAOG,IAAVgM,KAiBL,SAACxL,GAAD,OAAYA,EAAMiK,aAAN,GAAA/O,OAAwB8E,EAAMiK,aAAe,IAA7C,MAAuD,UAM3EV,GAAgBlK,IAAOY,OAAVwL,MAcbpC,GAAYhK,IAAOS,MAAV4L,MAYTN,GAAe/L,IAAOY,OAAV0L,MAaZrE,GAAajI,IAAOG,IAAVoM,KAcM,SAAC5L,GAAD,OAAYA,EAAM0K,SAAW,MAAQ,WAC/C,SAAC1K,GAAD,OAAYA,EAAMuK,SAAW,kBAAoB,oBAOlC,SAACvK,GAAD,OAAYA,EAAMoB,UAAYpB,EAAMzI,KAAOyI,EAAMoB,SAASpB,EAAMzI,MAAQ,WACrF,SAACyI,GAAD,OAAYA,EAAMuK,SAAW,kBAAoB,oBAIzDO,GAAczL,IAAOG,IAAVqM,MAOXhB,GAASxL,IAAOyM,KAAVC,KAGY,SAAC/L,GAAD,OAAWA,EAAMpH,QAKnCmS,GAAO1L,IAAOG,IAAVwM,MAWJhB,GAAY3L,IAAOG,IAAVyM,MAUTrB,GAAcvL,IAAOG,IAAV0M,MAMXjB,GAAe5L,IAAOG,IAAV2M,MAMZjB,GAAW7L,IAAO+M,MAAVC,k4EC5Xd,IAAMC,GAAY,CACdC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,OACHpH,GAAI,MACJC,GAAI,MACJC,GAAI,OAGO,SAASmH,GAAThX,GAAkE,IAA7CgP,EAA6ChP,EAA7CgP,SAAUiI,EAAmCjX,EAAnCiX,eAAgBC,EAAmBlX,EAAnBkX,gBAC1D,OACI3W,EAAAC,EAAAC,cAAC0W,GAAD,KACI5W,EAAAC,EAAAC,cAAC2W,GAAD,qBACA7W,EAAAC,EAAAC,cAAC4W,GAAD,MACA9W,EAAAC,EAAAC,cAAC6W,GAAD,KACI/W,EAAAC,EAAAC,cAAC8W,GAAD,KACIhX,EAAAC,EAAAC,cAAC+W,GAAD,KAAWlB,GAAUtH,GAAY,SACjCzO,EAAAC,EAAAC,cAACgX,GAAD,CACI1O,QAAS,WACW,GAAZiG,GACAiI,EAAejI,EAAW,KAHtC,QAQAzO,EAAAC,EAAAC,cAACgX,GAAD,CACI1O,QAAS,WACW,IAAZiG,GACAiI,EAAejI,EAAW,KAHtC,SASJzO,EAAAC,EAAAC,cAACiX,GAAD,CAAQ3O,QAASmO,EAAiB/J,MAAO,CAAEwK,YAAa,UAAW/U,MAAO,YAA1E,aAGArC,EAAAC,EAAAC,cAACiX,GAAD,CAAQ3O,QAAS1D,GAAjB,YAMhB,IAAM8N,GAAW9J,IAAOM,GAAViO,MAQRL,GAAiBlO,IAAOG,IAAVqO,MAOdV,GAAS9N,IAAOG,IAAVsO,MAmBNR,GAA0BjO,IAAOG,IAAVuO,MAQvBV,GAAchO,IAAOG,IAAVwO,MAMXR,GAAWnO,IAAOG,IAAVyO,MAWRR,GAAcpO,IAAOY,OAAViO,MAqBXhK,GAAS7E,IAAOY,OAAVkO,MCnICC,GAAc,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,ixECK/E,SAASC,GAATrY,GAA2E,IAA1DsY,EAA0DtY,EAA1DsY,oBAAqB/M,EAAqCvL,EAArCuL,iBAAkBgN,EAAmBvY,EAAnBuY,gBAAmBpS,EAC9DC,mBAAS,MADqDC,EAAAL,OAAAM,EAAA,EAAAN,CAAAG,EAAA,GAC/E5E,EAD+E8E,EAAA,GACzEmS,EADyEnS,EAAA,GAAAI,EAG9DL,mBAAS,MAHqDM,EAAAV,OAAAM,EAAA,EAAAN,CAAAS,EAAA,GAG/ElD,EAH+EmD,EAAA,GAGzE+R,EAHyE/R,EAAA,GAAAG,EAK9DT,mBAAS,IALqDU,EAAAd,OAAAM,EAAA,EAAAN,CAAAa,EAAA,GAK/E6R,EAL+E5R,EAAA,GAKzE6R,EALyE7R,EAAA,GAAAG,EAOhDb,mBAAS,GAPuCc,EAAAlB,OAAAM,EAAA,EAAAN,CAAAiB,EAAA,GAO/E2R,EAP+E1R,EAAA,GAOlE2R,EAPkE3R,EAAA,GAAA4R,GASxEC,aAAU,CAAEC,QAAS,EAAGC,KAAM,CAAED,QAASJ,KAEPxS,mBAASoI,OAX6B0K,EAAAlT,OAAAM,EAAA,EAAAN,CAAA8S,EAAA,GAW/ExG,EAX+E4G,EAAA,GAW7D3G,EAX6D2G,EAAA,GAyBtF,OAZA3Q,oBAAU,WACNgK,EAAoB/D,OACrB,IAEHjG,oBAAU,WACF+P,IACAE,EAAQF,EAAoB/W,MAC5BkX,EAAQH,EAAoB/U,MAC5BoV,EAAQL,EAAoB9U,SAEjC,CAAC8U,EAAqB/M,IAGrBhL,EAAAC,EAAAC,cAACwM,EAAA,SAAD,KACKqL,EACG/X,EAAAC,EAAAC,cAAC0Y,GAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAD,KACI7Y,EAAAC,EAAAC,cAACwM,EAAA,SAAD,KACI1M,EAAAC,EAAAC,cAAC4Y,GAAD,CACItQ,QAAO/C,OAAA2B,EAAA,EAAA3B,CAAAvE,EAAAjB,EAAAoH,KAAE,SAAAvG,IAAA,IAAAiY,EAAAC,EAAA,OAAA9X,EAAAjB,EAAAkB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YACDN,GAAQgC,GAAQmV,EAAKxM,QADpB,CAAAvK,EAAAE,KAAA,eAEKyX,EAA4B,CAC9B/X,KAAMA,EACNgC,KAAMA,EACNC,MAAOkV,GALV/W,EAAAE,KAAA,EAQK0W,EAAgBe,GARrB,cAAA3X,EAAAE,KAAA,EASKgX,EAA+B,IAAhBD,EAAoB,EAAI,GAT5C,QAWGW,EAAc/Q,SAASiM,eAAe,UAE9BtH,MAAM6L,QAAU,IAC5BO,EAAYpM,MAAM6L,QAAU,IAd3B,wBAAArX,EAAAa,SAAAnB,OADb,aAoBAd,EAAAC,EAAAC,cAAC+Y,GAAD,CAAQrM,MAAO,CAAEM,WAAY,UAA7B,aACAlN,EAAAC,EAAAC,cAAC+Y,GAAD,KAASjY,GACThB,EAAAC,EAAAC,cAAC+Y,GAAD,CAAQrM,MAAO,CAAEsM,cAAe,OAAQC,aAAc,oBAAsBnW,GAE5EhD,EAAAC,EAAAC,cAAA,OAAKiN,UAAU,SACXnN,EAAAC,EAAAC,cAAA,QAAMiN,UAAU,YAAhB,QADJ,yBAKAnN,EAAAC,EAAAC,cAACkZ,GAAD,CACI1Q,YAAayP,EAAO,KAAH,iBAAAxT,OAA2B3D,EAA3B,QAAA2D,OAAsC3B,GACvD0Q,aAAc3B,EAAiBzD,OAC/ByE,SAAU,SAACrH,GAAD,OAAO0M,EAAQ1M,EAAE3D,OAAOjI,QAClCA,MAAOqY,IAEXnY,EAAAC,EAAAC,cAACmZ,GAAD,SAKZrZ,EAAAC,EAAAC,cAAC0Y,GAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAD,KACI7Y,EAAAC,EAAAC,cAACoZ,GAAD,CAAa5F,aAAc3B,EAAiBzD,QAA5C,yDAUPxF,IAAOG,IAAVsQ,MAAd,IASMD,GAAcxQ,IAAOG,IAAVuQ,KAKH,SAAC/P,GAAD,OAAYA,EAAMiK,aAAN,GAAA/O,OAAwB8E,EAAMiK,aAA9B,MAAiD,UAerEkD,IAPiB9N,YAAO2Q,KAASxQ,IAAhBH,CAAH4Q,KAIL,SAACjQ,GAAD,OAAWA,EAAMkQ,UAGjB7Q,IAAO8Q,GAAVC,OAMNf,GAAahQ,IAAOY,OAAVoQ,MAaVjB,GAAe/P,IAAOG,IAAV8Q,MAeZxJ,GAAYzH,IAAOG,IAAV+Q,MAUTZ,GAAatQ,IAAOmR,SAAVC,KAKF,SAACzQ,GAAD,OAAYA,EAAMiK,aAAN,GAAA/O,OAAwB8E,EAAMiK,aAAe,IAA7C,MAAuD,UAQ3E2F,GAAYvQ,IAAOG,IAAVkR,wuBC3KA,SAASC,GAAT3a,GACX,OADmCgG,OAAA4U,GAAA,EAAA5U,CAAAhG,GAE/BO,EAAAC,EAAAC,cAACoa,GAAD,KACIta,EAAAC,EAAAC,cAACqa,GAAD,cACAva,EAAAC,EAAAC,cAACqa,GAAD,eACAva,EAAAC,EAAAC,cAACqa,GAAD,gBAKZ,IAAMA,GAAMzR,IAAOG,IAAVuR,MAeHjK,GAAYzH,IAAOG,IAAVwR,m9BCbA,SAASC,KAAW,IACvBlW,EAASqF,IAATrF,KADuBoB,EAGWC,mBAAS,IAHpBC,EAAAL,OAAAM,EAAA,EAAAN,CAAAG,EAAA,GAGxBgF,EAHwB9E,EAAA,GAGT6U,EAHS7U,EAAA,GAAAI,EAMCL,mBAAS,IANVM,EAAAV,OAAAM,EAAA,EAAAN,CAAAS,EAAA,GAMxB2E,EANwB1E,EAAA,GAMdyU,EANczU,EAAA,GAAAG,EASWT,mBAAS,IATpBU,EAAAd,OAAAM,EAAA,EAAAN,CAAAa,EAAA,GASxB6K,EATwB5K,EAAA,GASTsU,EATStU,EAAA,GAAAG,EAYCb,mBAAS,IAZVc,EAAAlB,OAAAM,EAAA,EAAAN,CAAAiB,EAAA,GAYxBsN,EAZwBrN,EAAA,GAYdmU,EAZcnU,EAAA,GAAA4R,EAoBiB1S,mBAAS,IApB1B8S,EAAAlT,OAAAM,EAAA,EAAAN,CAAA8S,EAAA,GAoBxBvN,EApBwB2N,EAAA,GAoBNoC,EApBMpC,EAAA,GAAAqC,EAsBCnV,mBAAS,MAtBVoV,EAAAxV,OAAAM,EAAA,EAAAN,CAAAuV,EAAA,GAsBxBvM,EAtBwBwM,EAAA,GAsBdC,EAtBcD,EAAA,GAAAE,EAwBuBtV,mBAAS,IAxBhCuV,EAAA3V,OAAAM,EAAA,EAAAN,CAAA0V,EAAA,GAwBxBE,EAxBwBD,EAAA,GAwBHE,EAxBGF,EAAA,GAAAG,EA2BuB1V,mBAAS,MA3BhC2V,EAAA/V,OAAAM,EAAA,EAAAN,CAAA8V,EAAA,GA2BxBxD,EA3BwByD,EAAA,GA2BHC,EA3BGD,EAAA,GAAAE,EA8BW7V,oBAAS,GA9BpB8V,EAAAlW,OAAAM,EAAA,EAAAN,CAAAiW,EAAA,GA8BxBE,EA9BwBD,EAAA,GA8BTE,EA9BSF,EAAA,GAgCzBG,EAAgBtD,aAAU,CAAEC,QAAS,EAAGC,KAAM,CAAED,QAAS,KAK/DzQ,oBAAU,WACNlF,QAAQC,IAAI,MACZD,QAAQC,IAAI,mEACZD,QAAQC,IAAI,kBAAmB6H,GAC/B9H,QAAQC,IAAI,sBAAuBiI,GACnClI,QAAQC,IAAI,wBAAyBgV,GACrCjV,QAAQC,IAAI,aAAc8H,GAC1B/H,QAAQC,IAAI,QA5Ce,SAAAgZ,IAAA,OAAAA,EAAAtW,OAAA2B,EAAA,EAAA3B,CAAAvE,EAAAjB,EAAAoH,KA2E/B,SAAAvG,EAA8B2J,GAA9B,OAAAvJ,EAAAjB,EAAAkB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACI4Z,EAAYzQ,GADhB,wBAAArJ,EAAAa,SAAAnB,OA3E+BwC,MAAAC,KAAAC,WA4M/B,SAAS+N,EAAmBvQ,EAAcgb,GAGtC,GAFAlZ,QAAQC,IAAI,qBAAsB/B,EAAMgb,IAElCpR,EAAcqI,SAASjS,IAAkC,IAAzB4J,EAAce,OAAe,CAC/D,IAAIyF,EAAiBxG,EAAcqI,SAASjS,GAAvByE,OAAA+N,EAAA,EAAA/N,CAAmCmF,GAAnC,GAAAjG,OAAAc,OAAA+N,EAAA,EAAA/N,CAAwDmF,GAAxD,CAAuE5J,IAExFgb,IACA5K,EAAiBA,EAAexD,OAAO,SAAC2E,GAAD,OAAQyJ,EAAc/I,SAASV,IAAMA,GAAKvR,KAErF2Z,EAAiBvJ,IArNM,SAAA6K,IAAA,OAAAA,EAAAxW,OAAA2B,EAAA,EAAA3B,CAAAvE,EAAAjB,EAAAoH,KAuS/B,SAAAnF,EAA+BsI,GAA/B,IAAA5G,EAAAsY,EAAA,OAAAhb,EAAAjB,EAAAkB,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,UAGUsC,EAAiB+P,KAAKC,MAAMD,KAAKE,UAAU7I,IAE7CkR,EAAYtY,EAAO4G,EAAIxJ,MAAMmb,UAAU,SAACC,GAAD,OAASA,EAAIpZ,MAAQwH,EAAIxH,OAEpEF,QAAQC,IAAI,oBAAqBmZ,EAAW1R,EAAIxH,KAAMY,EAAO4G,EAAIxJ,OAEhD,MAAbkb,QAAkCG,GAAbH,EAT7B,CAAA/Z,EAAAb,KAAA,eAUQsC,EAAO4G,EAAIxJ,MAAMkb,GAAWjZ,MAAQuH,EAAIvH,MACxC8X,EAAoBnX,GACpB6X,EAAuBjR,GAZ/BrI,EAAAb,KAAA,EAcc4B,EAA2BsB,EAAKzD,IAAKyJ,GAdnD,wBAAArI,EAAAF,SAAAC,OAvS+BoB,MAAAC,KAAAC,WAyT/B,OAzPAwE,oBAAU,WACN,IAAM8D,EAAQ,IAAIpJ,KAClBwY,EAAYpP,EAAMK,WAAa,IAChC,IAGHnE,oBAAU,WAiBNpH,EAAGW,WAAW,SACTC,IAAIgD,EAAKzD,KACTQ,WAAW,aACXE,MAAM,MAAO,KAAM+C,EAAKzD,KACxBW,MACAC,KAAK,SAACC,GACH,IAAMuP,EAAuB,GACvBmL,EAAmB,GACnBC,EAAiB,GACvB3a,EAASC,KAAKC,QAAQ,SAACN,GACfA,EAAIgb,OAAOxb,OACXmQ,EAAc1D,KAAKjM,EAAIgb,OAAOxb,MAC9Bsb,EAAiB9a,EAAIgb,OAAOxb,MAAQQ,EAAIgb,OAAOna,MAE/Cka,EAAe/a,EAAIgb,OAAOxb,MAAsB,IAAI0B,KAAKlB,EAAIgb,OAAO/Z,SArBxEga,cAAcC,UAAU,EAAG,OAyB/BvL,EAAcwL,KAAK,SAAC1c,EAAG2c,GAAJ,OAAU3c,EAAEwC,QAAUma,EAAEna,UAI3C,IAAMuR,EAAqB,CAACpJ,EAAc,IAC1C+P,EAAiB3G,GAEjB8G,EAAY3J,EAAc,IAC1BI,EAAmBJ,EAAc,IACjC0J,EAAiB1J,GACjByJ,EAAY0B,GAEZhB,EAAuBiB,KAQ/B3b,EAAGW,WAAW,aACTC,IAAIgD,EAAKzD,KACTQ,WAAW,iBACXG,MACAC,KAAK,SAACC,GACH,IAAMib,EAAwB,GAE9Bjb,EAASC,KAAKC,QAAQ,SAACN,GACnB,IAAMR,EAAOQ,EAAIgb,OAAOxb,KAClBgC,EAAOxB,EAAIgb,OAAOxZ,KAClBC,EAAQzB,EAAIgb,OAAOvZ,MAAQzB,EAAIgb,OAAOvZ,MAAQ,GACpD4Z,EAAepP,KAAK,CAAEzM,KAAMA,EAAMgC,KAAMA,EAAMC,MAAOA,MAGzD,IAAM6Z,EAAoB,GAC1BD,EAAe/a,QAAQ,SAAC0a,GAChBA,EAAKxb,QAAQ8b,EACbA,EAAkBN,EAAKxb,MAAMyM,KAAK,CAC9BzK,KAAMwZ,EAAKxZ,KACXC,MAAOuZ,EAAKvZ,QAGhB6Z,EAAkBN,EAAKxb,MAAQ,CAAC,CAAEgC,KAAMwZ,EAAKxZ,KAAMC,MAAOuZ,EAAKvZ,UAIvE8X,EAAoB+B,MA9E7B,IAiPC9c,EAAAC,EAAAC,cAAC6c,GAAA,EAAS9T,IAAV,CAAc2D,MAAOkP,GACjB9b,EAAAC,EAAAC,cAAC8c,GAAD,CAAW7P,UAAU,YACjBnN,EAAAC,EAAAC,cAACuW,GAAD,CACIhI,SAAUA,EACViI,eA9Te,SAAAhP,GAAA,OAAAqU,EAAAzY,MAAAC,KAAAC,YA+TfmT,gBAAiB,kBAAMkF,GAAkBD,MAE7C5b,EAAAC,EAAAC,cAAC+c,GAAD,KACIjd,EAAAC,EAAAC,cAACgR,GAAD,CACIC,cAAeA,EACftG,SAAUA,EACVuG,eAzDpB,SAAwBpQ,GAEhBkQ,IAAW4J,EAAY9Z,IAwDXqQ,cAvKpB,SAAuBrQ,GACnB,IAAIkc,EAAe,KAEbC,EAAc1X,OAAO2X,OAAOvS,GAElC/H,QAAQC,IAAI,sBAAuBoa,EAAatF,IAEhD,IAAK,IAAI5H,EAAI,EAAGA,EAAI4H,GAAYlM,OAAQsE,IACpC,IAAKkN,EAAYlK,SAAS4E,GAAY5H,IAAK,CACvCiN,EAAerF,GAAY5H,GAC3B,MAIR,IAAMoN,EAAaxS,EAInB,OAHAwS,EAAWrc,GAAQkc,EACnBtC,EAAYyC,GAELH,GAsJS5L,mBA9IpB,SAA4BtQ,GACxB,IAAMqc,EAAaxS,EAEnB/H,QAAQC,IAAI,2BAEZ0C,OAAO6X,KAAKD,GAAYvb,QAAQ,SAACyb,GAC7Bza,QAAQC,IAAIwa,EAAKvc,GACbuc,GAAOvc,UACAqc,EAAWrc,KAG1B4Z,EAAYyC,IAoII9L,mBAAoBA,EACpBC,kBA5GpB,SAA2BxQ,GACvB,GAAI4J,EAAcqI,SAASjS,GAAO,CAC9B,IAAMwc,EAAwB5S,EAAcgD,OAAO,SAAC2E,GAChD,OAAOA,GAAKvR,IAKhB2Z,EAAiBlV,OAAA+N,EAAA,EAAA/N,CAAI+X,MAqGT5S,cAAeA,EACf6G,gBAAiB4J,IAErBrb,EAAAC,EAAAC,cAACud,GAAD,KACK7B,EACG5b,EAAAC,EAAAC,cAACka,GAAD,MAEApa,EAAAC,EAAAC,cAACsO,GAAD,CACI+O,IAAI,YACJ9O,SAAUA,EACVlE,QAASyJ,EACThJ,iBAAkBA,EAClBH,SAAUA,EACVD,cAAeA,EACfE,mBA1G5B,SAA4B9H,EAAchC,GACtC,IAAM4B,EAA6B,CAC/BI,KAAMA,EACNhC,KAAMA,EACNiC,MAAO,KZjNZ,SAAPya,EAAAC,GAAAC,EAAAta,MAAAC,KAAAC,WYqNQqa,CAAgBrZ,EAAKzD,IAAK6B,GAE1B,IAAMgB,EAAiB+P,KAAKC,MAAMD,KAAKE,UAAU7I,IACjDpH,EAAO5C,GAAQ4C,EAAO5C,GAAP,GAAA2D,OAAAc,OAAA+N,EAAA,EAAA/N,CAAmB7B,EAAO5C,IAA1B,CAAiC,CAAEgC,KAAMA,EAAMC,MAAO,MAAQ,CAAC,CAAED,KAAMA,EAAMC,MAAO,KAEnG8X,EAAoBnX,IA8FImH,iBAtF5B,SAA0B/H,EAAchC,IZvLrC,SAAP8c,EAAAC,EAAAC,GAAAC,EAAA3a,MAAAC,KAAAC,WYyLQ0a,CAAmB1Z,EAAKzD,IAAKC,EAAMgC,GAEnC,IAAMY,EAAiB+P,KAAKC,MAAMD,KAAKE,UAAU7I,IACjDpH,EAAO5C,GAAQ4C,EAAO5C,GAAM4M,OAAO,SAACuQ,GAAD,OAAaA,EAAQnb,OAASA,IACjE+X,EAAoBnX,IAiFIsH,mBAzE5B,SAA4BlI,EAAchC,GACtC,IAAIiC,EAAQ,KAEZ,GAAI+H,GAAoBA,EAAiBhK,GAAO,CAC5C,IAAMwJ,EAAMQ,EAAiBhK,GAAMyK,KAAK,SAACC,GACrC,OAAOA,EAAE1I,OAASA,IAGlBwH,IACAvH,EAAQuH,EAAIvH,OAUpBwY,EANkC,CAC9BzY,KAAMA,EACNhC,KAAMA,EACNiC,MAAOA,QA6DCjD,EAAAC,EAAAC,cAAC4X,GAAD,CACIC,oBAAqBA,EACrB/M,iBAAkBA,EAClBgN,gBAjWW,SAAApQ,GAAA,OAAAqU,EAAA3Y,MAAAC,KAAAC,iBAyWnC,IAAMia,GAAoB3U,IAAOG,IAAVmV,MAWjBnB,GAA4BnU,IAAOG,IAAVoV,MAezB9N,GAAYzH,IAAOG,IAAVqV,yiBC3Yf,SAASC,KAAM,IAAAC,EACqB3U,IAAxB7E,EADGwZ,EACHxZ,cAAeR,EADZga,EACYha,KAMvB,OAJAwD,oBAAU,WACNC,SAASiM,eAAe,QAAQtH,MAAM6R,SAAW,WAGhDzZ,EAEDhF,EAAAC,EAAAC,cAACwe,GAAD,KACKla,EACGxE,EAAAC,EAAAC,cAACye,GAAD,KACI3e,EAAAC,EAAAC,cAACwa,GAAD,OAGJ1a,EAAAC,EAAAC,cAACyF,EAAD,OARe,KAc/B,IAAM4K,GAAYzH,IAAOG,IAAV2V,MAKTD,GAAe7V,IAAOG,IAAV4V,MCvBEC,QACW,cAA7B3Q,OAAO4Q,SAASC,UAEe,UAA7B7Q,OAAO4Q,SAASC,UAEhB7Q,OAAO4Q,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAOnf,EAAAC,EAAAC,cF6CD,kBACXF,EAAAC,EAAAC,cAACV,EAAD,CAAkBE,QAAS0f,EAAYxf,aAAcA,GACjDI,EAAAC,EAAAC,cAACmf,GAAD,QE/CQ,MAASpX,SAASiM,eAAe,SD0H3C,kBAAmBoL,WACrBA,UAAUC,cAAcC,MAAM7d,KAAK,SAAA8d,GACjCA,EAAaC","file":"static/js/main.ad741b18.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext } from 'react';\n\nconst Context = createContext()\n\nexport function AppStateProvider({ reducer, initialState = {}, children }) {\n    const value = useReducer(reducer, initialState)\n    return <Context.Provider value={value} children={children} />\n}\n\nexport function useAppState() {\n    return useContext(Context);\n}","import firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyCvxmJXWdOQsBw6QkcH7MTghBk8YjBNnHo\",\n  authDomain: \"track-my-goals.firebaseapp.com\",\n  databaseURL: \"https://track-my-goals.firebaseio.com\",\n  projectId: \"track-my-goals\",\n  storageBucket: \"track-my-goals.appspot.com\",\n  messagingSenderId: \"1045953614271\"\n};\n\nfirebase.initializeApp(config);\n\nexport const db = firebase.firestore();\n\nexport const auth = () => firebase.auth();\n\n// export const mode = \"real\"\n\n// export default fire\n","import { completedDay } from './constants/AppConstants';\nimport { db } from './fire';\nimport { auth } from 'firebase';\n\nexport async function removeDaysCompleted(uid, goal) {\n    let daysCompletedCollection = db\n        .collection('completed')\n        .doc(uid)\n        .collection('daysCompleted');\n\n    let daysToDelete = daysCompletedCollection.where('goal', '==', goal);\n\n    daysToDelete.get().then((snapshot) => {\n        snapshot.docs.forEach((doc) => {\n            doc.ref.delete();\n        });\n    });\n}\n\nexport async function deleteGoal(uid, goal) {\n    // let existingGoal = db.collection(`goals-${uid}`);\n    let existingGoal: any = db\n        .collection(`goals`)\n        .doc(uid)\n        .collection('userGoals');\n\n    existingGoal = existingGoal.where('goal', '==', goal);\n    existingGoal = existingGoal.where('uid', '==', uid);\n\n    existingGoal.get().then((snapshot) => {\n        snapshot.docs.forEach((doc) => {\n            doc.ref.delete();\n        });\n    });\n}\n\n// TODO -- ADD A HEX COLOR FIELD TO THE GOAL COLLECTION. ALSO PUT THE AUTH UID ON THE COLLECTION NAME\nexport async function createGoal(uid, goal, color) {\n    return db\n        .collection(`goals`)\n        .doc(uid)\n        .collection('userGoals')\n        .add({\n            uid: uid,\n            goal: goal,\n            color: color,\n            created: +new Date() // Timestamp of creation\n        });\n}\n\nexport async function addCompletedDay(uid, completedDay: completedDay) {\n    console.log('addCompletedDay', uid, completedDay);\n\n    return db\n        .collection('completed')\n        .doc(uid)\n        .collection('daysCompleted')\n        .add({\n            uid: uid,\n            goal: completedDay.goal,\n            date: completedDay.date,\n            notes: completedDay.notes\n        });\n}\n\n/**\n * TODO -- update to return the response of the request.\n */\nexport async function updateNotesForCompletedDay(uid, completedDay: completedDay) {\n    let dayToUpdate: any = db\n        .collection('completed')\n        .doc(uid)\n        .collection('daysCompleted');\n\n    dayToUpdate = dayToUpdate.where('goal', '==', completedDay.goal);\n    dayToUpdate = dayToUpdate.where('date', '==', completedDay.date);\n\n    dayToUpdate.get().then((snapshot) => {\n        snapshot.docs.forEach((doc) => {\n            db.collection('completed')\n                .doc(uid)\n                .collection('daysCompleted')\n                .doc(doc.id)\n                .update({\n                    uid: uid,\n                    goal: completedDay.goal,\n                    date: completedDay.date,\n                    notes: completedDay.notes\n                });\n        });\n    });\n}\n\nexport async function removeCompletedDay(uid, goal, date) {\n    // let dayCompleted = db.collection(`daysCompleted-${uid}`);\n\n    let daysCompleted: any = db\n        .collection('completed')\n        .doc(uid)\n        .collection('daysCompleted');\n\n    daysCompleted = daysCompleted.where('goal', '==', goal);\n    daysCompleted = daysCompleted.where('date', '==', date);\n\n    daysCompleted.get().then((snapshot) => {\n        snapshot.docs.forEach((doc) => {\n            doc.ref.delete();\n        });\n    });\n}\n\nexport async function signup({ email, password }) {\n    try {\n        const { user } = await auth().createUserWithEmailAndPassword(email, password);\n\n        await db.doc(`users/${user.uid}`).set({\n            uid: user.uid\n        });\n    } catch (e) {\n        throw e;\n    }\n}\n\nexport function login(email, password) {\n    return auth().signInWithEmailAndPassword(email, password);\n}\n\nexport function logout() {\n    return auth().signOut();\n}\n\nexport function onAuthStateChanged(callback) {\n    auth().onAuthStateChanged(callback);\n}\n","import { retrieveSelectedDays } from \"./utils\";\n\nconst initialState = {\n  authAttempted: false,\n  auth: null,\n  user: null,\n  goals: [\"Workout\", \"Meditate\", \"Eat Healthy\"],\n  selectedGoal: 0,\n\n  // This is the new state I'm adding so that the calendar can dynamically load\n  // the selected days for each component\n\n  // Should probably just load this once on the first page load. And store it\n  // all in local memory.\n\n  // MAKE THIS A MAP OF GOALS TO DAYS SELECTED;\n  selectedDays: {\n    workout: []\n  }\n};\n\nconst appStateReducer = (state, action) => {\n  switch (action.type) {\n    case \"AUTH_CHANGE\": {\n      return { ...state, auth: action.auth, authAttempted: true };\n    }\n    case \"LOAD_USER\": {\n      return { ...state, user: action.user };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport { initialState };\nexport default appStateReducer;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { login, signup } from \"./utils\";\n// import { Tabs, TabList, Tab, TabPanels, TabPanel } from \"@reach/tabs\";\n// import Signup from \"./Signup\";\n// import Login from \"./Login\";\n\nexport default function LoggedOut() {\n  const [focus, setFocus] = useState(null);\n\n  // Control whether user sees login or signup.\n  const [isLogin, setIsLogin] = useState(true);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // login refs\n  const loginEmailRef = useRef(null);\n  const loginPasswordRef = useRef(null);\n\n  useOutsideAlerter(loginEmailRef);\n  useOutsideAlerter(loginPasswordRef);\n\n  // Signup refs\n  const signupEmailRef = useRef(null);\n  const signupPasswordRef = useRef(null);\n\n  useOutsideAlerter(signupEmailRef);\n  useOutsideAlerter(signupPasswordRef);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      await login(loginEmailRef.current.value, loginPasswordRef.current.value);\n    } catch (error) {\n      setLoading(false);\n      setError(error);\n    }\n  };\n\n  const handleSignup = async event => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      await signup({\n        email: signupEmailRef.current.value,\n        password: signupPasswordRef.current.value\n      });\n    } catch (error) {\n      setLoading(false);\n      setError(error);\n    }\n  };\n\n  function useOutsideAlerter(ref) {\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setFocus(\"\");\n        setError(null);\n      }\n    }\n    useEffect(() => {\n      // Bind the event listener\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        // Unbind the event listener on clean up\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    });\n  }\n\n  return isLogin ? (\n    <Login>\n      <Heading>Log into Habit Tracker</Heading>\n      <CreateAccount>\n        New?{\" \"}\n        <TextLink onClick={() => setIsLogin(false)}>Create Account</TextLink>\n      </CreateAccount>\n      <LoginInput\n        ref={loginEmailRef}\n        isLogin={isLogin}\n        focus={focus === \"email\"}\n        placeholder={\"Email Address\"}\n        onClick={() => {\n          setFocus(\"email\");\n          setError(null);\n        }}\n      />\n      <LoginInput\n        ref={loginPasswordRef}\n        isLogin={isLogin}\n        type=\"password\"\n        focus={focus === \"password\"}\n        placeholder={\"Password\"}\n        onClick={() => {\n          setFocus(\"password\");\n          setError(null);\n        }}\n      />\n      <LoginButton onClick={handleLogin}>Login</LoginButton>\n      {error ? <ErrorMessage>Invalid username or password</ErrorMessage> : null}\n    </Login>\n  ) : (\n    <Signup>\n      <Heading>Create Account</Heading>\n      <CreateAccount>\n        Have one? <TextLink onClick={() => setIsLogin(true)}>Log In</TextLink>\n      </CreateAccount>\n      <LoginInput\n        ref={signupEmailRef}\n        isLogin={isLogin}\n        focus={focus === \"email\"}\n        placeholder={\"Email Address\"}\n        onClick={() => {\n          setFocus(\"email\");\n          setError(null);\n        }}\n      />\n      <LoginInput\n        ref={signupPasswordRef}\n        isLogin={isLogin}\n        type=\"password\"\n        focus={focus === \"password\"}\n        placeholder={\"Password\"}\n        onClick={() => {\n          setFocus(\"password\");\n          setError(null);\n        }}\n      />\n      <LoginButton onClick={handleSignup}>Create Account</LoginButton>\n      {error ? <ErrorMessage>Invalid username or password</ErrorMessage> : null}\n    </Signup>\n  );\n}\n\nconst TextLink = styled.u`\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst Signup = styled.div`\n  overflow: hidden;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center; /*centers items on the line (the x-axis by default)*/\n  align-items: center; /*centers items on the cross-axis (y by default)*/\n`;\n\nconst Login = styled.div`\n  overflow: hidden;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center; /*centers items on the line (the x-axis by default)*/\n  align-items: center; /*centers items on the cross-axis (y by default)*/\n`;\n\nconst Heading = styled.h1`\n  color: black;\n  font-size: 1.64rem;\n  font-family: \"Avenir Next\" !important;\n`;\n\nconst CreateAccount = styled.h1`\n  color: \"#A9A9A9\";\n  font-size: 1rem;\n  margin-top: 1rem;\n  font-family: \"Avenir Next\" !important;\n`;\n\nconst LoginInput = styled.input<{ focus; isLogin }>`\n  height: 3rem;\n  width: 18rem;\n  border: none;\n  font-size: 1em;\n  margin-top: 2rem;\n\n  padding-left: 1rem;\n  border-radius: ${props => (props.isLogin ? \"0.3rem\" : \"0rem\")};\n  font-family: \"Avenir Next\" !important;\n\n  background-color: ${props => (props.focus ? \"#e5e5e5\" : \"transparent\")};\n  border-bottom: ${props =>\n    props.focus ? \"3px solid transparent\" : \"2px solid black\"};\n`;\n\nconst LoginButton = styled.button`\n  height: 3rem;\n  width: 19rem;\n  color: black;\n  background: #d8d8d8;\n  border: none;\n  font-size: 1.1rem;\n  margin-top: 2rem;\n\n  padding-left: 1rem;\n  border-radius: 0.3rem;\n  font-family: \"Avenir Next\" !important;\n`;\n\nconst ErrorMessage = styled.h1`\n  margin-top: 1.5rem;\n  color: #cf2e38;\n  font-size: 1rem;\n  font-family: \"Avenir Next\" !important;\n`;\n","import { useEffect } from \"react\";\nimport { onAuthStateChanged } from \"./utils\";\nimport { useAppState } from \"./app-state\";\n\nexport default function useAuth() {\n  const [{ authAttempted, auth }, dispatch] = useAppState();\n\n  useEffect(() => {\n    if (!authAttempted) {\n      return onAuthStateChanged(auth => {\n        if (auth) {\n          const { uid } = auth;\n          dispatch({\n            type: \"AUTH_CHANGE\",\n            auth: { uid }\n          });\n        } else {\n          dispatch({ type: \"AUTH_CHANGE\", auth: null });\n        }\n      });\n    }\n  }, [authAttempted, dispatch]);\n\n  return { authAttempted, auth };\n}\n","import React, { useEffect, Fragment, useState } from 'react';\nimport styled from 'styled-components';\n\nexport default function Day({\n    completedColor,\n    curGoal, // shouldn't need this\n    day,\n    month,\n    year,\n    goalsCompletedOnDay,\n    selectedGoals,\n    colorMap,\n    handleDayCompleted,\n    handleDayRemoved,\n    newCompletedDays,\n    disabled,\n    handleNoteSelected\n}) {\n    const [myDate, setMyDate] = useState('');\n\n    const [isTodaysDate, setIsTodaysDate] = useState(false);\n\n    const [doesDayHaveNote, setDayHasNote] = useState(false);\n\n    useEffect(() => {\n        console.log('rendering day');\n    });\n\n    useEffect(() => {\n        if (newCompletedDays && newCompletedDays[curGoal]) {\n            const day = newCompletedDays[curGoal].find((e) => {\n                return e.date === myDate;\n            });\n\n            if (day && day.notes && day.notes.length) {\n                setDayHasNote(true);\n            } else {\n                setDayHasNote(false);\n            }\n        }\n    }, [newCompletedDays, curGoal]);\n\n    useEffect(() => {\n        if (month && day && year) {\n            const date =\n                month.toString().padStart(2, '0') + '-' + day.toString().padStart(2, '0') + '-' + year.toString();\n            setMyDate(date);\n\n            let today: any = new Date();\n            let dd = String(today.getDate()).padStart(2, '0');\n            let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n            let yyyy = today.getFullYear();\n            today = mm + '-' + dd + '-' + yyyy;\n\n            if (date == today) {\n                setIsTodaysDate(true);\n            } else {\n                setIsTodaysDate(false);\n            }\n        }\n    }, [month, day, year]);\n\n    /**\n     * Determine how to color in each day depending on how many goals\n     * are currently selected.\n     */\n    function getColorDisplay() {\n        const oneGoal: boolean = goalsCompletedOnDay && goalsCompletedOnDay.length === 1;\n\n        const multipleGoals: boolean = goalsCompletedOnDay && goalsCompletedOnDay.length > 1;\n\n        if (oneGoal) {\n            const singleColor = colorMap[goalsCompletedOnDay[0]];\n            return (\n                <Fragment>\n                    <MyDiv\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'start',\n                            background: singleColor,\n                            paddingLeft: '0.5rem',\n                            paddingTop: '0.2rem'\n                        }}>\n                        <i\n                            className='glyphicon glyphicon-edit'\n                            style={{ color: 'white' }}\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                handleNoteSelected(myDate, curGoal);\n                            }}\n                        />\n                        {doesDayHaveNote ? (\n                            <i\n                                className='glyphicon glyphicon-ok'\n                                style={{ color: 'white', marginRight: '.2rem', marginTop: '.5rem' }}\n                            />\n                        ) : null}\n                    </MyDiv>\n                    <MyDiv style={{ background: singleColor }}>\n                        <Text style={{ color: 'white' }}>{disabled ? '0' : day} </Text>\n                        {isTodaysDate ? (\n                            <i\n                                className='glyphicon glyphicon-time'\n                                style={{ color: 'white', marginRight: '.2rem', marginTop: '.3rem' }}\n                            />\n                        ) : null}\n                    </MyDiv>\n                    <MyDiv style={{ background: singleColor }} />\n                    <MyDiv style={{ background: singleColor }} />\n                </Fragment>\n            );\n        } else if (multipleGoals) {\n            let display = [];\n\n            // TODO -- use a foreach loop. this is whack\n            for (let x in goalsCompletedOnDay) {\n                if (x === '1') {\n                    display.push(\n                        <MyDiv style={{ background: colorMap[goalsCompletedOnDay[x]], color: 'white' }}>\n                            <Text>{disabled ? '0' : day} </Text>\n                            {isTodaysDate ? (\n                                <i\n                                    className='glyphicon glyphicon-time'\n                                    style={{ color: 'white', marginRight: '.2rem', marginTop: '.3rem' }}\n                                />\n                            ) : null}\n                        </MyDiv>\n                    );\n                } else {\n                    display.push(<MyDiv style={{ background: colorMap[goalsCompletedOnDay[x]] }} />);\n                }\n            }\n\n            while (display.length !== 4) {\n                display.push(<MyDiv style={{ background: '#d8d8d8' }} />);\n            }\n\n            return (\n                <Fragment>\n                    {display[0]}\n                    {display[1]}\n                    {display[2]}\n                    {display[3]}\n                </Fragment>\n            );\n        } else {\n            const singleColor = disabled ? '#f1f1f1' : '#d8d8d8';\n            return (\n                <Fragment>\n                    <MyDiv style={{ background: singleColor }} />\n                    <MyDiv style={{ background: singleColor }}>\n                        <Text>{disabled ? '0' : day} </Text>\n                        {isTodaysDate ? (\n                            <i\n                                className='glyphicon glyphicon-time'\n                                style={{ color: 'black', marginRight: '.2rem', marginTop: '.3rem' }}\n                            />\n                        ) : null}\n                    </MyDiv>\n                    <MyDiv style={{ background: singleColor }} />\n                    <MyDiv style={{ background: singleColor }} />\n                </Fragment>\n            );\n        }\n    }\n\n    const dayColors = getColorDisplay();\n\n    return (\n        <Button\n            completedColor={completedColor}\n            disabled={disabled}\n            onClick={() => {\n                if (!disabled) {\n                    // Only allow select and deselect if ony one goal is selected.\n                    if (selectedGoals.length === 1) {\n                        const goal = selectedGoals[0];\n\n                        handleNoteSelected(myDate, curGoal);\n\n                        const isGoalSelected =\n                            newCompletedDays &&\n                            newCompletedDays[goal] &&\n                            newCompletedDays[goal].filter((day) => day.date === myDate).length > 0; //.indexOf(date) > -1;\n\n                        if (isGoalSelected) {\n                            handleDayRemoved(myDate, goal);\n                        } else {\n                            handleDayCompleted(myDate, goal);\n                        }\n                    }\n                }\n            }}>\n            {dayColors}\n        </Button>\n    );\n}\n\nconst EditContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n`;\n\nconst Text = styled.div`\n    z-index: 10;\n    padding-right: 0.5rem;\n`;\n\nconst MyDiv = styled.div`\n    width: 50%;\n    height: 50%;\n    float: left;\n`;\n\ninterface ButtonProps {\n    disabled: boolean;\n    completedColor: string;\n}\n\nconst Button = styled.button<ButtonProps>`\n    font-family: 'Avenir Next' !important;\n    padding: 0;\n    display: inline-block;\n    height: 6rem;\n    width: 6rem;\n    -webkit-text-fill-color: ${(props) => (props.disabled ? 'transparent' : 'none')};\n    font-size: 1em;\n    margin: 0.4375rem;\n    border: ${(props) => (props.disabled ? '2px solid #f1f1f1;' : '2px solid #6B7A8F')};\n    border-radius: 3px;\n    text-align: right;\n\n    &:hover {\n        filter: ${(props) => (props.disabled ? 'brightness(100%)' : 'brightness(85%)')};\n    }\n\n    margin-top: 0.3rem;\n`;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Day from './Day';\n\nimport { useTransition, animated } from 'react-spring';\n\nexport function getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\n/**\n * NOTES -- Re-renders on every goal selection\n */\nexport default function Calendar({\n    curMonth,\n    curGoal,\n    newCompletedDays,\n    colorMap,\n    selectedGoals,\n    handleDayCompleted,\n    handleDayRemoved,\n    handleNoteSelected\n}) {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    const monthDays = {\n        '01': 31,\n        '02': 28,\n        '03': 31,\n        '04': 30,\n        '05': 31,\n        '06': 30,\n        '07': 31,\n        '08': 31,\n        '09': 30,\n        '10': 31,\n        '11': 30,\n        '12': 31\n    };\n\n    const DaysOfWeek = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'];\n\n    function getMonth(month, completedDays) {\n        const myMonth = [[]];\n        let dayOfWeek = 1;\n        let week = [];\n\n        // Dynamically adjust the number of rows in the calendar as the window resizes.\n        // const daysPerRow = Math.floor(windowDimensions.width / 180);\n        const daysPerRow = 7;\n\n        let firstOfMonth: any = month.toString().padStart(2, '0') + '-01-2019';\n        firstOfMonth = new Date(firstOfMonth).getDay();\n\n        // Add in a row for the days of the week\n        for (let day = 0; day < 7; day++) {\n            week.push(<DayOfWeek>{DaysOfWeek[day]}</DayOfWeek>);\n        }\n\n        myMonth.push(week);\n        week = [];\n\n        // Add in blank days until the first day of the month.\n        for (let unusedDay = 0; unusedDay < firstOfMonth; unusedDay++) {\n            week.push(\n                <Day\n                    completedColor={null}\n                    day={null}\n                    month={null}\n                    year={null}\n                    goalsCompletedOnDay={null}\n                    selectedGoals={null}\n                    newCompletedDays={null}\n                    colorMap={null}\n                    handleDayCompleted={null}\n                    handleDayRemoved={null}\n                    curGoal={curGoal}\n                    disabled={true}\n                    handleNoteSelected={handleNoteSelected}\n                />\n            );\n        }\n\n        dayOfWeek = firstOfMonth + 1;\n\n        // USING 35 SO THAT WE GET 5 WEEKS.\n        for (let i = 1; i <= monthDays[month]; i++) {\n            const date =\n                month.toString().padStart(2, '0') +\n                '-' +\n                i\n                    .toString()\n                    .toString()\n                    .padStart(2, '0') +\n                '-' +\n                '2019';\n\n            if (dayOfWeek === daysPerRow + 1) {\n                myMonth.push(week);\n                dayOfWeek = 1;\n                week = [];\n            }\n\n            let goalsCompletedOnDay = [];\n            selectedGoals.forEach((selectedGoal) => {\n                if (\n                    completedDays[selectedGoal] &&\n                    completedDays[selectedGoal].filter((day) => day.date === date).length > 0 //.indexOf(date) > -1\n                ) {\n                    goalsCompletedOnDay.push(selectedGoal);\n                }\n            });\n\n            week.push(\n                <Day\n                    completedColor={colorMap ? colorMap[curGoal] : 'green'}\n                    curGoal={curGoal}\n                    day={i}\n                    month={parseInt(month)}\n                    year={2019}\n                    goalsCompletedOnDay={goalsCompletedOnDay}\n                    selectedGoals={selectedGoals}\n                    newCompletedDays={newCompletedDays}\n                    colorMap={colorMap}\n                    handleDayCompleted={handleDayCompleted}\n                    handleDayRemoved={handleDayRemoved}\n                    disabled={false}\n                    handleNoteSelected={handleNoteSelected}\n                />\n            );\n            dayOfWeek += 1;\n        }\n\n        // fill out the last row with empty days\n        for (let unusedDay = 0; unusedDay < 8 - dayOfWeek; unusedDay++) {\n            week.push(\n                <Day\n                    completedColor={null}\n                    day={null}\n                    month={null}\n                    year={null}\n                    goalsCompletedOnDay={null}\n                    selectedGoals={null}\n                    newCompletedDays={null}\n                    colorMap={null}\n                    handleDayCompleted={null}\n                    handleDayRemoved={null}\n                    curGoal={curGoal}\n                    disabled={true}\n                    handleNoteSelected={handleNoteSelected}\n                />\n            );\n        }\n\n        myMonth.push(week);\n        week = [];\n\n        // Adds a blank row of disabled days so that the size stays the same.\n        if (myMonth.length === 7) {\n            for (let unusedDay = 0; unusedDay < 7; unusedDay++) {\n                week.push(\n                    <Day\n                        completedColor={null}\n                        day={null}\n                        month={null}\n                        year={null}\n                        goalsCompletedOnDay={null}\n                        selectedGoals={null}\n                        newCompletedDays={null}\n                        colorMap={null}\n                        handleDayCompleted={null}\n                        handleDayRemoved={null}\n                        curGoal={curGoal}\n                        disabled={true}\n                        handleNoteSelected={handleNoteSelected}\n                    />\n                );\n            }\n\n            myMonth.push(week);\n        }\n\n        return myMonth;\n    }\n\n    function getYear(completedDays) {\n        const calendarYear = {};\n        for (let i = 1; i <= 12; i++) {\n            let monthNum = i.toString();\n            monthNum = monthNum.length === 1 ? '0' + monthNum : monthNum;\n\n            const month = getMonth(monthNum, completedDays);\n            calendarYear[i] = month;\n        }\n        return calendarYear;\n    }\n\n    const calendarYear = getYear(newCompletedDays);\n\n    return (\n        <Container>\n            {calendarYear[curMonth]\n                ? calendarYear[curMonth].map((week) => {\n                      return <div id={week}>{week}</div>;\n                  })\n                : null}\n        </Container>\n    );\n}\n\nconst Container = styled.div`\n    /* display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin-left: 22rem;\n    margin-top: 1rem;\n    overflow: hidden; */\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    -webkit-box-pack: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n    margin-left: 22rem;\n    margin-top: 1rem;\n    overflow: hidden;\n`;\n\nconst DayOfWeek = styled.div`\n    display: inline-block;\n    width: 6rem;\n    height: 1rem;\n    margin: 0.4375rem;\n    margin-bottom: 2rem;\n    text-align: center;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport default function DeleteGoalRow({ goal, index, undoDelete, confirmDelete }) {\n    return (\n        <NewListRow onClick={() => undoDelete}>\n            <b style={{ paddingLeft: '1rem' }}>Delete goal?</b>\n            {/* <b style={{ paddingLeft: '.2rem' }}>{goal}?</b> */}\n            <div>\n                <i\n                    className='glyphicon glyphicon-remove'\n                    style={{ paddingLeft: '4rem' }}\n                    onClick={() => undoDelete()}\n                />\n                <i\n                    className='glyphicon glyphicon-trash'\n                    style={{ paddingLeft: '2rem', paddingRight: '1rem' }}\n                    onClick={() => confirmDelete(goal, index)}\n                />\n            </div>\n        </NewListRow>\n    );\n}\n\nconst NewListRow = styled.div`\n    display: flex;\n    direction: ltr;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    vertical-align: middle;\n    line-height: 2.5rem;\n    height: 5rem !important;\n    margin-bottom: 2rem;\n    width: 19.5rem;\n    border-radius: 0.3rem;\n    border: 1px solid #565656;\n\n    background-color: #ff3a22;\n\n    padding-left: 0.5rem;\n    color: white;\n    margin-left: 0.5rem;\n    font-family: 'Avenir Next' !important;\n`;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { createGoal, deleteGoal, removeDaysCompleted } from './utils';\nimport useAuth from './useAuth';\n\nimport './App.scss';\n\nimport { getWindowDimensions } from './Calendar';\nimport DeleteGoalRow from './DeleteGoalRow';\n\nexport default function GoalsList({\n    existingGoals,\n    colorMap,\n    updateSelected,\n    addToColorMap,\n    removeFromColorMap,\n    handleGoalSelected,\n    handleGoalRemoved,\n    selectedGoals,\n    creationDateMap\n}) {\n    const { auth } = useAuth();\n\n    // This is the goal that is currently typed into the new goal input.\n    const [newGoal, setNewGoal] = useState('');\n\n    // List of goals that are in the pre-delete state.\n    const [goalsToDelete, setGoalsToDelete] = useState([]);\n\n    // The list of the existing goals.\n    const [goals, setGoals] = useState(existingGoals);\n\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        setWindowDimensions(getWindowDimensions());\n    }, []);\n\n    useEffect(() => {\n        setGoals(existingGoals);\n    }, [existingGoals]);\n\n    // TODO -- THE CHECK BOXES ARE MESSED UP WHEN DELETING\n    // DON'T SET THE DELETED GOAL AS SELECTED, JUST USE SEPARATE STATE.\n    function handleDelete(goal: string, idx: number) {\n        deleteGoal(auth.uid, goal);\n        setGoals(goals.filter((g) => g !== goal));\n        removeDaysCompleted(auth.uid, goal);\n\n        removeFromColorMap(goal);\n\n        handleGoalRemoved(goal);\n\n        // Check if there are still goals remaining after this delete.\n        if (goals.length - 1 > 0) {\n            const nextGoalIdx = idx === 0 ? idx + 1 : idx - 1;\n            updateSelected(goals[nextGoalIdx]);\n            handleGoalSelected(goals[nextGoalIdx], goals[idx]);\n        }\n    }\n\n    function undoDelete(goal: string) {\n        let update = JSON.parse(JSON.stringify(goalsToDelete));\n        update = update.filter((g) => g != goal);\n\n        setGoalsToDelete(update);\n    }\n\n    return (\n        <GoalContainer>\n            <AppTitle />\n\n            <InputContainer>\n                <GoalInput\n                    type='text'\n                    placeholder='Enter your next habit'\n                    onChange={(e) => setNewGoal(e.target.value)}\n                />\n                <AddGoalButton\n                    onClick={() => {\n                        if (newGoal.length > 0 && !goals.includes(newGoal)) {\n                            const goalColor = addToColorMap(newGoal);\n                            createGoal(auth.uid, newGoal, goalColor);\n\n                            if (goals.includes(newGoal)) {\n                                updateSelected(newGoal);\n                            }\n\n                            setNewGoal('');\n                            setGoals([...goals, newGoal]);\n                        }\n                    }}>\n                    ADD\n                </AddGoalButton>\n            </InputContainer>\n            <ListContainer windowHeight={windowDimensions.height}>\n                {goals\n                    ? goals.map((goal, idx) => {\n                          return (\n                              <Fragment>\n                                  {goalsToDelete.includes(goal) ? (\n                                      <DeleteGoalRow\n                                          goal={goal}\n                                          index={idx}\n                                          undoDelete={() => undoDelete(goal)}\n                                          confirmDelete={(goalToDelete, index) => handleDelete(goalToDelete, index)}\n                                      />\n                                  ) : (\n                                      <NewListRow\n                                          selected={goal === selectedGoals[0]}\n                                          checked={\n                                              (document.getElementById(goal) as HTMLInputElement) &&\n                                              (document.getElementById(goal) as HTMLInputElement).checked\n                                          }\n                                          colorMap={colorMap}\n                                          goal={goal}\n                                          toDelete={goalsToDelete.includes(goal)}\n                                          onClick={() => {\n                                              if (goals.includes(goal)) {\n                                                  if (selectedGoals) {\n                                                      selectedGoals.forEach((element) => {\n                                                          (document.getElementById(\n                                                              element\n                                                          ) as HTMLInputElement).checked = false;\n                                                      });\n                                                  }\n\n                                                  // Set as selected and check this rows checkbox, remove the previously selected from the selectedList.\n                                                  handleGoalSelected(goal, selectedGoals);\n                                                  updateSelected(goal);\n\n                                                  (document.getElementById(goal) as HTMLInputElement).checked = true;\n                                              }\n                                          }}>\n                                          <ListRowLeft>\n                                              <Circle\n                                                  color={colorMap && colorMap[goal] ? colorMap[goal] : 'red'}\n                                                  className='dot'\n                                              />\n                                              <ListRowInfo>\n                                                  <Goal>{goal}</Goal>\n                                                  <StartDate>{creationDateMap[goal]}</StartDate>\n                                              </ListRowInfo>\n                                          </ListRowLeft>\n                                          <ListRowRight>\n                                              <Checkbox>\n                                                  <input\n                                                      id={goal}\n                                                      type='checkbox'\n                                                      defaultChecked={idx === 0}\n                                                      onClick={(e) => {\n                                                          e.stopPropagation();\n                                                          let checkbox = document.getElementById(\n                                                              goal\n                                                          ) as HTMLInputElement;\n\n                                                          if (checkbox.checked) {\n                                                              handleGoalSelected(goal);\n                                                          } else if (selectedGoals.length === 1) {\n                                                              e.preventDefault();\n                                                          } else {\n                                                              handleGoalRemoved(goal);\n                                                          }\n                                                      }}\n                                                  />\n                                              </Checkbox>{' '}\n                                              <DeleteButton\n                                                  onClick={(e) => {\n                                                      e.stopPropagation();\n                                                      setGoalsToDelete([...goalsToDelete, goal]);\n\n                                                      // update local state of rows in delete state\n                                                      setGoalsToDelete([...goalsToDelete, goal]);\n                                                  }}>\n                                                  {' '}\n                                                  <i\n                                                      className='glyphicon glyphicon-trash'\n                                                      style={{ paddingRight: '.5rem' }}\n                                                  />\n                                              </DeleteButton>\n                                          </ListRowRight>\n                                      </NewListRow>\n                                  )}\n                              </Fragment>\n                          );\n                      })\n                    : null}\n            </ListContainer>\n        </GoalContainer>\n    );\n}\n\nconst GoalContainer = styled.div`\n    /* display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n    // background-color: #393f4d // #6b7a8f; //#0d160a;\n    font-family: Helvetica;\n    position: absolute;\n    height: 100%;\n    width: 25rem;\n    border-right: 1.5px solid #d0d0d0; */\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n\n    font-family: Helvetica;\n    position: absolute;\n    height: 100%;\n    width: 25rem;\n    border-right: 1.5px solid #d0d0d0;\n`;\n\nconst AppTitle = styled.div`\n    color: white;\n    font-size: 2rem;\n    margin-top: 1rem;\n    margin-bottom: 4rem;\n    padding-right: 10rem;\n    font-family: Montserrat, sans-serif;\n`;\n\nconst InputContainer = styled.div`\n    /* display: flex;\n    flex-direction: row; */\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: row;\n    flex-direction: row;\n`;\n\nconst ListContainer = styled.div<{ windowHeight }>`\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    direction: rtl;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n\n    display: flex;\n    direction: rtl;\n    flex-direction: column;\n    align-items: center;\n    height: ${(props) => (props.windowHeight ? `${props.windowHeight - 330}px` : '35rem')};\n    overflow-y: scroll;\n    margin-top: 2rem;\n    padding-left: 0.5rem;\n`;\n\nconst AddGoalButton = styled.button`\n    background-color: #bcb9b9;\n    display: inline-block;\n    color: #faf8f8;\n    font-size: 1em;\n    /* padding: 1rem; */\n    border: none;\n    font-weight: bold;\n\n    &:hover {\n        filter: brightness(85%);\n    }\n`;\n\nconst GoalInput = styled.input`\n    height: 3rem;\n    width: 18rem;\n    color: black;\n    background: #d8d8d8;\n    border: none;\n    font-size: 1em;\n\n    padding-left: 0.5rem;\n    /* border-radius: 0.3rem 0 0 0.3rem; */\n`;\n\nconst DeleteButton = styled.button`\n    background-color: rgba(0, 0, 0, 0);\n    border: none;\n`;\n\ninterface ListRowProps {\n    selected: boolean;\n    checked: boolean;\n    colorMap: Object;\n    goal: string;\n    toDelete: boolean; // check if this row is in deleting state (user clicked delete button but waiting for confirmation / cancellation).\n}\n\nconst NewListRow = styled.div<ListRowProps>`\n  display: flex;\n  direction: ltr;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  vertical-align: middle;\n  line-height: 2.5rem;\n  height: 5rem;\n  margin-bottom: 2rem;\n  width: 19.5rem;\n  border-radius: 0.3rem;\n  border: 1px solid #565656;\n  /* margin-top: 2rem; */\n  background-color: ${(props) => (props.toDelete ? 'red' : '#d8d8d8')}; \n  filter: ${(props) => (props.selected ? 'brightness(65%)' : 'brightness(100%)')};\n  padding-left: 0.5rem;\n  color: black;\n  margin-left: 0.5rem;\n  font-family: \"Avenir Next\" !important;\n\n  &:hover {\n    /* background-color: ${(props) => (props.colorMap && props.goal ? props.colorMap[props.goal] : '#d8d8d8')}; */\n    filter: ${(props) => (props.selected ? 'brightness(65%)' : 'brightness(50%)')};\n  }\n`;\n\nconst ListRowInfo = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n    padding-left: 0.75rem;\n`;\n\nconst Circle = styled.span<{ color }>`\n    height: 2.5rem;\n    width: 2.5rem;\n    background-color: ${(props) => props.color};\n    border-radius: 50%;\n    border: 0.04rem solid black;\n`;\n\nconst Goal = styled.div`\n    color: black;\n    font-size: 1rem;\n    font-family: 'Avenir Next' !important;\n    overflow: auto;\n    height: 29px;\n    margin-bottom: 0;\n    overflow-y: hidden; // hide vertical\n    overflow-x: hidden;\n`;\n\nconst StartDate = styled.div`\n    color: '#A9A9A9';\n    font-size: 0.6rem;\n    font-family: 'Avenir Next' !important;\n    overflow-y: hidden; // hide vertical\n    overflow-x: hidden;\n    height: 25px;\n    padding-bottom: 0.6rem;\n`;\n\nconst ListRowLeft = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n`;\n\nconst ListRowRight = styled.div`\n    display: flex;\n    justify-content: end;\n    align-items: center;\n`;\n\nconst Checkbox = styled.label`\n    margin-right: 0rem;\n    width: 3rem;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { logout } from './utils';\n\nconst monthName = {\n    1: 'Jan',\n    2: 'Feb',\n    3: 'mar',\n    4: 'Apr',\n    5: 'May',\n    6: 'Jun',\n    7: 'Jul',\n    8: 'Aug',\n    9: 'Sept',\n    10: 'Oct',\n    11: 'Nov',\n    12: 'Dec'\n};\n\nexport default function HeaderBar({ curMonth, updateCurMonth, toggleAnalytics }) {\n    return (\n        <Header>\n            <AppTitle>HabitTracker</AppTitle>\n            <VerticalBar />\n            <MonthAndLogoutContainer>\n                <MonthContainer>\n                    <CurMonth>{monthName[curMonth] + ' 2019'}</CurMonth>\n                    <MonthButton\n                        onClick={() => {\n                            if (curMonth != 1) {\n                                updateCurMonth(curMonth - 1);\n                            }\n                        }}>\n                        Prev\n                    </MonthButton>\n                    <MonthButton\n                        onClick={() => {\n                            if (curMonth != 12) {\n                                updateCurMonth(curMonth + 1);\n                            }\n                        }}>\n                        Next\n                    </MonthButton>\n                </MonthContainer>\n                <Button onClick={toggleAnalytics} style={{ borderColor: '#CF2E38', color: '#CF2E38' }}>\n                    Analytics\n                </Button>\n                <Button onClick={logout}>Logout</Button>\n            </MonthAndLogoutContainer>\n        </Header>\n    );\n}\n\nconst AppTitle = styled.h1`\n    font-size: 1.5rem;\n    font-family: 'Montserrat', sans-serif;\n    color: #0d160a;\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n`;\n\nconst MonthContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-evenly;\n`;\n\nconst Header = styled.div`\n    /* display: flex;\n    flex-direction: row;\n    height: 4.4rem;\n    background-color: #d8d8d8;\n    border-bottom: 2px solid #979797; */\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: row;\n    flex-direction: row;\n    height: 4.4rem;\n    background-color: #d8d8d8;\n    border-bottom: 2px solid #979797;\n`;\n\nconst MonthAndLogoutContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    width: 100%;\n    background-color: #d8d8d8;\n`;\n\nconst VerticalBar = styled.div`\n    border-left: 0rem dotted black; // TODO -- DECIDE IF I WANT THIS BAR HERE\n    height: 4.5rem;\n    margin-left: 13.7rem;\n`;\n\nconst CurMonth = styled.div`\n    font-size: 2.5rem;\n    color: #0d160a;\n    margin-left: 3rem;\n    font-family: 'Montserrat', sans-serif;\n    /* font-family: \"Avenir Next\" !important; */\n    margin-right: 1rem;\n    padding-left: 1rem;\n    margin-left: 3rem;\n`;\n\nconst MonthButton = styled.button`\n    display: inline-block;\n\n    font-size: 1em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border: 2px solid;\n\n    border-radius: 3px;\n    display: inline-block;\n    border-radius: 0.3rem;\n\n    background-color: #ededed;\n    border-color: #09868b;\n    color: #09868b;\n\n    &:hover {\n        background-color: #bcb9b9;\n    }\n`;\n\nconst Button = styled.button`\n    display: inline-block;\n\n    font-size: 1em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border: 2px solid;\n    border-radius: 3px;\n    display: inline-block;\n    border-radius: 0.3rem;\n\n    border-color: #09868b;\n    color: #09868b;\n\n    &:hover {\n        background-color: #bcb9b9;\n    }\n`;\n","// TODO -- ADD MORE COLORS TO THIS LIST\n\nexport const GOAL_COLORS = ['#99E897', '#97D4E8', '#CF2E38', '#A797E8', '#DC97E8', '#E8A097', '#D6DE6C'];\n\nexport interface completedDay {\n    date: string;\n    goal: string;\n    notes: string;\n}\n\nexport interface goal {}\n","import React, { useState, useEffect, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { completedDay } from './constants/AppConstants';\nimport { getWindowDimensions } from './Calendar';\nimport { useSpring, animated } from 'react-spring';\nimport { placeholder } from '@babel/types';\n\nexport default function Notes({ selectedDayForNotes, newCompletedDays, handleNoteAdded }) {\n    const [goal, setGoal] = useState(null);\n\n    const [date, setDate] = useState(null);\n\n    const [note, setNote] = useState('');\n\n    const [showSuccess, setShowSuccess] = useState(1);\n\n    const props = useSpring({ opacity: 0, from: { opacity: showSuccess } });\n\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        setWindowDimensions(getWindowDimensions());\n    }, []);\n\n    useEffect(() => {\n        if (selectedDayForNotes) {\n            setGoal(selectedDayForNotes.goal);\n            setDate(selectedDayForNotes.date);\n            setNote(selectedDayForNotes.notes);\n        }\n    }, [selectedDayForNotes, newCompletedDays]);\n\n    return (\n        <Fragment>\n            {selectedDayForNotes ? (\n                <Container>\n                    <NewContainer>\n                        <Fragment>\n                            <SaveButton\n                                onClick={async () => {\n                                    if (goal && date && note.length) {\n                                        const dayToUpdate: completedDay = {\n                                            goal: goal,\n                                            date: date,\n                                            notes: note\n                                        };\n                                        // updateNotesForCompletedDay(auth.uid, dayToUpdate);\n                                        await handleNoteAdded(dayToUpdate);\n                                        await setShowSuccess(showSuccess === 1 ? 0 : 1);\n\n                                        let saveDisplay = document.getElementById('Saved');\n\n                                        saveDisplay.style.opacity = '1';\n                                        saveDisplay.style.opacity = '0';\n                                    }\n                                }}>\n                                Save Note\n                            </SaveButton>\n                            <Header style={{ paddingTop: '.5rem' }}>Note for:</Header>\n                            <Header>{goal}</Header>\n                            <Header style={{ paddingBottom: '1rem', borderBottom: '1px solid black' }}>{date}</Header>\n\n                            <div className='alert'>\n                                <span className='closebtn'>&times;</span>\n                                This is an alert box.\n                            </div>\n\n                            <NotesInput\n                                placeholder={note ? null : `Add Notes for ${goal} on ${date}`}\n                                windowHeight={windowDimensions.height}\n                                onChange={(e) => setNote(e.target.value)}\n                                value={note}\n                            />\n                            <Remainder />\n                        </Fragment>\n                    </NewContainer>\n                </Container>\n            ) : (\n                <Container>\n                    <NewContainer>\n                        <Placeholder windowHeight={windowDimensions.height}>\n                            Click the edit icon on completed day to add a note\n                        </Placeholder>\n                    </NewContainer>\n                </Container>\n            )}\n        </Fragment>\n    );\n}\n\nconst Whatever = styled.div`\n    opacity: 0;\n    -webkit-transition: all 2s ease-out;\n    -moz-transition: all 2s ease-out;\n    -ms-transition: all 2s ease-out;\n    -o-transition: all 2s ease-out;\n    transition: all 2s ease-out;\n`;\n\nconst Placeholder = styled.div<{ windowHeight }>`\n    color: black;\n    width: 17rem;\n    background: #d8d8d8;\n    font-family: 'Avenir Next';\n    height: ${(props) => (props.windowHeight ? `${props.windowHeight}px` : '35rem')};\n    padding-left: 0.5rem;\n    border: none;\n    padding-top: 3rem;\n    /* border-left: 1.5px solid #979797; */\n    background-color: #d8d8d8;\n`;\n\nconst SuccessfulSave = styled(animated.div)<{ success }>`\n    width: 5rem;\n    height: 2rem;\n    background-color: green;\n    opacity: ${(props) => props.success};\n`;\n\nconst Header = styled.h4`\n    font-family: 'Avenir Next';\n    padding-left: 0.3rem;\n    color: black;\n`;\n\nconst SaveButton = styled.button`\n    /* border: 3px solid black; */\n    height: 5rem;\n    background-color: #09868b;\n    font-family: 'Avenir Next';\n    font-size: 1.3rem;\n    color: white;\n\n    &:hover {\n        filter: brightness(85%);\n    }\n`;\n\nconst NewContainer = styled.div`\n    /* display: flex;\n    flex-direction: column;\n    background-color: #d8d8d8; */\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    background-color: #d8d8d8;\n`;\n\nconst Container = styled.div`\n    width: 17rem;\n    background-color: #d8d8d8;\n\n    color: #09868b;\n    border-left: 1.5px solid #979797;\n    position: absolute;\n    right: 0;\n`;\n\nconst NotesInput = styled.textarea<{ windowHeight }>`\n    color: black;\n    width: 17rem;\n    background: #d8d8d8;\n    font-family: 'Avenir Next';\n    height: ${(props) => (props.windowHeight ? `${props.windowHeight - 300}px` : '35rem')};\n    padding-left: 0.5rem;\n    border: none;\n    padding-top: 3rem;\n    /* border-left: 1.5px solid #979797; */\n    background-color: #d8d8d8;\n`;\n\nconst Remainder = styled.div`\n    background: #d8d8d8;\n    height: 200px;\n`;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport BarGraph from './BarGraph';\nimport CommonlyDoneWith from './CommonlyDoneWith';\n\nexport default function Analytics({}) {\n    return (\n        <Container>\n            <Row>Row 1</Row>\n            <Row> Row 2</Row>\n            <Row> Row 3</Row>\n        </Container>\n    );\n}\n\nconst Row = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    /* position: relative;\n    width: 100%;\n    height: 100%; */\n\n    flex: 1;\n\n    background-color: grey;\n    border: 1px solid black;\n`;\n\nconst Container = styled.div`\n    /* display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin-left: 22rem;\n    margin-top: 1rem;\n    overflow: hidden; */\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    flex-direction: column;\n\n    flex: 1;\n\n    margin-left: 24rem;\n    overflow: hidden;\n`;\n","import React, { useState, useEffect, useRef, Fragment } from 'react';\nimport styled from 'styled-components';\nimport useAuth from './useAuth';\nimport GoalsList from './GoalList';\nimport Calendar from './Calendar';\nimport { db } from './fire';\nimport HeaderBar from './HeaderBar';\nimport { GOAL_COLORS, completedDay } from './constants/AppConstants';\nimport Notes from './Notes';\nimport { addCompletedDay, removeCompletedDay, updateNotesForCompletedDay } from './utils';\n\nimport { useSpring, animated } from 'react-spring';\nimport BarGraph from './BarGraph';\nimport Analytics from './Analytics';\n\n// TODO -- I'M NOT CLEARING OUT MY LOCAL TRACK OF COMPLETED DAYS WHEN A GOAL GETS DELETED.\n\nexport default function LoggedIn() {\n    const { auth } = useAuth();\n\n    const [selectedGoals, setSelectedGoals] = useState([]);\n\n    // Color mapping. Goal --> Hex Color\n    const [colorMap, setColorMap] = useState({});\n\n    // The list of the existing goals.\n    const [existingGoals, setExistingGoals] = useState([]);\n\n    // The currently selected goal.\n    const [selected, setSelected] = useState('');\n\n    // Mapping of each goal to the days that are completed (selected).\n    // The old state of the mapping at the time of the app being loaded\n    // const [oldCompletedDays, setOldCompletedDays] = useState({});\n\n    // Mapping of each goal to the days that are completed (selected).\n    // the new state of the mapping as the user makes new selections.\n    const [newCompletedDays, setNewCompletedDays] = useState({});\n\n    const [curMonth, setCurMonth] = useState(null);\n\n    const [goalCreationDateMap, setGoalCreationDateMap] = useState({});\n\n    // Track which completed day we are currently writing notes for.\n    const [selectedDayForNotes, setSelectedDayForNotes] = useState(null);\n\n    // Track if we're on the analytics page or the calendar page.\n    const [showAnalytics, setShowAnalytics] = useState(false);\n\n    const animatedProps = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n    const addHandler = (handler) => window.addEventListener('beforeunload', handler);\n    const removeHandler = (handler) => window.removeEventListener('beforeunload', handler);\n\n    useEffect(() => {\n        console.log('\\n');\n        console.log('===================== LOGGED IN STATE =========================');\n        console.log('selectedGoals: ', selectedGoals);\n        console.log('newCompletedDays:  ', newCompletedDays);\n        console.log('selectedDayForNotes: ', selectedDayForNotes);\n        console.log('colorMap: ', colorMap);\n        console.log('\\n');\n    });\n\n    /**\n     * Save completed days for last viewed goal, before the app window closes or the page is refreshed.\n     */\n    const useWindowUnloadEffect = (handler, callOnCleanup) => {\n        const prevHandler = useRef(null);\n        useEffect(() => {\n            if (prevHandler.current) removeHandler(handler.current); // remove the the current event listener, if one exists\n            prevHandler.current = handler;\n            addHandler(handler);\n            return () => {\n                if (callOnCleanup) handler();\n                removeHandler(handler);\n            };\n        }, [handler]);\n    };\n\n    // Load the current month onto the screen.\n    useEffect(() => {\n        const today = new Date();\n        setCurMonth(today.getMonth() + 1);\n    }, []);\n\n    // Load goals and completed days on component mount (only once).\n    useEffect(() => {\n        fetchGoals();\n        fetchCompletedDays();\n    }, []);\n\n    async function updateCurMonth(month: number) {\n        setCurMonth(month);\n    }\n\n    function timeConverter(date: Date) {\n        return date.toISOString().substring(0, 10);\n    }\n\n    /**\n     * Pull Goal data from the firestore.\n     */\n    function fetchGoals() {\n        db.collection('goals')\n            .doc(auth.uid)\n            .collection('userGoals')\n            .where('uid', '==', auth.uid)\n            .get()\n            .then((snapshot) => {\n                const existingGoals: any[] = [];\n                const existingColorMap = {};\n                const createdDateMap = {};\n                snapshot.docs.forEach((doc) => {\n                    if (doc.data().goal) {\n                        existingGoals.push(doc.data().goal);\n                        existingColorMap[doc.data().goal] = doc.data().color;\n\n                        createdDateMap[doc.data().goal] = timeConverter(new Date(doc.data().created));\n                    }\n                });\n\n                existingGoals.sort((a, b) => a.created - b.created);\n\n                // Set the initially selected goal\n\n                const selected: [string] = [selectedGoals[0]];\n                setSelectedGoals(selected);\n\n                setSelected(existingGoals[0]);\n                handleGoalSelected(existingGoals[0]);\n                setExistingGoals(existingGoals);\n                setColorMap(existingColorMap);\n\n                setGoalCreationDateMap(createdDateMap);\n            });\n    }\n\n    /**\n     * Load a mapping of each goal to its list of completed dates.\n     */\n    function fetchCompletedDays() {\n        db.collection('completed')\n            .doc(auth.uid)\n            .collection('daysCompleted')\n            .get()\n            .then((snapshot) => {\n                const datesCompleted: any[] = [];\n\n                snapshot.docs.forEach((doc) => {\n                    const goal = doc.data().goal;\n                    const date = doc.data().date;\n                    const notes = doc.data().notes ? doc.data().notes : '';\n                    datesCompleted.push({ goal: goal, date: date, notes: notes });\n                });\n\n                const datesCompletedMap = {};\n                datesCompleted.forEach((data) => {\n                    if (data.goal in datesCompletedMap) {\n                        datesCompletedMap[data.goal].push({\n                            date: data.date,\n                            notes: data.notes\n                        });\n                    } else {\n                        datesCompletedMap[data.goal] = [{ date: data.date, notes: data.notes }];\n                    }\n                });\n                // setOldCompletedDays(JSON.parse(JSON.stringify(datesCompletedMap)));\n                setNewCompletedDays(datesCompletedMap);\n            });\n    }\n\n    /**\n     * Returns the new hex code to use.\n     * @param goal\n     */\n    function addToColorMap(goal: string): string {\n        let nextHexColor = null;\n        // Watch for null pointer exception\n        const colorsInUse = Object.values(colorMap);\n\n        console.log('add to color map:  ', colorsInUse, GOAL_COLORS);\n\n        for (let i = 0; i < GOAL_COLORS.length; i++) {\n            if (!colorsInUse.includes(GOAL_COLORS[i])) {\n                nextHexColor = GOAL_COLORS[i];\n                break;\n            }\n        }\n\n        const updatedMap = colorMap;\n        updatedMap[goal] = nextHexColor;\n        setColorMap(updatedMap);\n\n        return nextHexColor;\n    }\n\n    /**\n     * TODO -- DECIDE IF I SHOULD KEEP THIS. NOT REALLY NEEDED SINCE THE\n     * COLOR MAP WILL REMOVE THE DELETED GOAL'S COLOR ON REFRESH ANYWAY.\n     * @param goal\n     */\n    function removeFromColorMap(goal: string) {\n        const updatedMap = colorMap;\n\n        console.log('remove from color map: ');\n\n        Object.keys(updatedMap).forEach((key) => {\n            console.log(key, goal);\n            if (key == goal) {\n                delete updatedMap[goal];\n            }\n        });\n        setColorMap(updatedMap);\n    }\n\n    /**\n     * Add newly selected goal to selectedGoalss state.\n     * @param goal\n     * @param goalToRemove\n     */\n    function handleGoalSelected(goal: string, goalsToRemove?: string[]) {\n        console.log('handleGoalSelected', goal, goalsToRemove);\n\n        if (!(selectedGoals.includes(goal) && selectedGoals.length === 1)) {\n            let updateSelected = selectedGoals.includes(goal) ? [...selectedGoals] : [...selectedGoals, goal];\n\n            if (goalsToRemove) {\n                updateSelected = updateSelected.filter((g) => !goalsToRemove.includes(g) || g == goal);\n            }\n            setSelectedGoals(updateSelected);\n        }\n    }\n\n    /**\n     * Remove goal from selectedGoals state.\n     * @param goal\n     */\n    function handleGoalRemoved(goal: string) {\n        if (selectedGoals.includes(goal)) {\n            const filteredSelectedGoals = selectedGoals.filter((g) => {\n                return g != goal;\n            });\n\n            // removeDaysCompleted(auth.uid, goal);\n            // removeFromColorMap(goal);\n            setSelectedGoals([...filteredSelectedGoals]);\n        }\n    }\n\n    /**\n     * Add this day to this goal's list of completed days.\n     * @param date\n     * @param goal\n     */\n    function handleDayCompleted(date: string, goal: string) {\n        const completedDay: completedDay = {\n            date: date,\n            goal: goal,\n            notes: ''\n        };\n\n        // Make firestore call to save completed date.\n        addCompletedDay(auth.uid, completedDay);\n\n        const update: Object = JSON.parse(JSON.stringify(newCompletedDays));\n        update[goal] = update[goal] ? [...update[goal], { date: date, notes: '' }] : [{ date: date, notes: '' }];\n\n        setNewCompletedDays(update);\n    }\n\n    /**\n     * Remove this day from this goal's list of completed days.\n     * @param date\n     * @param goal\n     */\n    function handleDayRemoved(date: string, goal: string) {\n        // Make firestore call to remove completed date.\n        removeCompletedDay(auth.uid, goal, date);\n\n        const update: Object = JSON.parse(JSON.stringify(newCompletedDays));\n        update[goal] = update[goal].filter((curDate) => curDate.date !== date);\n        setNewCompletedDays(update);\n    }\n\n    function updateSelected(goal: string) {\n        // batchUpdateCompletedDays(selected);\n        if (GoalsList) setSelected(goal);\n    }\n\n    function handleNoteSelected(date: string, goal: string) {\n        let notes = null;\n\n        if (newCompletedDays && newCompletedDays[goal]) {\n            const day = newCompletedDays[goal].find((e) => {\n                return e.date === date;\n            });\n\n            if (day) {\n                notes = day.notes;\n            }\n        }\n\n        const selectedDay: completedDay = {\n            date: date,\n            goal: goal,\n            notes: notes\n        };\n\n        setSelectedDayForNotes(selectedDay);\n    }\n\n    async function handleNoteAdded(day: completedDay) {\n        // update newSelectedDays to update this selected day's notes property\n\n        const update: Object = JSON.parse(JSON.stringify(newCompletedDays));\n\n        let dateIndex = update[day.goal].findIndex((obj) => obj.date == day.date);\n\n        console.log('handleNoteAdded: ', dateIndex, day.date, update[day.goal]);\n\n        if (dateIndex != null && dateIndex != undefined) {\n            update[day.goal][dateIndex].notes = day.notes;\n            setNewCompletedDays(update);\n            setSelectedDayForNotes(day);\n\n            await updateNotesForCompletedDay(auth.uid, day);\n        }\n    }\n\n    return (\n        <animated.div style={animatedProps}>\n            <Container className='this-one'>\n                <HeaderBar\n                    curMonth={curMonth}\n                    updateCurMonth={updateCurMonth}\n                    toggleAnalytics={() => setShowAnalytics(!showAnalytics)}\n                />\n                <CalendarAndGoalsContainer>\n                    <GoalsList\n                        existingGoals={existingGoals}\n                        colorMap={colorMap}\n                        updateSelected={updateSelected}\n                        addToColorMap={addToColorMap}\n                        removeFromColorMap={removeFromColorMap}\n                        handleGoalSelected={handleGoalSelected}\n                        handleGoalRemoved={handleGoalRemoved}\n                        selectedGoals={selectedGoals}\n                        creationDateMap={goalCreationDateMap}\n                    />\n                    <CalendarContainer>\n                        {showAnalytics ? (\n                            <Analytics />\n                        ) : (\n                            <Calendar\n                                key='calendar1'\n                                curMonth={curMonth}\n                                curGoal={selected}\n                                newCompletedDays={newCompletedDays}\n                                colorMap={colorMap}\n                                selectedGoals={selectedGoals}\n                                handleDayCompleted={handleDayCompleted}\n                                handleDayRemoved={handleDayRemoved}\n                                handleNoteSelected={handleNoteSelected}\n                            />\n                        )}\n                    </CalendarContainer>\n                    <Notes\n                        selectedDayForNotes={selectedDayForNotes}\n                        newCompletedDays={newCompletedDays}\n                        handleNoteAdded={handleNoteAdded}\n                    />\n                </CalendarAndGoalsContainer>\n            </Container>\n        </animated.div>\n    );\n}\n\nconst CalendarContainer = styled.div`\n    -webkit-box-flex: 1;\n    -ms-flex: 1;\n\n    flex: 1;\n    margin-top: 1rem;\n    padding-right: 17rem;\n    padding-left: 2rem;\n    padding-top: 2rem;\n`;\n\nconst CalendarAndGoalsContainer = styled.div`\n    display: -webkit-box;\n    display: -ms-flexbox;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: row;\n\n    -webkit-box-pack: justify;\n    -ms-flex-pack: justify;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n`;\n\nconst Container = styled.div`\n    display: -webkit-box;\n    display: -ms-flexbox;\n\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n\n    -webkit-box-flex: 1;\n    -ms-flex: 1;\n\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    flex: 1;\n`;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { AppStateProvider } from './app-state';\nimport appReducer, { initialState } from './appReducer';\nimport LoggedOut from './LoggedOut';\nimport LoggedIn from './LoggedIn';\n\nimport useAuth from './useAuth';\n\nfunction App() {\n    const { authAttempted, auth } = useAuth();\n\n    useEffect(() => {\n        document.getElementById('root').style.overflow = 'hidden';\n    });\n\n    if (!authAttempted) return null;\n    return (\n        <Container>\n            {auth ? (\n                <AppContainer>\n                    <LoggedIn />\n                </AppContainer>\n            ) : (\n                <LoggedOut />\n            )}\n        </Container>\n    );\n}\n\nconst Container = styled.div`\n    overflow-y: hidden !important;\n    height: 100%;\n`;\n\nconst AppContainer = styled.div`\n    /* display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow-y: hidden; */\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    height: 100%;\n    overflow-y: hidden;\n`;\n\nexport default () => (\n    <AppStateProvider reducer={appReducer} initialState={initialState}>\n        <App />\n    </AppStateProvider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./App.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}